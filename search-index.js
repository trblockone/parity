var searchIndex = {};
searchIndex["parity"] = {"doc":"Ethcore client application.","items":[],"paths":[]};
searchIndex["ethcore_dapps"] = {"doc":"Ethcore Webapplications for Parity\n```\nextern crate jsonrpc_core;\nextern crate ethcore_dapps;","items":[[3,"ServerBuilder","ethcore_dapps","Webapps HTTP+RPC server build.",null,null],[3,"Server","","Webapps HTTP server.",null,null],[4,"ServerError","","Webapp Server startup error",null,null],[13,"IoError","","Wrapped `std::io::Error`",0,null],[13,"Other","","Other `hyper` error",0,null],[5,"random_filename","","Random filename",null,{"inputs":[],"output":{"name":"string"}}],[8,"SyncStatus","","Indicates sync status",null,null],[10,"is_major_importing","","Returns true if there is a major sync happening.",1,null],[11,"add_delegate","","",2,null],[11,"new","","Construct new dapps server",2,{"inputs":[{"name":"string"},{"name":"arc"}],"output":{"name":"self"}}],[11,"with_sync_status","","Change default sync status.",2,null],[11,"with_signer_address","","Change default signer port.",2,null],[11,"start_unsecured_http","","Asynchronously start server with no authentication,\nreturns result with `Server` handle on success or an error.",2,null],[11,"start_basic_auth_http","","Asynchronously start server with `HTTP Basic Authentication`,\nreturn result with `Server` handle on success or an error.",2,null],[11,"set_panic_handler","","Set callback for panics.",3,null],[11,"drop","","",3,null],[11,"fmt","","",0,null],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"self"}}]],"paths":[[4,"ServerError"],[8,"SyncStatus"],[3,"ServerBuilder"],[3,"Server"]]};
searchIndex["ethcore_signer"] = {"doc":"Signer module","items":[[3,"DefaultTimeProvider","ethcore_signer","Default implementation of `TimeProvider` using system time.",null,null],[3,"AuthCodes","","Manages authorization codes for `SignerUIs`",null,null],[3,"ServerBuilder","","Builder for `WebSockets` server",null,null],[3,"Server","","`WebSockets` server implementation.",null,null],[4,"ServerError","","Signer startup error",null,null],[13,"IoError","","Wrapped `std::io::Error`",0,null],[13,"WebSocket","","Other `ws-rs` error",0,null],[11,"default","","",1,{"inputs":[],"output":{"name":"defaulttimeprovider"}}],[11,"now","","",1,null],[11,"from_file","","Reads `AuthCodes` from file and creates new instance using `DefaultTimeProvider`.",2,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"to_file","","Writes all `AuthCodes` to a disk.",2,null],[11,"new","","Creates a new `AuthCodes` store with given `TimeProvider`.",2,{"inputs":[{"name":"vec"},{"name":"t"}],"output":{"name":"self"}}],[11,"is_valid","","Checks if given hash is correct authcode of `SignerUI`\nUpdates this hash last used field in case it&#39;s valid.",2,null],[11,"generate_new","","Generates and returns a new code that can be used by `SignerUIs`",2,null],[11,"is_empty","","Returns true if there are no tokens in this store",2,null],[11,"clear_garbage","","Removes old tokens that have not been used since creation.",2,null],[11,"fmt","","",0,null],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"add_delegate","","",3,null],[11,"new","","Creates new `ServerBuilder`",3,{"inputs":[{"name":"arc"},{"name":"pathbuf"}],"output":{"name":"self"}}],[11,"skip_origin_validation","","If set to `true` server will not verify Origin of incoming requests.\nNot recommended. Use only for development.",3,null],[11,"start","","Starts a new `WebSocket` server in separate thread.\nReturns a `Server` handle which closes the server when droped.",3,null],[11,"addr","","Returns the address this server is listening on",4,null],[11,"on_panic","","",4,null],[11,"drop","","",4,null],[8,"TimeProvider","","Providing current time in seconds",null,null],[10,"now","","Returns timestamp (in seconds since epoch)",5,null]],"paths":[[4,"ServerError"],[3,"DefaultTimeProvider"],[3,"AuthCodes"],[3,"ServerBuilder"],[3,"Server"],[8,"TimeProvider"]]};
searchIndex["ethcore_rpc"] = {"doc":"Ethcore rpc.","items":[[3,"ServerBuilder","ethcore_rpc","Convenient JSON-RPC HTTP Server builder.",null,null],[3,"Server","","jsonrpc http server instance",null,null],[4,"RpcServerError","","RPC Server startup error.",null,null],[13,"IoError","","IO Error",0,null],[13,"Other","","Other Error (hyper)",0,null],[3,"SignerService","","Manages communication with Signer crate",null,null],[3,"ConfirmationsQueue","","Queue for all unconfirmed requests.",null,null],[3,"NetworkSettings","","Networking &amp; RPC settings",null,null],[12,"name","","Node name",1,null],[12,"chain","","Name of the chain we are connected to",1,null],[12,"network_port","","Networking port",1,null],[12,"rpc_enabled","","Is JSON-RPC server enabled?",1,null],[12,"rpc_interface","","Interface that JSON-RPC listens on",1,null],[12,"rpc_port","","Port for JSON-RPC server",1,null],[3,"RpcServer","","Http server.",null,null],[5,"is_major_importing","","Check if client is during major sync or during block import.",null,{"inputs":[{"name":"option"},{"name":"blockqueueinfo"}],"output":{"name":"bool"}}],[0,"v1","","Ethcore rpc v1.",null,null],[3,"Web3Client","ethcore_rpc::v1","Web3 rpc implementation.",null,null],[3,"EthClient","","Eth rpc implementation.",null,null],[3,"EthClientOptions","","Eth RPC options",null,null],[12,"allow_pending_receipt_query","","Returns receipt from pending blocks",2,null],[12,"send_block_number_in_get_work","","Send additional block number when asking for work",2,null],[3,"EthFilterClient","","Eth filter rpc implementation.",null,null],[3,"NetClient","","Net rpc implementation.",null,null],[3,"ParityClient","","Parity implementation.",null,null],[3,"ParityAccountsClient","","Account management (personal) rpc implementation.",null,null],[3,"ParitySetClient","","Parity-specific rpc interface for operations altering the settings.",null,null],[3,"PersonalClient","","Account management (personal) rpc implementation.",null,null],[3,"SignerClient","","Transactions confirmation (personal) rpc implementation.",null,null],[3,"SigningQueueClient","","Implementation of functions that require signing when no trusted signer is used.",null,null],[3,"SigningUnsafeClient","","Implementation of functions that require signing when no trusted signer is used.",null,null],[3,"TracesClient","","Traces api implementation.",null,null],[3,"RpcClient","","RPC generic methods implementation.",null,null],[3,"SignerService","","Manages communication with Signer crate",null,null],[3,"ConfirmationsQueue","","Queue for all unconfirmed requests.",null,null],[3,"NetworkSettings","","Networking &amp; RPC settings",null,null],[12,"name","","Node name",1,null],[12,"chain","","Name of the chain we are connected to",1,null],[12,"network_port","","Networking port",1,null],[12,"rpc_enabled","","Is JSON-RPC server enabled?",1,null],[12,"rpc_interface","","Interface that JSON-RPC listens on",1,null],[12,"rpc_port","","Port for JSON-RPC server",1,null],[11,"new","ethcore_rpc","Creates new Signer Service given function to generate new tokens.",3,{"inputs":[{"name":"f"},{"name":"option"}],"output":{"name":"self"}}],[11,"generate_token","","Generates new token.",3,null],[11,"queue","","Returns a reference to `ConfirmationsQueue`",3,null],[11,"address","","Returns signer address (if signer enabled) or `None` otherwise",3,null],[11,"is_enabled","","Returns true if Signer is enabled.",3,null],[11,"deref","","",3,null],[11,"default","","",4,{"inputs":[],"output":{"name":"self"}}],[11,"start_listening","","Blocks the thread and starts listening for notifications regarding all actions in the queue.\nFor each event, `listener` callback will be invoked.\nThis method can be used only once (only single consumer of events can exist).",4,null],[11,"finish","","Notifies consumer that the communcation is over.\nNo more events will be sent after this function is invoked.",4,null],[11,"drop","","",4,null],[11,"add_request","","",4,null],[11,"peek","","",4,null],[11,"request_rejected","","",4,null],[11,"request_confirmed","","",4,null],[11,"requests","","",4,null],[11,"len","","",4,null],[11,"is_empty","","",4,null],[11,"fmt","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"clone","","",1,null],[11,"default","","",1,{"inputs":[],"output":{"name":"self"}}],[11,"default","ethcore_rpc::v1","",2,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Creates new EthClient.",5,{"inputs":[{"name":"arc"},{"name":"arc"},{"name":"arc"},{"name":"arc"},{"name":"arc"},{"name":"arc"},{"name":"ethclientoptions"}],"output":{"name":"self"}}],[11,"protocol_version","","",5,null],[11,"syncing","","",5,null],[11,"author","","",5,null],[11,"is_mining","","",5,null],[11,"hashrate","","",5,null],[11,"gas_price","","",5,null],[11,"accounts","","",5,null],[11,"block_number","","",5,null],[11,"balance","","",5,null],[11,"storage_at","","",5,null],[11,"transaction_count","","",5,null],[11,"block_transaction_count_by_hash","","",5,null],[11,"block_transaction_count_by_number","","",5,null],[11,"block_uncles_count_by_hash","","",5,null],[11,"block_uncles_count_by_number","","",5,null],[11,"code_at","","",5,null],[11,"block_by_hash","","",5,null],[11,"block_by_number","","",5,null],[11,"transaction_by_hash","","",5,null],[11,"transaction_by_block_hash_and_index","","",5,null],[11,"transaction_by_block_number_and_index","","",5,null],[11,"transaction_receipt","","",5,null],[11,"uncle_by_block_hash_and_index","","",5,null],[11,"uncle_by_block_number_and_index","","",5,null],[11,"compilers","","",5,null],[11,"logs","","",5,null],[11,"work","","",5,null],[11,"submit_work","","",5,null],[11,"submit_hashrate","","",5,null],[11,"send_raw_transaction","","",5,null],[11,"submit_transaction","","",5,null],[11,"call","","",5,null],[11,"estimate_gas","","",5,null],[11,"compile_lll","","",5,null],[11,"compile_serpent","","",5,null],[11,"compile_solidity","","",5,null],[11,"new","","Creates new Eth filter client.",6,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"self"}}],[11,"new_filter","","",6,null],[11,"new_block_filter","","",6,null],[11,"new_pending_transaction_filter","","",6,null],[11,"filter_changes","","",6,null],[11,"filter_logs","","",6,null],[11,"uninstall_filter","","",6,null],[11,"new","","Creates new NetClient.",7,{"inputs":[{"name":"arc"}],"output":{"name":"self"}}],[11,"version","","",7,null],[11,"peer_count","","",7,null],[11,"is_listening","","",7,null],[11,"new","","Creates new `ParityClient`.",8,{"inputs":[{"name":"arc"},{"name":"arc"},{"name":"arc"},{"name":"arc"},{"name":"arc"},{"name":"arc"},{"name":"arc"},{"name":"option"},{"name":"option"},{"name":"option"}],"output":{"name":"self"}}],[11,"transactions_limit","","",8,null],[11,"min_gas_price","","",8,null],[11,"extra_data","","",8,null],[11,"gas_floor_target","","",8,null],[11,"gas_ceil_target","","",8,null],[11,"dev_logs","","",8,null],[11,"dev_logs_levels","","",8,null],[11,"net_chain","","",8,null],[11,"net_peers","","",8,null],[11,"net_port","","",8,null],[11,"node_name","","",8,null],[11,"registry_address","","",8,null],[11,"rpc_settings","","",8,null],[11,"default_extra_data","","",8,null],[11,"gas_price_histogram","","",8,null],[11,"unsigned_transactions_count","","",8,null],[11,"generate_secret_phrase","","",8,null],[11,"phrase_to_address","","",8,null],[11,"list_accounts","","",8,null],[11,"list_storage_keys","","",8,null],[11,"encrypt_message","","",8,null],[11,"pending_transactions","","",8,null],[11,"pending_transactions_stats","","",8,null],[11,"local_transactions","","",8,null],[11,"signer_port","","",8,null],[11,"dapps_port","","",8,null],[11,"dapps_interface","","",8,null],[11,"next_nonce","","",8,null],[11,"mode","","",8,null],[11,"enode","","",8,null],[11,"accounts","","",8,null],[11,"new","","Creates new PersonalClient",9,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"self"}}],[11,"accounts_info","","",9,null],[11,"new_account_from_phrase","","",9,null],[11,"new_account_from_wallet","","",9,null],[11,"new_account_from_secret","","",9,null],[11,"test_password","","",9,null],[11,"change_password","","",9,null],[11,"kill_account","","",9,null],[11,"set_account_name","","",9,null],[11,"set_account_meta","","",9,null],[11,"set_account_visibility","","",9,null],[11,"import_geth_accounts","","",9,null],[11,"geth_accounts","","",9,null],[11,"new","","Creates new `ParitySetClient` with default `FetchClient`.",10,{"inputs":[{"name":"arc"},{"name":"arc"},{"name":"arc"}],"output":{"name":"self"}}],[11,"with_fetch","","Creates new `ParitySetClient` with default `FetchClient`.",10,{"inputs":[{"name":"arc"},{"name":"arc"},{"name":"arc"}],"output":{"name":"self"}}],[11,"set_min_gas_price","","",10,null],[11,"set_gas_floor_target","","",10,null],[11,"set_gas_ceil_target","","",10,null],[11,"set_extra_data","","",10,null],[11,"set_author","","",10,null],[11,"set_transactions_limit","","",10,null],[11,"set_tx_gas_limit","","",10,null],[11,"add_reserved_peer","","",10,null],[11,"remove_reserved_peer","","",10,null],[11,"drop_non_reserved_peers","","",10,null],[11,"accept_non_reserved_peers","","",10,null],[11,"start_network","","",10,null],[11,"stop_network","","",10,null],[11,"set_mode","","",10,null],[11,"hash_content","","",10,null],[11,"new","","Creates new PersonalClient",11,{"inputs":[{"name":"arc"},{"name":"arc"},{"name":"arc"},{"name":"bool"}],"output":{"name":"self"}}],[11,"accounts","","",11,null],[11,"new_account","","",11,null],[11,"unlock_account","","",11,null],[11,"sign_and_send_transaction","","",11,null],[11,"new","","Create new instance of signer client.",12,{"inputs":[{"name":"arc"},{"name":"arc"},{"name":"arc"},{"name":"arc"}],"output":{"name":"self"}}],[11,"requests_to_confirm","","",12,null],[11,"confirm_request","","",12,null],[11,"confirm_request_raw","","",12,null],[11,"reject_request","","",12,null],[11,"generate_token","","",12,null],[11,"new","","Creates a new signing queue client given shared signing queue.",13,{"inputs":[{"name":"arc"},{"name":"arc"},{"name":"arc"},{"name":"arc"}],"output":{"name":"self"}}],[11,"post_sign","","",13,null],[11,"post_transaction","","",13,null],[11,"check_request","","",13,null],[11,"decrypt_message","","",13,null],[11,"sign","","",13,null],[11,"send_transaction","","",13,null],[11,"sign_transaction","","",13,null],[11,"new","","Creates new SigningUnsafeClient.",14,{"inputs":[{"name":"arc"},{"name":"arc"},{"name":"arc"}],"output":{"name":"self"}}],[11,"sign","","",14,null],[11,"send_transaction","","",14,null],[11,"sign_transaction","","",14,null],[11,"decrypt_message","","",14,null],[11,"post_sign","","",14,null],[11,"post_transaction","","",14,null],[11,"check_request","","",14,null],[11,"new","","Creates new `RpcClient`.",15,{"inputs":[{"name":"btreemap"}],"output":{"name":"self"}}],[11,"rpc_modules","","",15,null],[11,"modules","","",15,null],[11,"new","","Creates new Traces client.",16,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"self"}}],[11,"filter","","",16,null],[11,"block_traces","","",16,null],[11,"transaction_traces","","",16,null],[11,"trace","","",16,null],[11,"call","","",16,null],[11,"raw_transaction","","",16,null],[11,"replay_transaction","","",16,null],[11,"new","","Creates new Web3Client.",17,{"inputs":[],"output":{"name":"self"}}],[11,"client_version","","",17,null],[11,"sha3","","",17,null],[0,"traits","","Ethereum rpc interfaces.",null,null],[0,"web3","ethcore_rpc::v1::traits","Web3 rpc interface.",null,null],[8,"Web3","ethcore_rpc::v1::traits::web3","Web3 rpc interface.",null,null],[10,"client_version","","Returns current client version.",18,null],[10,"sha3","","Returns sha3 of the given data",18,null],[11,"to_delegate","","Transform this into an `IoDelegate`, automatically wrapping\nthe parameters.",18,null],[0,"eth","ethcore_rpc::v1::traits","Eth rpc interface.",null,null],[8,"Eth","ethcore_rpc::v1::traits::eth","Eth rpc interface.",null,null],[10,"protocol_version","","Returns protocol version encoded as a string (quotes are necessary).",19,null],[10,"syncing","","Returns an object with data about the sync status or false. (wtf?)",19,null],[10,"hashrate","","Returns the number of hashes per second that the node is mining with.",19,null],[10,"author","","Returns block author.",19,null],[10,"is_mining","","Returns true if client is actively mining new blocks.",19,null],[10,"gas_price","","Returns current gas_price.",19,null],[10,"accounts","","Returns accounts list.",19,null],[10,"block_number","","Returns highest block number.",19,null],[10,"balance","","Returns balance of the given account.",19,null],[10,"storage_at","","Returns content of the storage at given address.",19,null],[10,"block_by_hash","","Returns block with given hash.",19,null],[10,"block_by_number","","Returns block with given number.",19,null],[10,"transaction_count","","Returns the number of transactions sent from given address at given time (block number).",19,null],[10,"block_transaction_count_by_hash","","Returns the number of transactions in a block with given hash.",19,null],[10,"block_transaction_count_by_number","","Returns the number of transactions in a block with given block number.",19,null],[10,"block_uncles_count_by_hash","","Returns the number of uncles in a block with given hash.",19,null],[10,"block_uncles_count_by_number","","Returns the number of uncles in a block with given block number.",19,null],[10,"code_at","","Returns the code at given address at given time (block number).",19,null],[10,"send_raw_transaction","","Sends signed transaction, returning its hash.",19,null],[10,"submit_transaction","","Alias of `eth_sendRawTransaction`.",19,null],[10,"call","","Call contract, returning the output data.",19,null],[10,"estimate_gas","","Estimate gas needed for execution of given contract.",19,null],[10,"transaction_by_hash","","Get transaction by its hash.",19,null],[10,"transaction_by_block_hash_and_index","","Returns transaction at given block hash and index.",19,null],[10,"transaction_by_block_number_and_index","","Returns transaction by given block number and index.",19,null],[10,"transaction_receipt","","Returns transaction receipt.",19,null],[10,"uncle_by_block_hash_and_index","","Returns an uncles at given block and index.",19,null],[10,"uncle_by_block_number_and_index","","Returns an uncles at given block and index.",19,null],[10,"compilers","","Returns available compilers.",19,null],[10,"compile_lll","","Compiles lll code.",19,null],[10,"compile_solidity","","Compiles solidity.",19,null],[10,"compile_serpent","","Compiles serpent.",19,null],[10,"logs","","Returns logs matching given filter object.",19,null],[10,"work","","Returns the hash of the current block, the seedHash, and the boundary condition to be met.",19,null],[10,"submit_work","","Used for submitting a proof-of-work solution.",19,null],[10,"submit_hashrate","","Used for submitting mining hashrate.",19,null],[11,"to_delegate","","Transform this into an `IoDelegate`, automatically wrapping\nthe parameters.",19,null],[8,"EthFilter","","Eth filters rpc api (polling).",null,null],[10,"new_filter","","Returns id of new filter.",20,null],[10,"new_block_filter","","Returns id of new block filter.",20,null],[10,"new_pending_transaction_filter","","Returns id of new block filter.",20,null],[10,"filter_changes","","Returns filter changes since last poll.",20,null],[10,"filter_logs","","Returns all logs matching given filter (in a range &#39;from&#39; - &#39;to&#39;).",20,null],[10,"uninstall_filter","","Uninstalls filter.",20,null],[11,"to_delegate","","Transform this into an `IoDelegate`, automatically wrapping\nthe parameters.",20,null],[0,"eth_signing","ethcore_rpc::v1::traits","Eth rpc interface.",null,null],[8,"EthSigning","ethcore_rpc::v1::traits::eth_signing","Signing methods implementation relying on unlocked accounts.",null,null],[10,"sign","","Signs the data with given address signature.",21,null],[10,"send_transaction","","Sends transaction; will block waiting for signer to return the\ntransaction hash.\nIf Signer is disable it will require the account to be unlocked.",21,null],[10,"sign_transaction","","Signs transactions without dispatching it to the network.\nReturns signed transaction RLP representation and the transaction itself.\nIt can be later submitted using `eth_sendRawTransaction/eth_submitTransaction`.",21,null],[11,"to_delegate","","Transform this into an `IoDelegate`, automatically wrapping\nthe parameters.",21,null],[0,"net","ethcore_rpc::v1::traits","Net rpc interface.",null,null],[8,"Net","ethcore_rpc::v1::traits::net","Net rpc interface.",null,null],[10,"version","","Returns protocol version.",22,null],[10,"peer_count","","Returns number of peers connected to node.",22,null],[10,"is_listening","","Returns true if client is actively listening for network connections.\nOtherwise false.",22,null],[11,"to_delegate","","Transform this into an `IoDelegate`, automatically wrapping\nthe parameters.",22,null],[0,"parity","ethcore_rpc::v1::traits","Parity-specific rpc interface.",null,null],[8,"Parity","ethcore_rpc::v1::traits::parity","Parity-specific rpc interface.",null,null],[10,"transactions_limit","","Returns current transactions limit.",23,null],[10,"extra_data","","Returns mining extra data.",23,null],[10,"gas_floor_target","","Returns mining gas floor target.",23,null],[10,"gas_ceil_target","","Returns mining gas floor cap.",23,null],[10,"min_gas_price","","Returns minimal gas price for transaction to be included in queue.",23,null],[10,"dev_logs","","Returns latest logs",23,null],[10,"dev_logs_levels","","Returns logs levels",23,null],[10,"net_chain","","Returns chain name",23,null],[10,"net_peers","","Returns peers details",23,null],[10,"net_port","","Returns network port",23,null],[10,"rpc_settings","","Returns rpc settings",23,null],[10,"node_name","","Returns node name",23,null],[10,"default_extra_data","","Returns default extra data",23,null],[10,"gas_price_histogram","","Returns distribution of gas price in latest blocks.",23,null],[10,"unsigned_transactions_count","","Returns number of unsigned transactions waiting in the signer queue (if signer enabled)\nReturns error when signer is disabled",23,null],[10,"generate_secret_phrase","","Returns a cryptographically random phrase sufficient for securely seeding a secret key.",23,null],[10,"phrase_to_address","","Returns whatever address would be derived from the given phrase if it were to seed a brainwallet.",23,null],[10,"registry_address","","Returns the value of the registrar for this network.",23,null],[10,"list_accounts","","Returns all addresses if Fat DB is enabled (`--fat-db`), or null if not.",23,null],[10,"list_storage_keys","","Returns all storage keys of the given address (first parameter) if Fat DB is enabled (`--fat-db`),\nor null if not.",23,null],[10,"encrypt_message","","Encrypt some data with a public key under ECIES.\nFirst parameter is the 512-byte destination public key, second is the message.",23,null],[10,"pending_transactions","","Returns all pending transactions from transaction queue.",23,null],[10,"pending_transactions_stats","","Returns propagation statistics on transactions pending in the queue.",23,null],[10,"local_transactions","","Returns a list of current and past local transactions with status details.",23,null],[10,"signer_port","","Returns current Trusted Signer port or an error if signer is disabled.",23,null],[10,"dapps_port","","Returns current Dapps Server port or an error if dapps server is disabled.",23,null],[10,"dapps_interface","","Returns current Dapps Server interface address or an error if dapps server is disabled.",23,null],[10,"next_nonce","","Returns next nonce for particular sender. Should include all transactions in the queue.",23,null],[10,"mode","","Get the mode. Results one of: &quot;active&quot;, &quot;passive&quot;, &quot;dark&quot;, &quot;offline&quot;.",23,null],[10,"enode","","Get the enode of this node.",23,null],[10,"accounts","","Returns accounts information.",23,null],[11,"to_delegate","","Transform this into an `IoDelegate`, automatically wrapping\nthe parameters.",23,null],[0,"parity_accounts","ethcore_rpc::v1::traits","Parity Accounts-related rpc interface.",null,null],[8,"ParityAccounts","ethcore_rpc::v1::traits::parity_accounts","Personal Parity rpc interface.",null,null],[10,"accounts_info","","Returns accounts information.",24,null],[10,"new_account_from_phrase","","Creates new account from the given phrase using standard brainwallet mechanism.\nSecond parameter is password for the new account.",24,null],[10,"new_account_from_wallet","","Creates new account from the given JSON wallet.\nSecond parameter is password for the wallet and the new account.",24,null],[10,"new_account_from_secret","","Creates new account from the given raw secret.\nSecond parameter is password for the new account.",24,null],[10,"test_password","","Returns true if given `password` would unlock given `account`.\nArguments: `account`, `password`.",24,null],[10,"change_password","","Changes an account&#39;s password.\nArguments: `account`, `password`, `new_password`.",24,null],[10,"kill_account","","Permanently deletes an account.\nArguments: `account`, `password`.",24,null],[10,"set_account_name","","Set an account&#39;s name.",24,null],[10,"set_account_meta","","Set an account&#39;s metadata string.",24,null],[10,"set_account_visibility","","Returns accounts information.",24,null],[10,"import_geth_accounts","","Imports a number of Geth accounts, with the list provided as the argument.",24,null],[10,"geth_accounts","","Returns the accounts available for importing from Geth.",24,null],[11,"to_delegate","","Transform this into an `IoDelegate`, automatically wrapping\nthe parameters.",24,null],[0,"parity_set","ethcore_rpc::v1::traits","Parity-specific rpc interface for operations altering the settings.",null,null],[8,"ParitySet","ethcore_rpc::v1::traits::parity_set","Parity-specific rpc interface for operations altering the settings.",null,null],[10,"set_min_gas_price","","Sets new minimal gas price for mined blocks.",25,null],[10,"set_gas_floor_target","","Sets new gas floor target for mined blocks.",25,null],[10,"set_gas_ceil_target","","Sets new gas ceiling target for mined blocks.",25,null],[10,"set_extra_data","","Sets new extra data for mined blocks.",25,null],[10,"set_author","","Sets new author for mined block.",25,null],[10,"set_transactions_limit","","Sets the limits for transaction queue.",25,null],[10,"set_tx_gas_limit","","Sets the maximum amount of gas a single transaction may consume.",25,null],[10,"add_reserved_peer","","Add a reserved peer.",25,null],[10,"remove_reserved_peer","","Remove a reserved peer.",25,null],[10,"drop_non_reserved_peers","","Drop all non-reserved peers.",25,null],[10,"accept_non_reserved_peers","","Accept non-reserved peers (default behavior)",25,null],[10,"start_network","","Start the network.",25,null],[10,"stop_network","","Stop the network.",25,null],[10,"set_mode","","Set the mode. Argument must be one of: &quot;active&quot;, &quot;passive&quot;, &quot;dark&quot;, &quot;offline&quot;.",25,null],[10,"hash_content","","Hash a file content under given URL.",25,null],[11,"to_delegate","","Transform this into an `IoDelegate`, automatically wrapping\nthe parameters.",25,null],[0,"parity_signing","ethcore_rpc::v1::traits","ParitySigning rpc interface.",null,null],[8,"ParitySigning","ethcore_rpc::v1::traits::parity_signing","Signing methods implementation.",null,null],[10,"post_sign","","Posts sign request asynchronously.\nWill return a confirmation ID for later use with check_transaction.",26,null],[10,"post_transaction","","Posts transaction asynchronously.\nWill return a transaction ID for later use with check_transaction.",26,null],[10,"check_request","","Checks the progress of a previously posted request (transaction/sign).\nShould be given a valid send_transaction ID.",26,null],[10,"decrypt_message","","Decrypt some ECIES-encrypted message.\nFirst parameter is the address with which it is encrypted, second is the ciphertext.",26,null],[11,"to_delegate","","Transform this into an `IoDelegate`, automatically wrapping\nthe parameters.",26,null],[0,"personal","ethcore_rpc::v1::traits","Personal rpc interface.",null,null],[8,"Personal","ethcore_rpc::v1::traits::personal","Personal rpc interface. Safe (read-only) functions.",null,null],[10,"accounts","","Lists all stored accounts",27,null],[10,"new_account","","Creates new account (it becomes new current unlocked account)\nParam is the password for the account.",27,null],[10,"unlock_account","","Unlocks specified account for use (can only be one unlocked account at one moment)",27,null],[10,"sign_and_send_transaction","","Sends transaction and signs it in single call. The account is not unlocked in such case.",27,null],[11,"to_delegate","","Transform this into an `IoDelegate`, automatically wrapping\nthe parameters.",27,null],[0,"signer","ethcore_rpc::v1::traits","Parity Signer-related rpc interface.",null,null],[8,"Signer","ethcore_rpc::v1::traits::signer","Signer extension for confirmations rpc interface.",null,null],[10,"requests_to_confirm","","Returns a list of items to confirm.",28,null],[10,"confirm_request","","Confirm specific request.",28,null],[10,"confirm_request_raw","","Confirm specific request with already signed data.",28,null],[10,"reject_request","","Reject the confirmation request.",28,null],[10,"generate_token","","Generates new authorization token.",28,null],[11,"to_delegate","","Transform this into an `IoDelegate`, automatically wrapping\nthe parameters.",28,null],[0,"traces","ethcore_rpc::v1::traits","Traces specific rpc interface.",null,null],[8,"Traces","ethcore_rpc::v1::traits::traces","Traces specific rpc interface.",null,null],[10,"filter","","Returns traces matching given filter.",29,null],[10,"trace","","Returns transaction trace at given index.",29,null],[10,"transaction_traces","","Returns all traces of given transaction.",29,null],[10,"block_traces","","Returns all traces produced at given block.",29,null],[10,"call","","Executes the given call and returns a number of possible traces for it.",29,null],[10,"raw_transaction","","Executes the given raw transaction and returns a number of possible traces for it.",29,null],[10,"replay_transaction","","Executes the transaction with the given hash and returns a number of possible traces for it.",29,null],[11,"to_delegate","","Should be used to convert object to io delegate.",29,null],[0,"rpc","ethcore_rpc::v1::traits","RPC interface.",null,null],[8,"Rpc","ethcore_rpc::v1::traits::rpc","RPC Interface.",null,null],[10,"modules","","Returns supported modules for Geth 1.3.6",30,null],[10,"rpc_modules","","Returns supported modules for Geth 1.4.0",30,null],[11,"to_delegate","","Transform this into an `IoDelegate`, automatically wrapping\nthe parameters.",30,null],[0,"tests","ethcore_rpc::v1","RPC unit test moduleS",null,null],[0,"helpers","ethcore_rpc::v1::tests","Test rpc services.",null,null],[3,"Config","ethcore_rpc::v1::tests::helpers","TestSyncProvider config.",null,null],[12,"network_id","","Protocol version.",31,null],[12,"num_peers","","Number of peers.",31,null],[3,"TestSyncProvider","","Test sync provider.",null,null],[12,"status","","Sync status.",32,null],[3,"TestMinerService","","Test miner service.",null,null],[12,"imported_transactions","","Imported transactions.",33,null],[12,"latest_closed_block","","Latest closed block.",33,null],[12,"pending_transactions","","Pre-existed pending transactions",33,null],[12,"local_transactions","","Pre-existed local transactions",33,null],[12,"pending_receipts","","Pre-existed pending receipts",33,null],[12,"last_nonces","","Last nonces.",33,null],[3,"TestFetch","","Test implementation of fetcher. Will always return the same file.",null,null],[3,"TestSnapshotService","","Mocked snapshot service (used for sync info extensions).",null,null],[11,"new","","Creates new sync provider.",32,{"inputs":[{"name":"config"}],"output":{"name":"self"}}],[11,"increase_imported_block_number","","Simulate importing blocks.",32,null],[11,"status","","",32,null],[11,"peers","","",32,null],[11,"enode","","",32,null],[11,"transactions_stats","","",32,null],[11,"default","","",33,{"inputs":[],"output":{"name":"testminerservice"}}],[11,"status","","Returns miner&#39;s status.",33,null],[11,"set_author","","",33,null],[11,"set_extra_data","","",33,null],[11,"set_gas_floor_target","","Set the lower gas limit we wish to target when sealing a new block.",33,null],[11,"set_gas_ceil_target","","Set the upper gas limit we wish to target when sealing a new block.",33,null],[11,"set_minimal_gas_price","","",33,null],[11,"set_transactions_limit","","",33,null],[11,"set_tx_gas_limit","","",33,null],[11,"transactions_limit","","",33,null],[11,"author","","",33,null],[11,"minimal_gas_price","","",33,null],[11,"extra_data","","",33,null],[11,"gas_floor_target","","",33,null],[11,"gas_ceil_target","","",33,null],[11,"import_external_transactions","","Imports transactions to transaction queue.",33,null],[11,"import_own_transaction","","Imports transactions to transaction queue.",33,null],[11,"pending_transactions_hashes","","Returns hashes of transactions currently in pending",33,null],[11,"clear_and_reset","","Removes all transactions from the queue and restart mining operation.",33,null],[11,"chain_new_blocks","","Called when blocks are imported to chain, updates transactions queue.",33,null],[11,"update_sealing","","New chain head event. Restart mining operation.",33,null],[11,"map_sealing_work","","",33,null],[11,"transaction","","",33,null],[11,"all_transactions","","",33,null],[11,"local_transactions","","",33,null],[11,"pending_transactions","","",33,null],[11,"pending_receipt","","",33,null],[11,"pending_receipts","","",33,null],[11,"last_nonce","","",33,null],[11,"is_sealing","","",33,null],[11,"submit_seal","","Submit `seal` as a valid solution for the header of `pow_hash`.\nWill check the seal, but not actually insert the block into the chain.",33,null],[11,"balance","","",33,null],[11,"call","","",33,null],[11,"storage_at","","",33,null],[11,"nonce","","",33,null],[11,"code","","",33,null],[11,"sensible_gas_price","","",33,null],[11,"default","","",34,{"inputs":[],"output":{"name":"testfetch"}}],[11,"request_async","","",34,null],[11,"new","","Create a test snapshot service. Only the `status` function matters -- it&#39;ll\nreturn `Inactive` by default.",35,{"inputs":[],"output":{"name":"self"}}],[11,"set_status","","Set the restoration status.",35,null],[11,"manifest","","",35,null],[11,"chunk","","",35,null],[11,"status","","",35,null],[11,"begin_restore","","",35,null],[11,"abort_restore","","",35,null],[11,"restore_state_chunk","","",35,null],[11,"restore_block_chunk","","",35,null],[11,"provide_canon_hashes","","",35,null],[0,"types","ethcore_rpc::v1","Structures used in RPC communication",null,null],[3,"Bytes","ethcore_rpc::v1::types","Wrapper structure around vector of bytes.",null,null],[12,"0","","",36,null],[3,"RichBlock","","Block representation with additional info",null,null],[12,"block","","Standard block",37,null],[12,"extra_info","","Engine-specific fields with additional description.\nShould be included directly to serialized block object.",37,null],[3,"Block","","Block representation",null,null],[12,"hash","","Hash of the block",38,null],[12,"parent_hash","","Hash of the parent",38,null],[12,"uncles_hash","","Hash of the uncles",38,null],[12,"author","","Authors address",38,null],[12,"miner","","?",38,null],[12,"state_root","","State root hash",38,null],[12,"transactions_root","","Transactions root hash",38,null],[12,"receipts_root","","Transactions receipts root hash",38,null],[12,"number","","Block number",38,null],[12,"gas_used","","Gas Used",38,null],[12,"gas_limit","","Gas Limit",38,null],[12,"extra_data","","Extra data",38,null],[12,"logs_bloom","","Logs bloom",38,null],[12,"timestamp","","Timestamp",38,null],[12,"difficulty","","Difficulty",38,null],[12,"total_difficulty","","Total difficulty",38,null],[12,"seal_fields","","Seal fields",38,null],[12,"uncles","","Uncles&#39; hashes",38,null],[12,"transactions","","Transactions",38,null],[12,"size","","Size in bytes",38,null],[3,"CallRequest","","Call request",null,null],[12,"from","","From",39,null],[12,"to","","To",39,null],[12,"gas_price","","Gas Price",39,null],[12,"gas","","Gas",39,null],[12,"value","","Value",39,null],[12,"data","","Data",39,null],[12,"nonce","","Nonce",39,null],[3,"ConfirmationRequest","","Confirmation waiting in a queue",null,null],[12,"id","","Id of this confirmation",40,null],[12,"payload","","Payload",40,null],[3,"TransactionModification","","Possible modifications to the confirmed transaction sent by `Trusted Signer`",null,null],[12,"gas_price","","Modified gas price",41,null],[3,"SignRequest","","Sign request",null,null],[12,"address","","Address",42,null],[12,"hash","","Hash to sign",42,null],[3,"DecryptRequest","","Decrypt request",null,null],[12,"address","","Address",43,null],[12,"msg","","Message to decrypt",43,null],[3,"Filter","","Filter",null,null],[12,"from_block","","From Block",44,null],[12,"to_block","","To Block",44,null],[12,"address","","Address",44,null],[12,"topics","","Topics",44,null],[12,"limit","","Limit",44,null],[3,"H64","","Hash serialization",null,null],[3,"H160","","Hash serialization",null,null],[3,"H256","","Hash serialization",null,null],[3,"H512","","Hash serialization",null,null],[3,"H520","","Hash serialization",null,null],[3,"H2048","","Hash serialization",null,null],[3,"Index","","Represents usize.",null,null],[3,"Log","","Log",null,null],[12,"address","","H160",45,null],[12,"topics","","Topics",45,null],[12,"data","","Data",45,null],[12,"block_hash","","Block Hash",45,null],[12,"block_number","","Block Number",45,null],[12,"transaction_hash","","Transaction Hash",45,null],[12,"transaction_index","","Transaction Index",45,null],[12,"log_index","","Log Index",45,null],[12,"log_type","","Log Type",45,null],[3,"SyncInfo","","Sync info",null,null],[12,"starting_block","","Starting block",46,null],[12,"current_block","","Current block",46,null],[12,"highest_block","","Highest block seen so far",46,null],[12,"warp_chunks_amount","","Warp sync snapshot chunks total.",46,null],[12,"warp_chunks_processed","","Warp sync snpashot chunks processed.",46,null],[12,"block_gap","","Describes the gap in the blockchain, if there is one: (first, last)",46,null],[3,"Peers","","Peers info",null,null],[12,"active","","Number of active peers",47,null],[12,"connected","","Number of connected peers",47,null],[12,"max","","Max number of peers",47,null],[12,"peers","","Detailed information on peers",47,null],[3,"PeerInfo","","Peer connection information",null,null],[12,"id","","Public node id",48,null],[12,"name","","Node client ID",48,null],[12,"caps","","Capabilities",48,null],[12,"network","","Network information",48,null],[12,"protocols","","Protocols information",48,null],[3,"PeerNetworkInfo","","Peer network information",null,null],[12,"remote_address","","Remote endpoint address",49,null],[12,"local_address","","Local endpoint address",49,null],[3,"PeerProtocolsInfo","","Peer protocols information",null,null],[12,"eth","","Ethereum protocol information",50,null],[3,"PeerEthereumProtocolInfo","","Peer Ethereum protocol information",null,null],[12,"version","","Negotiated ethereum protocol version",51,null],[12,"difficulty","","Peer total difficulty if known",51,null],[12,"head","","SHA3 of peer best block hash",51,null],[3,"TransactionStats","","Propagation statistics for pending transaction.",null,null],[12,"first_seen","","Block no this transaction was first seen.",52,null],[12,"propagated_to","","Peers this transaction was propagated to with count.",52,null],[3,"Transaction","","Transaction",null,null],[12,"hash","","Hash",53,null],[12,"nonce","","Nonce",53,null],[12,"block_hash","","Block hash",53,null],[12,"block_number","","Block number",53,null],[12,"transaction_index","","Transaction Index",53,null],[12,"from","","Sender",53,null],[12,"to","","Recipient",53,null],[12,"value","","Transfered value",53,null],[12,"gas_price","","Gas Price",53,null],[12,"gas","","Gas",53,null],[12,"input","","Data",53,null],[12,"creates","","Creates contract",53,null],[12,"raw","","Raw transaction data",53,null],[12,"public_key","","Public key of the signer.",53,null],[12,"v","","The V field of the signature.",53,null],[12,"r","","The R field of the signature.",53,null],[12,"s","","The S field of the signature.",53,null],[3,"RichRawTransaction","","Geth-compatible output for eth_signTransaction method",null,null],[12,"raw","","Raw transaction RLP",54,null],[12,"transaction","","Transaction details",54,null],[3,"TransactionRequest","","Transaction request coming from RPC",null,null],[12,"from","","Sender",55,null],[12,"to","","Recipient",55,null],[12,"gas_price","","Gas Price",55,null],[12,"gas","","Gas",55,null],[12,"value","","Value of transaction in wei",55,null],[12,"data","","Additional data sent with transaction",55,null],[12,"nonce","","Transaction&#39;s nonce",55,null],[3,"Receipt","","Receipt",null,null],[12,"transaction_hash","","Transaction Hash",56,null],[12,"transaction_index","","Transaction index",56,null],[12,"block_hash","","Block hash",56,null],[12,"block_number","","Block number",56,null],[12,"cumulative_gas_used","","Cumulative gas used",56,null],[12,"gas_used","","Gas used",56,null],[12,"contract_address","","Contract address",56,null],[12,"logs","","Logs",56,null],[12,"state_root","","State Root",56,null],[12,"logs_bloom","","Logs bloom",56,null],[3,"RpcSettings","","Values of RPC settings.",null,null],[12,"enabled","","Whether RPC is enabled.",57,null],[12,"interface","","The interface being listened on.",57,null],[12,"port","","The port being listened on.",57,null],[3,"LocalizedTrace","","Trace",null,null],[3,"TraceResults","","A diff of some chunk of memory.",null,null],[12,"output","","The output of the call/create",58,null],[12,"trace","","The transaction trace.",58,null],[12,"vm_trace","","The transaction trace.",58,null],[12,"state_diff","","The transaction trace.",58,null],[3,"TraceFilter","","Trace filter",null,null],[12,"from_block","","From block",59,null],[12,"to_block","","To block",59,null],[12,"from_address","","From address",59,null],[12,"to_address","","To address",59,null],[3,"U256","","Uint serialization.",null,null],[3,"Work","","The result of an `eth_getWork` call: it differs based on an option\nwhether to send the block number.",null,null],[12,"pow_hash","","The proof-of-work hash.",60,null],[12,"seed_hash","","The seed hash.",60,null],[12,"target","","The target.",60,null],[12,"number","","The block number: this isn&#39;t always stored.",60,null],[3,"Histogram","","Values of RPC settings.",null,null],[12,"bucket_bounds","","Gas prices for bucket edges.",61,null],[12,"counts","","Transacion counts for each bucket.",61,null],[4,"BlockTransactions","","Block Transactions",null,null],[13,"Hashes","","Only hashes",62,null],[13,"Full","","Full transactions",62,null],[4,"BlockNumber","","Represents rpc api block number param.",null,null],[13,"Num","","Number",63,null],[13,"Latest","","Latest block",63,null],[13,"Earliest","","Earliest block (genesis)",63,null],[13,"Pending","","Pending block (being mined)",63,null],[4,"ConfirmationPayload","","Confirmation payload, i.e. the thing to be confirmed",null,null],[13,"SendTransaction","","Send Transaction",64,null],[13,"SignTransaction","","Sign Transaction",64,null],[13,"Signature","","Signature",64,null],[13,"Decrypt","","Decryption",64,null],[4,"ConfirmationResponse","","Confirmation response for particular payload",null,null],[13,"SendTransaction","","Transaction Hash",65,null],[13,"SignTransaction","","Transaction RLP",65,null],[13,"Signature","","Signature",65,null],[13,"Decrypt","","Decrypted data",65,null],[4,"Either","","Represents two possible return values.",null,null],[13,"Either","","Primary value",66,null],[13,"Or","","Secondary value",66,null],[4,"FilterChanges","","Results of the filter_changes RPC.",null,null],[13,"Logs","","New logs.",67,null],[13,"Hashes","","New hashes (block or transactions)",67,null],[13,"Empty","","Empty result,",67,null],[4,"SyncStatus","","Sync status",null,null],[13,"Info","","Info when syncing",68,null],[13,"None","","Not syncing",68,null],[4,"LocalTransactionStatus","","Local Transaction Status",null,null],[13,"Pending","","Transaction is pending",69,null],[13,"Future","","Transaction is in future part of the queue",69,null],[13,"Mined","","Transaction is already mined.",69,null],[13,"Dropped","","Transaction was dropped because of limit.",69,null],[13,"Replaced","","Transaction was replaced by transaction with higher gas price.",69,null],[13,"Rejected","","Transaction never got into the queue.",69,null],[13,"Invalid","","Transaction is invalid.",69,null],[11,"clone","","",36,null],[11,"hash","","",36,null],[11,"default","","",36,{"inputs":[],"output":{"name":"bytes"}}],[11,"eq","","",36,null],[11,"ne","","",36,null],[11,"fmt","","",36,null],[11,"new","","Simple constructor.",36,{"inputs":[{"name":"vec"}],"output":{"name":"bytes"}}],[11,"to_vec","","Convert back to vector",36,null],[11,"from","","",36,{"inputs":[{"name":"vec"}],"output":{"name":"bytes"}}],[11,"into","","",36,null],[11,"serialize","","",36,null],[11,"deserialize","","",36,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",62,null],[11,"serialize","","",62,null],[11,"fmt","","",38,null],[11,"fmt","","",37,null],[11,"deref","","",37,null],[11,"serialize","","",37,null],[11,"clone","","",63,null],[11,"eq","","",63,null],[11,"ne","","",63,null],[11,"fmt","","",63,null],[11,"default","","",63,{"inputs":[],"output":{"name":"self"}}],[11,"deserialize","","",63,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"into","","",63,null],[11,"eq","","",39,null],[11,"ne","","",39,null],[11,"default","","",39,{"inputs":[],"output":{"name":"callrequest"}}],[11,"fmt","","",39,null],[11,"into","","",39,null],[11,"hash","","",40,null],[11,"eq","","",40,null],[11,"ne","","",40,null],[11,"clone","","",40,null],[11,"fmt","","",40,null],[11,"from","","",40,{"inputs":[{"name":"confirmationrequest"}],"output":{"name":"self"}}],[11,"hash","","",42,null],[11,"eq","","",42,null],[11,"ne","","",42,null],[11,"clone","","",42,null],[11,"fmt","","",42,null],[11,"from","","",42,null],[11,"hash","","",43,null],[11,"eq","","",43,null],[11,"ne","","",43,null],[11,"clone","","",43,null],[11,"fmt","","",43,null],[11,"from","","",43,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"clone","","",65,null],[11,"fmt","","",65,null],[11,"serialize","","",65,null],[11,"hash","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"clone","","",64,null],[11,"fmt","","",64,null],[11,"from","","",64,{"inputs":[{"name":"confirmationpayload"}],"output":{"name":"self"}}],[11,"eq","","",41,null],[11,"ne","","",41,null],[11,"fmt","","",41,null],[11,"clone","","",66,null],[11,"fmt","","",66,null],[11,"from","","",66,{"inputs":[{"name":"a"}],"output":{"name":"self"}}],[11,"serialize","","",66,null],[11,"clone","","",44,null],[11,"eq","","",44,null],[11,"ne","","",44,null],[11,"fmt","","",44,null],[11,"into","","",44,null],[11,"eq","","",67,null],[11,"ne","","",67,null],[11,"fmt","","",67,null],[11,"serialize","","",67,null],[11,"default","","",70,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",70,null],[11,"from","","",70,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"from_str","","",70,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"into","","",70,null],[11,"eq","","",70,null],[11,"partial_cmp","","",70,null],[11,"cmp","","",70,null],[11,"hash","","",70,null],[11,"clone","","",70,null],[11,"serialize","","",70,null],[11,"deserialize","","",70,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"default","","",71,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",71,null],[11,"from","","",71,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"from_str","","",71,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"into","","",71,null],[11,"eq","","",71,null],[11,"partial_cmp","","",71,null],[11,"cmp","","",71,null],[11,"hash","","",71,null],[11,"clone","","",71,null],[11,"serialize","","",71,null],[11,"deserialize","","",71,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"default","","",72,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",72,null],[11,"from","","",72,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"from_str","","",72,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"into","","",72,null],[11,"eq","","",72,null],[11,"partial_cmp","","",72,null],[11,"cmp","","",72,null],[11,"hash","","",72,null],[11,"clone","","",72,null],[11,"serialize","","",72,null],[11,"deserialize","","",72,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"default","","",73,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",73,null],[11,"from","","",73,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"from_str","","",73,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"into","","",73,null],[11,"eq","","",73,null],[11,"partial_cmp","","",73,null],[11,"cmp","","",73,null],[11,"hash","","",73,null],[11,"clone","","",73,null],[11,"serialize","","",73,null],[11,"deserialize","","",73,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"default","","",74,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",74,null],[11,"from","","",74,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"from_str","","",74,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"into","","",74,null],[11,"eq","","",74,null],[11,"partial_cmp","","",74,null],[11,"cmp","","",74,null],[11,"hash","","",74,null],[11,"clone","","",74,null],[11,"serialize","","",74,null],[11,"deserialize","","",74,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"default","","",75,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",75,null],[11,"from","","",75,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"from_str","","",75,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"into","","",75,null],[11,"eq","","",75,null],[11,"partial_cmp","","",75,null],[11,"cmp","","",75,null],[11,"hash","","",75,null],[11,"clone","","",75,null],[11,"serialize","","",75,null],[11,"deserialize","","",75,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"eq","","",76,null],[11,"ne","","",76,null],[11,"fmt","","",76,null],[11,"value","","Convert to usize",76,null],[11,"deserialize","","",76,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"clone","","",45,null],[11,"hash","","",45,null],[11,"eq","","",45,null],[11,"ne","","",45,null],[11,"fmt","","",45,null],[11,"from","","",45,{"inputs":[{"name":"localizedlogentry"}],"output":{"name":"log"}}],[11,"from","","",45,{"inputs":[{"name":"logentry"}],"output":{"name":"log"}}],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"fmt","","",46,null],[11,"default","","",46,{"inputs":[],"output":{"name":"syncinfo"}}],[11,"fmt","","",47,null],[11,"default","","",47,{"inputs":[],"output":{"name":"peers"}}],[11,"fmt","","",48,null],[11,"default","","",48,{"inputs":[],"output":{"name":"peerinfo"}}],[11,"fmt","","",49,null],[11,"default","","",49,{"inputs":[],"output":{"name":"peernetworkinfo"}}],[11,"fmt","","",50,null],[11,"default","","",50,{"inputs":[],"output":{"name":"peerprotocolsinfo"}}],[11,"fmt","","",51,null],[11,"default","","",51,{"inputs":[],"output":{"name":"peerethereumprotocolinfo"}}],[11,"eq","","",68,null],[11,"ne","","",68,null],[11,"fmt","","",68,null],[11,"serialize","","",68,null],[11,"fmt","","",52,null],[11,"default","","",52,{"inputs":[],"output":{"name":"transactionstats"}}],[11,"from","","",48,{"inputs":[{"name":"syncpeerinfo"}],"output":{"name":"self"}}],[11,"from","","",52,{"inputs":[{"name":"synctransactionstats"}],"output":{"name":"self"}}],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"clone","","",53,null],[11,"default","","",53,{"inputs":[],"output":{"name":"transaction"}}],[11,"fmt","","",53,null],[11,"fmt","","",69,null],[11,"serialize","","",69,null],[11,"eq","","",54,null],[11,"ne","","",54,null],[11,"clone","","",54,null],[11,"default","","",54,{"inputs":[],"output":{"name":"richrawtransaction"}}],[11,"fmt","","",54,null],[11,"from","","",54,{"inputs":[{"name":"signedtransaction"}],"output":{"name":"self"}}],[11,"from","","",53,{"inputs":[{"name":"localizedtransaction"}],"output":{"name":"transaction"}}],[11,"from","","",53,{"inputs":[{"name":"signedtransaction"}],"output":{"name":"transaction"}}],[11,"from","","",69,{"inputs":[{"name":"localtransactionstatus"}],"output":{"name":"self"}}],[11,"hash","","",55,null],[11,"eq","","",55,null],[11,"ne","","",55,null],[11,"default","","",55,{"inputs":[],"output":{"name":"transactionrequest"}}],[11,"clone","","",55,null],[11,"fmt","","",55,null],[11,"from","","",55,{"inputs":[{"name":"transactionrequest"}],"output":{"name":"self"}}],[11,"from","","",55,{"inputs":[{"name":"filledtransactionrequest"}],"output":{"name":"self"}}],[11,"into","","",55,null],[11,"fmt","","",56,null],[11,"from","","",56,{"inputs":[{"name":"localizedreceipt"}],"output":{"name":"self"}}],[11,"from","","",56,{"inputs":[{"name":"richreceipt"}],"output":{"name":"self"}}],[11,"from","","",56,{"inputs":[{"name":"ethreceipt"}],"output":{"name":"self"}}],[11,"fmt","","",77,null],[11,"serialize","","",77,null],[11,"from","","",77,{"inputs":[{"name":"ethlocalizedtrace"}],"output":{"name":"self"}}],[11,"fmt","","",58,null],[11,"from","","",58,{"inputs":[{"name":"executed"}],"output":{"name":"self"}}],[11,"eq","","",59,null],[11,"ne","","",59,null],[11,"fmt","","",59,null],[11,"into","","",59,null],[11,"fmt","","",78,null],[11,"default","","",78,{"inputs":[],"output":{"name":"u256"}}],[11,"clone","","",78,null],[11,"eq","","",78,null],[11,"ne","","",78,null],[11,"hash","","",78,null],[11,"from","","",78,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"from_str","","",78,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"into","","",78,null],[11,"serialize","","",78,null],[11,"deserialize","","",78,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"eq","","",60,null],[11,"ne","","",60,null],[11,"fmt","","",60,null],[11,"serialize","","",60,null],[11,"from","","",61,{"inputs":[{"name":"histogram"}],"output":{"name":"self"}}],[0,"block_import","ethcore_rpc::v1","Block import analysis functions.",null,null],[5,"is_major_importing","ethcore_rpc::v1::block_import","Check if client is during major sync or during block import.",null,{"inputs":[{"name":"option"},{"name":"blockqueueinfo"}],"output":{"name":"bool"}}],[8,"SigningQueue","ethcore_rpc::v1","A queue of transactions awaiting to be confirmed and signed.",null,null],[10,"add_request","","Add new request to the queue.\nReturns a `ConfirmationPromise` that can be used to await for resolution of given request.",79,null],[10,"request_rejected","","Removes a request from the queue.\nNotifies possible token holders that request was rejected.",79,null],[10,"request_confirmed","","Removes a request from the queue.\nNotifies possible token holders that request was confirmed and given hash was assigned.",79,null],[10,"peek","","Returns a request if it is contained in the queue.",79,null],[10,"requests","","Return copy of all the requests in the queue.",79,null],[10,"len","","Returns number of requests awaiting confirmation.",79,null],[10,"is_empty","","Returns true if there are no requests awaiting confirmation.",79,null],[8,"SigningQueue","ethcore_rpc","A queue of transactions awaiting to be confirmed and signed.",null,null],[10,"add_request","","Add new request to the queue.\nReturns a `ConfirmationPromise` that can be used to await for resolution of given request.",79,null],[10,"request_rejected","","Removes a request from the queue.\nNotifies possible token holders that request was rejected.",79,null],[10,"request_confirmed","","Removes a request from the queue.\nNotifies possible token holders that request was confirmed and given hash was assigned.",79,null],[10,"peek","","Returns a request if it is contained in the queue.",79,null],[10,"requests","","Return copy of all the requests in the queue.",79,null],[10,"len","","Returns number of requests awaiting confirmation.",79,null],[10,"is_empty","","Returns true if there are no requests awaiting confirmation.",79,null],[8,"Extendable","","An object that can be extended with `IoDelegates`",null,null],[10,"add_delegate","","Add `Delegate` to this object.",80,null],[11,"add_delegate","","Add io delegate.",81,null],[11,"new","","Construct new http server object.",81,{"inputs":[],"output":{"name":"rpcserver"}}],[11,"start_http","","Start http server asynchronously and returns result with `Server` handle on success or an error.",81,null],[11,"start_ipc","","Start ipc server asynchronously and returns result with `Server` handle on success or an error.",81,null],[11,"new","","Creates new `ServerBuilder` with specified `IoHandler`.",82,{"inputs":[{"name":"arc"}],"output":{"name":"serverbuilder"}}],[11,"panic_handler","","Sets handler invoked in case of server panic.",82,null],[11,"cors","","Configures a list of allowed CORS origins.",82,null],[11,"allow_only_bind_host","","Allow connections only with `Host` header set to binding address.",82,null],[11,"allowed_hosts","","Specify a list of valid `Host` headers. Binding address is allowed automatically.",82,null],[11,"start_http","","Start this JSON-RPC HTTP server trying to bind to specified `SocketAddr`.",82,null],[11,"fmt","","",0,null],[11,"drop","","",83,null],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"rpcservererror"}}],[11,"addr","","Returns address of this server",83,null],[11,"close","","Closes the server.",83,null],[11,"wait","","Will block, waiting for the server to finish.",83,null]],"paths":[[4,"RpcServerError"],[3,"NetworkSettings"],[3,"EthClientOptions"],[3,"SignerService"],[3,"ConfirmationsQueue"],[3,"EthClient"],[3,"EthFilterClient"],[3,"NetClient"],[3,"ParityClient"],[3,"ParityAccountsClient"],[3,"ParitySetClient"],[3,"PersonalClient"],[3,"SignerClient"],[3,"SigningQueueClient"],[3,"SigningUnsafeClient"],[3,"RpcClient"],[3,"TracesClient"],[3,"Web3Client"],[8,"Web3"],[8,"Eth"],[8,"EthFilter"],[8,"EthSigning"],[8,"Net"],[8,"Parity"],[8,"ParityAccounts"],[8,"ParitySet"],[8,"ParitySigning"],[8,"Personal"],[8,"Signer"],[8,"Traces"],[8,"Rpc"],[3,"Config"],[3,"TestSyncProvider"],[3,"TestMinerService"],[3,"TestFetch"],[3,"TestSnapshotService"],[3,"Bytes"],[3,"RichBlock"],[3,"Block"],[3,"CallRequest"],[3,"ConfirmationRequest"],[3,"TransactionModification"],[3,"SignRequest"],[3,"DecryptRequest"],[3,"Filter"],[3,"Log"],[3,"SyncInfo"],[3,"Peers"],[3,"PeerInfo"],[3,"PeerNetworkInfo"],[3,"PeerProtocolsInfo"],[3,"PeerEthereumProtocolInfo"],[3,"TransactionStats"],[3,"Transaction"],[3,"RichRawTransaction"],[3,"TransactionRequest"],[3,"Receipt"],[3,"RpcSettings"],[3,"TraceResults"],[3,"TraceFilter"],[3,"Work"],[3,"Histogram"],[4,"BlockTransactions"],[4,"BlockNumber"],[4,"ConfirmationPayload"],[4,"ConfirmationResponse"],[4,"Either"],[4,"FilterChanges"],[4,"SyncStatus"],[4,"LocalTransactionStatus"],[3,"H64"],[3,"H160"],[3,"H256"],[3,"H512"],[3,"H520"],[3,"H2048"],[3,"Index"],[3,"LocalizedTrace"],[3,"U256"],[8,"SigningQueue"],[8,"Extendable"],[3,"RpcServer"],[3,"ServerBuilder"],[3,"Server"]]};
searchIndex["ethsync"] = {"doc":"Blockchain sync module\nImplements ethereum protocol version 63 as specified here:\nhttps://github.com/ethereum/wiki/wiki/Ethereum-Wire-Protocol","items":[[5,"is_valid_node_url","ethsync","Check if node url is valid",null,{"inputs":[{"name":"str"}],"output":{"name":"bool"}}],[4,"NonReservedPeerMode","","Non-reserved peer modes.",null,null],[13,"Accept","","Accept them. This is the default.",0,null],[13,"Deny","","Deny them.",0,null],[4,"NetworkError","","Network error.",null,null],[13,"Auth","","Authentication error.",1,null],[13,"BadProtocol","","Unrecognised protocol.",1,null],[13,"Expired","","Message expired.",1,null],[13,"PeerNotFound","","Peer not found.",1,null],[13,"Disconnect","","Peer is diconnected.",1,null],[13,"Util","","Util error.",1,null],[13,"Io","","Socket IO error.",1,null],[13,"AddressParse","","Error concerning the network address parsing subsystem.",1,null],[13,"AddressResolve","","Error concerning the network address resolution subsystem.",1,null],[13,"StdIo","","Error concerning the Rust standard library&#39;s IO subsystem.",1,null],[3,"EthSync","","Ethereum network protocol handler",null,null],[3,"SyncClient","","",null,null],[3,"NetworkManagerClient","","",null,null],[3,"SyncConfig","","Sync configuration",null,null],[12,"max_download_ahead_blocks","","Max blocks to download ahead",2,null],[12,"download_old_blocks","","Enable ancient block download.",2,null],[12,"network_id","","Network ID",2,null],[12,"subprotocol_name","","Main &quot;eth&quot; subprotocol name.",2,null],[12,"fork_block","","Fork block to check",2,null],[12,"warp_sync","","Enable snapshot sync",2,null],[3,"ServiceConfiguration","","",null,null],[12,"sync","","",3,null],[12,"net","","",3,null],[12,"io_path","","",3,null],[3,"NetworkConfiguration","","Network service configuration",null,null],[12,"config_path","","Directory path to store general network configuration. None means nothing will be saved",4,null],[12,"net_config_path","","Directory path to store network-specific configuration. None means nothing will be saved",4,null],[12,"listen_address","","IP address to listen for incoming connections. Listen to all connections by default",4,null],[12,"public_address","","IP address to advertise. Detected automatically if none.",4,null],[12,"udp_port","","Port for UDP connections, same as TCP by default",4,null],[12,"nat_enabled","","Enable NAT configuration",4,null],[12,"discovery_enabled","","Enable discovery",4,null],[12,"boot_nodes","","List of initial node addresses",4,null],[12,"use_secret","","Use provided node key instead of default",4,null],[12,"max_peers","","Max number of connected peers to maintain",4,null],[12,"min_peers","","Min number of connected peers to maintain",4,null],[12,"max_pending_peers","","Max pending peers.",4,null],[12,"snapshot_peers","","Reserved snapshot sync peers.",4,null],[12,"reserved_nodes","","List of reserved node addresses.",4,null],[12,"allow_non_reserved","","The non-reserved peer mode.",4,null],[12,"allow_ips","","IP Filtering",4,null],[3,"PeerInfo","","Peer connection information",null,null],[12,"id","","Public node id",5,null],[12,"client_version","","Node client ID",5,null],[12,"capabilities","","Capabilities",5,null],[12,"remote_address","","Remote endpoint address",5,null],[12,"local_address","","Local endpoint address",5,null],[12,"eth_version","","Ethereum protocol version",5,null],[12,"eth_head","","SHA3 of peer best block hash",5,null],[12,"eth_difficulty","","Peer total difficulty if known",5,null],[3,"TransactionStats","","Transaction stats",null,null],[12,"first_seen","","",6,null],[12,"propagated_to","","",6,null],[3,"SyncStatus","","Syncing status and statistics",null,null],[12,"state","","State",7,null],[12,"protocol_version","","Syncing protocol version. That&#39;s the maximum protocol version we connect to.",7,null],[12,"network_id","","The underlying p2p network version.",7,null],[12,"start_block_number","","`BlockChain` height for the moment the sync started.",7,null],[12,"last_imported_block_number","","Last fully downloaded and imported block number (if any).",7,null],[12,"highest_block_number","","Highest block number in the download queue (if any).",7,null],[12,"blocks_total","","Total number of blocks for the sync process.",7,null],[12,"blocks_received","","Number of blocks downloaded so far.",7,null],[12,"num_peers","","Total number of connected peers",7,null],[12,"num_active_peers","","Total number of active peers.",7,null],[12,"mem_used","","Heap memory used in bytes.",7,null],[12,"num_snapshot_chunks","","Snapshot chunks",7,null],[12,"snapshot_chunks_done","","Snapshot chunks downloaded",7,null],[12,"last_imported_old_block_number","","Last fully downloaded and imported ancient block number (if any).",7,null],[4,"AllowIP","","IP fiter",null,null],[13,"All","","Connect to any address",8,null],[13,"Private","","Connect to private network only",8,null],[13,"Public","","Connect to public network only",8,null],[4,"SyncState","","Sync state",null,null],[13,"WaitingPeers","","Collecting enough peers to start syncing.",9,null],[13,"SnapshotManifest","","Waiting for snapshot manifest download",9,null],[13,"SnapshotData","","Downloading snapshot data",9,null],[13,"SnapshotWaiting","","Waiting for snapshot restoration progress.",9,null],[13,"Blocks","","Downloading new blocks",9,null],[13,"Idle","","Initial chain sync complete. Waiting for new packets",9,null],[13,"Waiting","","Block downloading paused. Waiting for block queue to process blocks and free some space",9,null],[13,"NewBlocks","","Downloading blocks learned from `NewHashes` packet",9,null],[11,"clone","","",9,null],[11,"eq","","",9,null],[11,"fmt","","",9,null],[11,"clone","","",7,null],[11,"is_snapshot_syncing","","Indicates if snapshot download is in progress",7,null],[11,"current_max_peers","","Returns max no of peers to display in informants",7,null],[11,"from","","",6,{"inputs":[{"name":"stats"}],"output":{"name":"self"}}],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"default","","",2,{"inputs":[],"output":{"name":"syncconfig"}}],[11,"from_bytes","","",2,null],[11,"to_bytes","","",2,null],[11,"from_bytes","","",7,null],[11,"to_bytes","","",7,null],[11,"fmt","","",6,null],[11,"size","","",6,null],[11,"to_bytes","","",6,null],[11,"from_bytes","","",6,null],[11,"len_params","","",6,{"inputs":[],"output":{"name":"usize"}}],[11,"fmt","","",5,null],[11,"size","","",5,null],[11,"to_bytes","","",5,null],[11,"from_bytes","","",5,null],[11,"len_params","","",5,{"inputs":[],"output":{"name":"usize"}}],[11,"new","","Creates and register protocol with the network service",10,{"inputs":[{"name":"syncconfig"},{"name":"arc"},{"name":"arc"},{"name":"networkconfiguration"}],"output":{"name":"result"}}],[11,"status","","Get sync status",10,null],[11,"peers","","Get sync peers",10,null],[11,"enode","","",10,null],[11,"transactions_stats","","",10,null],[11,"status","","",11,null],[11,"peers","","",11,null],[11,"enode","","",11,null],[11,"transactions_stats","","",11,null],[11,"handshake","","",11,null],[11,"init","","",11,{"inputs":[{"name":"s"}],"output":{"name":"syncclient"}}],[11,"new_blocks","","",10,null],[11,"start","","",10,null],[11,"stop","","",10,null],[11,"accept_unreserved_peers","","",10,null],[11,"deny_unreserved_peers","","",10,null],[11,"remove_reserved_peer","","",10,null],[11,"add_reserved_peer","","",10,null],[11,"start_network","","",10,null],[11,"stop_network","","",10,null],[11,"network_config","","",10,null],[11,"accept_unreserved_peers","","",12,null],[11,"deny_unreserved_peers","","",12,null],[11,"remove_reserved_peer","","",12,null],[11,"add_reserved_peer","","",12,null],[11,"start_network","","",12,null],[11,"stop_network","","",12,null],[11,"network_config","","",12,null],[11,"handshake","","",12,null],[11,"init","","",12,{"inputs":[{"name":"s"}],"output":{"name":"networkmanagerclient"}}],[11,"clone","","",8,null],[11,"fmt","","",8,null],[11,"eq","","",8,null],[11,"size","","",8,null],[11,"to_bytes","","",8,null],[11,"from_bytes","","",8,null],[11,"len_params","","",8,{"inputs":[],"output":{"name":"usize"}}],[11,"parse","","Attempt to parse the peer mode from a string.",8,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[11,"fmt","","",4,null],[11,"clone","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"size","","",4,null],[11,"to_bytes","","",4,null],[11,"from_bytes","","",4,null],[11,"len_params","","",4,{"inputs":[],"output":{"name":"usize"}}],[11,"new","","",4,{"inputs":[],"output":{"name":"self"}}],[11,"new_local","","",4,{"inputs":[],"output":{"name":"self"}}],[11,"into_basic","","",4,null],[11,"from","","",4,{"inputs":[{"name":"basicnetworkconfiguration"}],"output":{"name":"self"}}],[11,"fmt","","",3,null],[11,"clone","","",3,null],[11,"size","","",3,null],[11,"to_bytes","","",3,null],[11,"from_bytes","","",3,null],[11,"len_params","","",3,{"inputs":[],"output":{"name":"usize"}}],[0,"remote","","IPC interfaces",null,null],[3,"SyncClient","ethsync::remote","",null,null],[3,"NetworkManagerClient","","",null,null],[8,"SyncProvider","ethsync","Current sync status",null,null],[10,"status","","Get sync status",13,null],[10,"peers","","Get peers information",13,null],[10,"enode","","Get the enode if available.",13,null],[10,"transactions_stats","","Returns propagation count for pending transactions.",13,null],[8,"ManageNetwork","","Trait for managing network",null,null],[10,"accept_unreserved_peers","","Set to allow unreserved peers to connect",14,null],[10,"deny_unreserved_peers","","Set to deny unreserved peers to connect",14,null],[10,"remove_reserved_peer","","Remove reservation for the peer",14,null],[10,"add_reserved_peer","","Add reserved peer",14,null],[10,"start_network","","Start network",14,null],[10,"stop_network","","Stop network",14,null],[10,"network_config","","Query the current configuration of the network",14,null],[11,"parse","","Attempt to parse the peer mode from a string.",0,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[11,"fmt","","",1,null],[11,"eq","","",0,null],[11,"fmt","","",1,null],[11,"fmt","","",0,null],[11,"from","","",1,{"inputs":[{"name":"decodererror"}],"output":{"name":"networkerror"}}],[11,"from","","",1,{"inputs":[{"name":"error"}],"output":{"name":"networkerror"}}],[11,"from","","",1,{"inputs":[{"name":"ioerror"}],"output":{"name":"networkerror"}}],[11,"from","","",1,{"inputs":[{"name":"utilerror"}],"output":{"name":"networkerror"}}],[11,"from","","",1,{"inputs":[{"name":"error"}],"output":{"name":"networkerror"}}],[11,"from","","",1,{"inputs":[{"name":"error"}],"output":{"name":"networkerror"}}],[11,"from","","",1,{"inputs":[{"name":"addrparseerror"}],"output":{"name":"networkerror"}}],[11,"clone","","",0,null],[11,"dispatch","","",13,null],[11,"dispatch_buf","","",13,null],[11,"dispatch","","",14,null],[11,"dispatch_buf","","",14,null]],"paths":[[4,"NonReservedPeerMode"],[4,"NetworkError"],[3,"SyncConfig"],[3,"ServiceConfiguration"],[3,"NetworkConfiguration"],[3,"PeerInfo"],[3,"TransactionStats"],[3,"SyncStatus"],[4,"AllowIP"],[4,"SyncState"],[3,"EthSync"],[3,"SyncClient"],[3,"NetworkManagerClient"],[8,"SyncProvider"],[8,"ManageNetwork"]]};
searchIndex["ethcore_ipc_nano"] = {"doc":"IPC over nanomsg transport","items":[[8,"WithSocket","ethcore_ipc_nano","Basically something that needs only socket to be spawned",null,null],[10,"init","","",0,{"inputs":[{"name":"s"}],"output":{"name":"self"}}],[8,"IpcInterface","","Allows implementor to be attached to generic worker and dispatch rpc requests\nover IPC",null,null],[10,"dispatch","","reads the message from io, dispatches the call and returns serialized result",1,null],[10,"dispatch_buf","","deserializes the payload from buffer, dispatches invoke and returns serialized result\n(for non-blocking io)",1,null],[8,"IpcConfig","","Allows to configure custom version and custom handshake response for\nipc host",null,null],[11,"api_version","","Current service api version\nShould be increased if any of the methods changes signature",2,{"inputs":[],"output":{"name":"version"}}],[11,"protocol_version","","Current ipc protocol version\nShould be increased only if signature of system methods changes",2,{"inputs":[],"output":{"name":"version"}}],[11,"handshake","","Default handshake requires exact versions match",2,{"inputs":[{"name":"handshake"}],"output":{"name":"bool"}}],[3,"NanoSocket","","A type-safe socket wrapper around nanomsg&#39;s own socket implementation. This\nprovides a safe interface for dealing with initializing the sockets, sending\nand receiving messages.",null,null],[3,"Worker","","Generic worker to handle service (binded) sockets",null,null],[3,"GuardedSocket","","struct for guarding `_endpoint` (so that it wont drop)\nderefs to client `S`",null,null],[3,"DEBUG_FLAG","","Set PARITY_IPC_DEBUG=1 for fail-fast connectivity problems diagnostic",null,null],[4,"SocketError","","Error occurred while establising socket or endpoint",null,null],[13,"DuplexLink","","Error establising duplex (paired) socket and/or endpoint",3,null],[13,"RequestLink","","Error establising duplex (paired) socket and/or endpoint",3,null],[5,"init_duplex_client","","Spawns client &lt;`S`&gt; over specified address\ncreates socket and connects endpoint to it\nfor duplex (paired) connections with the service",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"client","","Spawns client &lt;`S`&gt; over specified address\ncreates socket and connects endpoint to it\nfor request-reply connections to the service",null,{"inputs":[{"name":"str"},{"name":"option"}],"output":{"name":"result"}}],[5,"generic_client","","Client with no default timeout on operations",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"fast_client","","Client over interface that is supposed to give quick almost non-blocking responses",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"service","","",4,null],[11,"deref","","",4,null],[11,"deref","","",5,null],[11,"fmt","","",3,null],[11,"new","","New worker over specified `service`",6,{"inputs":[{"name":"arc"}],"output":{"name":"worker"}}],[11,"poll","","Polls all sockets, reads and dispatches method invocations",6,null],[11,"add_duplex","","Add exclusive socket for paired client\nOnly one connection over this address is allowed",6,null],[11,"add_reqrep","","Add generic socket for request-reply style communications\nwith multiple clients",6,null],[11,"drop","","Closes the socket.\nAny buffered inbound messages that were not yet received by the application will be discarded.\nThe library will try to deliver any outstanding outbound messages for the time specified by `set_linger`. \nThe call will block in the meantime.",7,null],[11,"read","","Receive a message from the socket and store it in the buffer argument.\nAny bytes exceeding the length specified by `buffer.len()` will be truncated.\nReturns the number of bytes of the message stored in the buffer on success.\nPlease note that it differs from nanomsg&#39;s nn_recv which returns the msg size instead.",7,null],[11,"read_to_end","","Receive a message from the socket. Copy the message allocated by nanomsg into the buffer on success.",7,null],[11,"read_to_string","","Receive a message from the socket. Copy the message allocated by nanomsg into the buffer on success.\nIf the data in the message is not valid UTF-8 then an error is returned and buffer is unchanged.",7,null],[11,"write","","The function will send a message containing the data from the buf parameter to the socket.\nWhich of the peers the message will be sent to is determined by the particular socket type.",7,null],[11,"flush","","",7,null],[11,"new","","Allocate and initialize a new Nanomsg socket which returns\na new file descriptor behind the scene. The safe interface doesn&#39;t\nexpose any of the underlying file descriptors and such.",7,{"inputs":[{"name":"protocol"}],"output":{"name":"result"}}],[11,"new_for_device","","Allocate and initialize a new Nanomsg socket meant to be used in a device",7,{"inputs":[{"name":"protocol"}],"output":{"name":"result"}}],[11,"bind","","Creating a new socket through `Socket::new` does **not**\nbind that socket to a listening state. Instead, one has to be\nexplicit in enabling the socket to listen onto a specific address.",7,null],[11,"connect","","Connects the socket to a remote endpoint.\nReturns the endpoint on success.",7,null],[11,"nb_read","","Non-blocking version of the `read` function.\nAny bytes exceeding the length specified by `buf.len()` will be truncated.\nReturns the number of bytes of the message stored in the buffer on success.\nPlease note that it differs from nanomsg&#39;s nn_recv which returns the msg size instead.\nAn error with the `Error::TryAgain` kind is returned if there&#39;s no message to receive for the moment.",7,null],[11,"nb_read_to_end","","Non-blocking version of the `read_to_end` function.\nCopy the message allocated by nanomsg into the buffer on success.\nAn error with the `Error::TryAgain` kind is returned if there&#39;s no message to receive for the moment.",7,null],[11,"nb_write","","Non-blocking version of the `write` function.\nAn error with the `Error::TryAgain` kind is returned if the message cannot be sent at the moment.",7,null],[11,"zc_write","","Zero-copy version of the `write` function.",7,null],[11,"allocate_msg","","Allocate a message of the specified size to be sent in zero-copy fashion.\nThe content of the message is undefined after allocation and it should be filled in by the user.\nWhile `write` functions allow to send arbitrary buffers, \nbuffers allocated using `allocate_msg` can be more efficient for large messages \nas they allow for using zero-copy techniques.",7,{"inputs":[{"name":"usize"}],"output":{"name":"result"}}],[11,"free_msg","","Deallocates a message allocated using `allocate_msg` function",7,null],[11,"new_pollfd","","Creates a poll request for the socket with the specified check criteria.\n- **pollinout:** See `PollInOut` for options",7,null],[11,"poll","","Checks a set of sockets and reports whether it’s possible to send a message to the socket and/or receive a message from each socket.\nUpon successful completion, the number of `PollFd` structures with events signaled is returned. ",7,{"inputs":[{"name":"pollrequest"},{"name":"isize"}],"output":{"name":"result"}}],[11,"device","","Starts a device to forward messages between two sockets.\nIf both sockets are valid, `device` function loops\nand sends and messages received from s1 to s2 and vice versa.\nIf only one socket is valid and the other is negative,\n`device` works in a &quot;loopback&quot; mode — \nit loops and sends any messages received from the socket back to itself.\nTo break the loop and make `device` function exit use `terminate` function.",7,{"inputs":[{"name":"socket"},{"name":"socket"}],"output":{"name":"result"}}],[11,"terminate","","Notify all sockets about process termination.\nTo help with shutdown of multi-threaded programs nanomsg provides the `terminate` function \nwhich informs all the open sockets that process termination is underway.\nIf a socket is blocked inside a blocking function, such as `read`,\nit will be unblocked and `Terminating` error will be returned to the user. \nSimilarly, any subsequent attempt to invoke a socket function other than `drop` after `terminate` was called will result in `Terminating` error.\nIf waiting inside a polling function, the call will unblock with both read and write signaled.\nThe `terminate` function itself is non-blocking.",7,null],[11,"set_linger","","Specifies how long the socket should try to send pending outbound messages after `drop` have been called.\nNegative value means infinite linger. Default value is 1000 (1 second).",7,null],[11,"set_send_buffer_size","","Size of the send buffer, in bytes. To prevent blocking for messages larger than the buffer,\nexactly one message may be buffered in addition to the data in the send buffer.\nDefault value is 128kB.",7,null],[11,"set_receive_buffer_size","","Size of the receive buffer, in bytes. To prevent blocking for messages larger than the buffer,\nexactly one message may be buffered in addition to the data in the receive buffer.\nDefault value is 128kB.",7,null],[11,"set_send_timeout","","The timeout for send operation on the socket.\nIf message cannot be sent within the specified timeout, TryAgain error is returned.\nNegative value means infinite timeout. Default value is infinite timeout.",7,null],[11,"set_receive_timeout","","The timeout for recv operation on the socket.\nIf message cannot be received within the specified timeout, TryAgain error is returned.\nNegative value means infinite timeout. Default value is infinite timeout.",7,null],[11,"set_reconnect_interval","","For connection-based transports such as TCP, this option specifies how long to wait,\nwhen connection is broken before trying to re-establish it.\nNote that actual reconnect interval may be randomised to some extent to prevent severe reconnection storms.\nDefault value is 100 milliseconds.",7,null],[11,"set_max_reconnect_interval","","This option is to be used only in addition to `set_reconnect_interval` option.\nIt specifies maximum reconnection interval. On each reconnect attempt,\nthe previous interval is doubled until `max_reconnect_interval` is reached.\nValue of zero means that no exponential backoff is performed and\nreconnect interval is based only on `reconnect_interval`.\nIf `max_reconnect_interval` is less than `reconnect_interval`, it is ignored.\nDefault value is 0.",7,null],[11,"set_send_priority","","Sets outbound priority for endpoints subsequently added to the socket.\nThis option has no effect on socket types that send messages to all the peers.\nHowever, if the socket type sends each message to a single peer (or a limited set of peers),\npeers with high priority take precedence over peers with low priority.\nHighest priority is 1, lowest priority is 16. Default value is 8.",7,null],[11,"set_receive_priority","","Sets inbound priority for endpoints subsequently added to the socket.\nThis option has no effect on socket types that are not able to receive messages.\nWhen receiving a message, messages from peer with higher priority are received before messages\nfrom peer with lower priority. \nHighest priority is 1, lowest priority is 16. Default value is 8.",7,null],[11,"set_ipv4_only","","If set to true, only IPv4 addresses are used.\nIf set to false, both IPv4 and IPv6 addresses are used.\nDefault value is true.",7,null],[11,"set_socket_name","","Socket name for error reporting and statistics.\nDefault value is &quot;socket.N&quot; where N is socket integer.\n**This option is experimental, see `Socket::env` for details**",7,null],[11,"set_tcp_nodelay","","This option, when set to `true`, disables Nagle’s algorithm.\nIt also disables delaying of TCP acknowledgments.\nUsing this option improves latency at the expense of throughput.",7,null],[11,"get_receive_fd","","Retrieve a file descriptor that is readable when a message can\nbe received on the unerlying socket",7,null],[11,"get_send_fd","","Retrieve a file descriptor that is writeable when a message\ncan be sent on the underlying socket",7,null],[11,"get_socket_name","","Retrieve the name for this socket for error reporting and\nstatistics.\n**This option is experimental, see `Socket::env` for details",7,null],[11,"subscribe","","Defined on full `Sub` socket.\nSubscribes for a particular topic.\nType of the option is string.\nA single `Sub` socket can handle multiple subscriptions.",7,null],[11,"unsubscribe","","Defined on full `Sub` socket. Unsubscribes from a particular topic.",7,null],[11,"set_survey_deadline","","Specifies how long to wait for responses to the survey.\nOnce the deadline expires, receive function will return `Timeout` error and all subsequent responses to the survey will be silently dropped.\nThe deadline is measured in milliseconds. Default value is 1 second.",7,null],[11,"set_request_resend_interval","","This option is defined on the full `Req` socket.\nIf reply is not received in specified amount of milliseconds, the request will be automatically resent.\nThe type of this option is int. Default value is 1 minute.",7,null]],"paths":[[8,"WithSocket"],[8,"IpcInterface"],[8,"IpcConfig"],[4,"SocketError"],[3,"GuardedSocket"],[3,"DEBUG_FLAG"],[3,"Worker"],[3,"NanoSocket"]]};
searchIndex["ethcore_network"] = {"doc":"Network and general IO module.","items":[[3,"NetworkContext","ethcore_network","IO access point. This is passed to all IO handlers and provides an interface to the IO subsystem.",null,null],[3,"NetworkConfiguration","","Network service configuration",null,null],[12,"config_path","","Directory path to store general network configuration. None means nothing will be saved",0,null],[12,"net_config_path","","Directory path to store network-specific configuration. None means nothing will be saved",0,null],[12,"listen_address","","IP address to listen for incoming connections. Listen to all connections by default",0,null],[12,"public_address","","IP address to advertise. Detected automatically if none.",0,null],[12,"udp_port","","Port for UDP connections, same as TCP by default",0,null],[12,"nat_enabled","","Enable NAT configuration",0,null],[12,"discovery_enabled","","Enable discovery",0,null],[12,"boot_nodes","","List of initial node addresses",0,null],[12,"use_secret","","Use provided node key instead of default",0,null],[12,"min_peers","","Minimum number of connected peers to maintain",0,null],[12,"max_peers","","Maximum allowed number of peers",0,null],[12,"max_handshakes","","Maximum handshakes",0,null],[12,"reserved_protocols","","Reserved protocols. Peers with &lt;key&gt; protocol get additional &lt;value&gt; connection slots.",0,null],[12,"reserved_nodes","","List of reserved node addresses.",0,null],[12,"non_reserved_mode","","The non-reserved peer mode.",0,null],[12,"allow_ips","","IP filter",0,null],[3,"NetworkService","","IO Service with networking\n`Message` defines a notification data type.",null,null],[3,"NetworkStats","","Network statistics structure",null,null],[3,"SessionInfo","","Shared session information",null,null],[12,"id","","Peer public key",1,null],[12,"client_version","","Peer client ID",1,null],[12,"protocol_version","","Peer RLPx protocol version",1,null],[12,"capabilities","","Session protocol capabilities",1,null],[12,"peer_capabilities","","Peer protocol capabilities",1,null],[12,"ping_ms","","Peer ping delay in milliseconds",1,null],[12,"originated","","True if this session was originated by us.",1,null],[12,"remote_address","","Remote endpoint address of the session",1,null],[12,"local_address","","Local endpoint address of the session",1,null],[4,"NetworkIoMessage","","Messages used to communitate with the event loop from other threads.",null,null],[13,"AddHandler","","Register a new protocol handler.",2,null],[12,"handler","ethcore_network::NetworkIoMessage","Handler shared instance.",2,null],[12,"protocol","","Protocol Id.",2,null],[12,"versions","","Supported protocol versions.",2,null],[12,"packet_count","","Number of packet IDs reserved by the protocol.",2,null],[13,"AddTimer","ethcore_network","Register a new protocol timer",2,null],[12,"protocol","ethcore_network::NetworkIoMessage","Protocol Id.",2,null],[12,"token","","Timer token.",2,null],[12,"delay","","Timer delay in milliseconds.",2,null],[13,"InitPublicInterface","ethcore_network","Initliaze public interface.",2,null],[13,"Disconnect","","Disconnect a peer.",2,null],[13,"DisablePeer","","Disconnect and temporary disable peer.",2,null],[13,"NetworkStarted","","Network has been started with the host as the given enode.",2,null],[4,"NetworkError","","Network error.",null,null],[13,"Auth","","Authentication error.",3,null],[13,"BadProtocol","","Unrecognised protocol.",3,null],[13,"Expired","","Message expired.",3,null],[13,"PeerNotFound","","Peer not found.",3,null],[13,"Disconnect","","Peer is diconnected.",3,null],[13,"Util","","Util error.",3,null],[13,"Io","","Socket IO error.",3,null],[13,"AddressParse","","Error concerning the network address parsing subsystem.",3,null],[13,"AddressResolve","","Error concerning the network address resolution subsystem.",3,null],[13,"StdIo","","Error concerning the Rust standard library&#39;s IO subsystem.",3,null],[4,"NonReservedPeerMode","","Non-reserved peer modes.",null,null],[13,"Accept","","Accept them. This is the default.",4,null],[13,"Deny","","Deny them.",4,null],[4,"AllowIP","","IP fiter",null,null],[13,"All","","Connect to any address",5,null],[13,"Private","","Connect to private network only",5,null],[13,"Public","","Connect to public network only",5,null],[5,"is_valid_node_url","","Check if node url is valid",null,{"inputs":[{"name":"str"}],"output":{"name":"bool"}}],[11,"fmt","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"clone","","",0,null],[11,"default","","",0,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Create a new instance of default settings.",0,{"inputs":[],"output":{"name":"self"}}],[11,"new_with_port","","Create new default configuration with sepcified listen port.",0,{"inputs":[{"name":"u16"}],"output":{"name":"networkconfiguration"}}],[11,"new_local","","Create new default configuration for localhost-only connection with random port (usefull for testing)",0,{"inputs":[],"output":{"name":"networkconfiguration"}}],[11,"clone","","",2,null],[11,"send","","Send a packet over the network to another peer.",6,null],[11,"send_protocol","","Send a packet over the network to another peer using specified protocol.",6,null],[11,"respond","","Respond to a current network message. Panics if no there is no packet in the context. If the session is expired returns nothing.",6,null],[11,"io_channel","","Get an IoChannel.",6,null],[11,"disable_peer","","Disconnect a peer and prevent it from connecting again.",6,null],[11,"disconnect_peer","","Disconnect peer. Reconnect can be attempted later.",6,null],[11,"is_expired","","Check if the session is still active.",6,null],[11,"register_timer","","Register a new IO timer. &#39;IoHandler::timeout&#39; will be called with the token.",6,null],[11,"peer_client_version","","Returns peer identification string",6,null],[11,"session_info","","Returns information on p2p session",6,null],[11,"protocol_version","","Returns max version for a given protocol.",6,null],[11,"subprotocol_name","","Returns this object&#39;s subprotocol name.",6,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"new","","Starts IO event loop",7,{"inputs":[{"name":"networkconfiguration"}],"output":{"name":"result"}}],[11,"register_protocol","","Regiter a new protocol handler with the event loop.",7,null],[11,"host_info","","Returns host identifier string as advertised to other peers",7,null],[11,"io","","Returns underlying io service.",7,null],[11,"stats","","Returns network statistics.",7,null],[11,"config","","Returns network configuration.",7,null],[11,"external_url","","Returns external url if available.",7,null],[11,"local_url","","Returns external url if available.",7,null],[11,"start","","Start network IO",7,null],[11,"stop","","Stop network IO",7,null],[11,"add_reserved_peer","","Try to add a reserved peer.",7,null],[11,"remove_reserved_peer","","Try to remove a reserved peer.",7,null],[11,"set_non_reserved_mode","","Set the non-reserved peer mode.",7,null],[11,"with_context","","Executes action in the network context",7,null],[11,"with_context_eval","","Evaluates function in the network context",7,null],[11,"on_panic","","",7,null],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[11,"from","","",3,{"inputs":[{"name":"decodererror"}],"output":{"name":"networkerror"}}],[11,"from","","",3,{"inputs":[{"name":"error"}],"output":{"name":"networkerror"}}],[11,"from","","",3,{"inputs":[{"name":"ioerror"}],"output":{"name":"networkerror"}}],[11,"from","","",3,{"inputs":[{"name":"utilerror"}],"output":{"name":"networkerror"}}],[11,"from","","",3,{"inputs":[{"name":"keyerror"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"cryptoerror"}],"output":{"name":"networkerror"}}],[11,"from","","",3,{"inputs":[{"name":"addrparseerror"}],"output":{"name":"networkerror"}}],[11,"default","","",8,{"inputs":[],"output":{"name":"networkstats"}}],[11,"fmt","","",8,null],[11,"inc_recv","","Increase bytes received.",8,null],[11,"inc_send","","Increase bytes sent.",8,null],[11,"inc_sessions","","Increase number of sessions.",8,null],[11,"send","","Get bytes sent.",8,null],[11,"recv","","Get bytes received.",8,null],[11,"sessions","","Get total number of sessions created.",8,null],[11,"new","","Create a new empty instance.",8,{"inputs":[],"output":{"name":"networkstats"}}],[6,"PeerId","","Local (temporary) peer session ID.",null,null],[6,"PacketId","","Protocol handler level packet id",null,null],[6,"ProtocolId","","Protocol / handler id",null,null],[8,"NetworkProtocolHandler","","Network IO protocol handler. This needs to be implemented for each new subprotocol.\nAll the handler function are called from within IO event loop.\n`Message` is the type for message data.",null,null],[11,"initialize","","Initialize the handler",9,null],[10,"read","","Called when new network packet received.",9,null],[10,"connected","","Called when new peer is connected. Only called when peer supports the same protocol.",9,null],[10,"disconnected","","Called when a previously connected peer disconnects.",9,null],[11,"timeout","","Timer function called after a timeout created with `NetworkContext::timeout`.",9,null],[11,"clone","","",4,null],[11,"fmt","","",4,null],[11,"eq","","",4,null],[11,"parse","","Attempt to parse the peer mode from a string.",4,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[11,"clone","","",5,null],[11,"fmt","","",5,null],[11,"eq","","",5,null]],"paths":[[3,"NetworkConfiguration"],[3,"SessionInfo"],[4,"NetworkIoMessage"],[4,"NetworkError"],[4,"NonReservedPeerMode"],[4,"AllowIP"],[3,"NetworkContext"],[3,"NetworkService"],[3,"NetworkStats"],[8,"NetworkProtocolHandler"]]};
searchIndex["ethcore"] = {"doc":"Ethcore library","items":[[5,"contract_address","ethcore","Returns new address created from address and given nonce.",null,{"inputs":[{"name":"address"},{"name":"u256"}],"output":{"name":"address"}}],[0,"account_provider","","Account management.",null,null],[3,"Signature","ethcore::account_provider","",null,null],[3,"AccountProvider","","Account management.\nResponsible for unlocking accounts.",null,null],[4,"Error","","`AccountProvider` errors.",null,null],[13,"NotUnlocked","","Returned when account is not unlocked.",0,null],[13,"SStore","","Returned when signing fails.",0,null],[11,"fmt","","",0,null],[11,"fmt","","",0,null],[11,"from","","",0,{"inputs":[{"name":"sserror"}],"output":{"name":"self"}}],[11,"new","","Creates new account provider.",1,{"inputs":[{"name":"box"}],"output":{"name":"self"}}],[11,"transient_provider","","Creates not disk backed provider.",1,{"inputs":[],"output":{"name":"self"}}],[11,"new_account","","Creates new random account.",1,null],[11,"new_account_and_public","","Creates new random account and returns address and public key",1,null],[11,"insert_account","","Inserts new account into underlying store.\nDoes not unlock account!",1,null],[11,"import_presale","","Import a new presale wallet.",1,null],[11,"import_wallet","","Import a new presale wallet.",1,null],[11,"accounts","","Returns addresses of all accounts.",1,null],[11,"addresses_info","","Returns each address along with metadata.",1,null],[11,"set_address_name","","Returns each address along with metadata.",1,null],[11,"set_address_meta","","Returns each address along with metadata.",1,null],[11,"accounts_info","","Returns each account along with name and meta.",1,null],[11,"account_meta","","Returns each account along with name and meta.",1,null],[11,"set_account_name","","Returns each account along with name and meta.",1,null],[11,"set_account_meta","","Returns each account along with name and meta.",1,null],[11,"test_password","","Returns `true` if the password for `account` is `password`. `false` if not.",1,null],[11,"kill_account","","Permanently removes an account.",1,null],[11,"change_password","","Changes the password of `account` from `password` to `new_password`. Fails if incorrect `password` given.",1,null],[11,"unlock_account_permanently","","Unlocks account permanently.",1,null],[11,"unlock_account_temporarily","","Unlocks account temporarily (for one signing).",1,null],[11,"unlock_account_timed","","Unlocks account temporarily with a timeout.",1,null],[11,"is_unlocked","","Checks if given account is unlocked",1,null],[11,"sign","","Signs the message. If password is not provided the account must be unlocked.",1,null],[11,"decrypt","","Decrypts a message. If password is not provided the account must be unlocked.",1,null],[11,"list_geth_accounts","","Returns the underlying `SecretStore` reference if one exists.",1,null],[11,"import_geth_accounts","","Returns the underlying `SecretStore` reference if one exists.",1,null],[0,"engines","ethcore","Consensus engine specification and basic implementations.",null,null],[3,"NullEngine","ethcore::engines","An engine which does not provide any consensus mechanism and does not seal blocks.",null,null],[3,"InstantSeal","","An engine which does not provide any consensus mechanism, just seals blocks internally.",null,null],[3,"BasicAuthority","","Engine using `BasicAuthority` proof-of-work consensus algorithm, suitable for Ethereum\nmainnet chains in the Olympic, Frontier and Homestead eras.",null,null],[3,"AuthorityRound","","Engine using `AuthorityRound` proof-of-work consensus algorithm, suitable for Ethereum\nmainnet chains in the Olympic, Frontier and Homestead eras.",null,null],[11,"new","","Returns new instance of NullEngine with default VM Factory",2,{"inputs":[{"name":"commonparams"},{"name":"btreemap"}],"output":{"name":"self"}}],[11,"name","","",2,null],[11,"params","","",2,null],[11,"builtins","","",2,null],[11,"schedule","","",2,null],[11,"new","","Returns new instance of InstantSeal with default VM Factory",3,{"inputs":[{"name":"commonparams"},{"name":"btreemap"}],"output":{"name":"self"}}],[11,"name","","",3,null],[11,"params","","",3,null],[11,"builtins","","",3,null],[11,"schedule","","",3,null],[11,"is_sealer","","",3,null],[11,"generate_seal","","",3,null],[11,"new","","Create a new instance of BasicAuthority engine",4,{"inputs":[{"name":"commonparams"},{"name":"basicauthorityparams"},{"name":"btreemap"}],"output":{"name":"self"}}],[11,"name","","",4,null],[11,"version","","",4,null],[11,"seal_fields","","",4,null],[11,"params","","",4,null],[11,"builtins","","",4,null],[11,"extra_info","","Additional engine-specific information for the user/developer concerning `header`.",4,null],[11,"schedule","","",4,null],[11,"populate_from_parent","","",4,null],[11,"on_close_block","","Apply the block reward on finalisation of the block.\nThis assumes that all uncles are valid uncles (i.e. of at least one generation before the current).",4,null],[11,"is_sealer","","",4,null],[11,"generate_seal","","Attempt to seal the block internally.",4,null],[11,"verify_block_basic","","",4,null],[11,"verify_block_unordered","","",4,null],[11,"verify_block_family","","",4,null],[11,"verify_transaction_basic","","",4,null],[11,"verify_transaction","","",4,null],[11,"new","","Create a new instance of AuthorityRound engine.",5,{"inputs":[{"name":"commonparams"},{"name":"authorityroundparams"},{"name":"btreemap"}],"output":{"name":"result"}}],[11,"name","","",5,null],[11,"version","","",5,null],[11,"seal_fields","","Two fields - consensus step and the corresponding proposer signature.",5,null],[11,"params","","",5,null],[11,"builtins","","",5,null],[11,"extra_info","","Additional engine-specific information for the user/developer concerning `header`.",5,null],[11,"schedule","","",5,null],[11,"populate_from_parent","","",5,null],[11,"on_close_block","","Apply the block reward on finalisation of the block.\nThis assumes that all uncles are valid uncles (i.e. of at least one generation before the current).",5,null],[11,"is_sealer","","",5,null],[11,"generate_seal","","Attempt to seal the block internally.",5,null],[11,"verify_block_basic","","Check the number of seal fields.",5,null],[11,"verify_block_unordered","","Check if the signature belongs to the correct proposer.",5,null],[11,"verify_block_family","","",5,null],[11,"verify_transaction_basic","","",5,null],[11,"verify_transaction","","",5,null],[11,"register_message_channel","","",5,null],[8,"Engine","","A consensus mechanism for the chain. Generally either proof-of-work or proof-of-stake-based.\nProvides hooks into each of the major parts of block import.",null,null],[10,"name","","The name of this engine.",6,null],[11,"version","","The version of this engine. Should be of the form",6,null],[11,"seal_fields","","The number of additional header fields required for this engine.",6,null],[11,"extra_info","","Additional engine-specific information for the user/developer concerning `header`.",6,null],[11,"additional_params","","Additional information.",6,null],[10,"params","","Get the general parameters of the chain.",6,null],[10,"schedule","","Get the EVM schedule for the given `env_info`.",6,null],[10,"builtins","","Builtin-contracts we would like to see in the chain.\n(In principle these are just hints for the engine since that has the last word on them.)",6,null],[11,"maximum_extra_data_size","","Some intrinsic operation parameters; by default they take their value from the `spec()`&#39;s `engine_params`.",6,null],[11,"maximum_uncle_count","","Maximum number of uncles a block is allowed to declare.",6,null],[11,"maximum_uncle_age","","The number of generations back that uncles can be.",6,null],[11,"account_start_nonce","","The nonce with which accounts begin.",6,null],[11,"on_new_block","","Block transformation functions, before the transactions.",6,null],[11,"on_close_block","","Block transformation functions, after the transactions.",6,null],[11,"is_sealer","","If Some(true) this author is able to generate seals, generate_seal has to be implemented.\nNone indicates that this Engine never seals internally regardless of author (e.g. PoW).",6,null],[11,"is_default_sealer","","Checks if default address is able to seal.",6,null],[11,"generate_seal","","Attempt to seal the block internally.",6,null],[11,"verify_block_basic","","Phase 1 quick block verification. Only does checks that are cheap. `block` (the header&#39;s full block)\nmay be provided for additional checks. Returns either a null `Ok` or a general error detailing the problem with import.",6,null],[11,"verify_block_unordered","","Phase 2 verification. Perform costly checks such as transaction signatures. `block` (the header&#39;s full block)\nmay be provided for additional checks. Returns either a null `Ok` or a general error detailing the problem with import.",6,null],[11,"verify_block_family","","Phase 3 verification. Check block information against parent and uncles. `block` (the header&#39;s full block)\nmay be provided for additional checks. Returns either a null `Ok` or a general error detailing the problem with import.",6,null],[11,"verify_transaction_basic","","Additional verification for transactions in blocks.",6,null],[11,"verify_transaction","","Verify a particular transaction is valid.",6,null],[11,"signing_network_id","","The network ID that transactions should be signed with.",6,null],[11,"verify_block_seal","","Verify the seal of a block. This is an auxilliary method that actually just calls other `verify_` methods\nto get the job done. By default it must pass `verify_basic` and `verify_block_unordered`. If more or fewer\nmethods are needed for an Engine, this may be overridden.",6,null],[11,"populate_from_parent","","Don&#39;t forget to call Super::populate_from_parent when subclassing &amp; overriding.",6,null],[11,"is_builtin","","Determine whether a particular address is a builtin contract.",6,null],[11,"cost_of_builtin","","Determine the code execution cost of the builtin contract with address `a`.\nPanics if `is_builtin(a)` is not true.",6,null],[11,"execute_builtin","","Execution the builtin contract `a` on `input` and return `output`.\nPanics if `is_builtin(a)` is not true.",6,null],[11,"register_message_channel","","Add a channel for communication with Client which can be used for sealing.",6,null],[0,"block","ethcore","Blockchain block.",null,null],[3,"Block","ethcore::block","A block, encoded as it is on the block chain.",null,null],[12,"header","","The header of this block.",7,null],[12,"transactions","","The transactions in this block.",7,null],[12,"uncles","","The uncles of this block.",7,null],[3,"ExecutedBlock","","An internal type for a block&#39;s common elements.",null,null],[3,"BlockRefMut","","A set of references to `ExecutedBlock` fields that are publicly accessible.",null,null],[12,"header","","Block header.",8,null],[12,"transactions","","Block transactions.",8,null],[12,"uncles","","Block uncles.",8,null],[12,"receipts","","Transaction receipts.",8,null],[12,"state","","State.",8,null],[12,"traces","","Traces.",8,null],[3,"BlockRef","","A set of immutable references to `ExecutedBlock` fields that are publicly accessible.",null,null],[12,"header","","Block header.",9,null],[12,"transactions","","Block transactions.",9,null],[12,"uncles","","Block uncles.",9,null],[12,"receipts","","Transaction receipts.",9,null],[12,"state","","State.",9,null],[12,"traces","","Traces.",9,null],[3,"OpenBlock","","Block that is ready for transactions to be added.",null,null],[3,"ClosedBlock","","Just like `OpenBlock`, except that we&#39;ve applied `Engine::on_close_block`, finished up the non-seal header fields,\nand collected the uncles.",null,null],[3,"LockedBlock","","Just like `ClosedBlock` except that we can&#39;t reopen it and it&#39;s faster.",null,null],[3,"SealedBlock","","A block that has a valid seal.",null,null],[5,"enact","","Enact the block given by block header, transactions and uncles",null,null],[5,"enact_verified","","Enact the block given by `block_bytes` using `engine` on the database `db` with given `parent` block header",null,{"inputs":[{"name":"preverifiedblock"},{"name":"engine"},{"name":"bool"},{"name":"statedb"},{"name":"header"},{"name":"arc"},{"name":"factories"}],"output":{"name":"result"}}],[8,"IsBlock","","Trait for a object that is a `ExecutedBlock`.",null,null],[10,"block","","Get the `ExecutedBlock` associated with this object.",10,null],[11,"base","","Get the base `Block` object associated with this.",10,null],[11,"header","","Get the header associated with this object&#39;s block.",10,null],[11,"state","","Get the final state associated with this object&#39;s block.",10,null],[11,"transactions","","Get all information on transactions in this block.",10,null],[11,"receipts","","Get all information on receipts in this block.",10,null],[11,"traces","","Get all information concerning transaction tracing in this block.",10,null],[11,"uncles","","Get all uncles in this block.",10,null],[8,"Drain","","Trait for a object that has a state database.",null,null],[10,"drain","","Drop this object and return the underlieing database.",11,null],[11,"default","","",7,{"inputs":[],"output":{"name":"block"}}],[11,"fmt","","",7,null],[11,"clone","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"is_good","","Returns true if the given bytes form a valid encoding of a block in RLP.",7,null],[11,"rlp_bytes","","Get the RLP-encoding of the block with or without the seal.",7,null],[11,"decode","","",7,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"clone","","",12,null],[11,"fields_mut","","Get a structure containing individual references to all public fields.",12,null],[11,"fields","","Get a structure containing individual references to all public fields.",12,null],[11,"block","","",12,null],[11,"clone","","",13,null],[11,"clone","","",14,null],[11,"new","","Create a new `OpenBlock` ready for transaction pushing.",15,null],[11,"set_author","","Alter the author for the block.",15,null],[11,"set_timestamp","","Alter the timestamp of the block.",15,null],[11,"set_difficulty","","Alter the difficulty for the block.",15,null],[11,"set_gas_limit","","Alter the gas limit for the block.",15,null],[11,"set_gas_used","","Alter the gas limit for the block.",15,null],[11,"set_uncles_hash","","Alter the uncles hash the block.",15,null],[11,"set_transactions_root","","Alter transactions root for the block.",15,null],[11,"set_receipts_root","","Alter the receipts root for the block.",15,null],[11,"set_extra_data","","Alter the extra_data for the block.",15,null],[11,"push_uncle","","Add an uncle to the block, if possible.",15,null],[11,"env_info","","Get the environment info concerning this block.",15,null],[11,"push_transaction","","Push a transaction into the block.",15,null],[11,"close","","Turn this into a `ClosedBlock`.",15,null],[11,"close_and_lock","","Turn this into a `LockedBlock`.",15,null],[11,"block","","",15,null],[11,"block","","",13,null],[11,"block","","",14,null],[11,"hash","","Get the hash of the header without seal arguments.",13,null],[11,"lock","","Turn this into a `LockedBlock`, unable to be reopened again.",13,null],[11,"reopen","","Given an engine reference, reopen the `ClosedBlock` into an `OpenBlock`.",13,null],[11,"hash","","Get the hash of the header without seal arguments.",14,null],[11,"seal","","Provide a valid seal in order to turn this into a `SealedBlock`.",14,null],[11,"try_seal","","Provide a valid seal in order to turn this into a `SealedBlock`.\nThis does check the validity of `seal` with the engine.\nReturns the `ClosedBlock` back again if the seal is no good.",14,null],[11,"drain","","Drop this object and return the underlieing database.",14,null],[11,"rlp_bytes","","Get the RLP-encoding of the block.",16,null],[11,"drain","","Drop this object and return the underlieing database.",16,null],[11,"block","","",16,null],[0,"client","ethcore","Blockchain database client.",null,null],[3,"BlockChainInfo","ethcore::client","Information about the blockchain gathered together.",null,null],[12,"total_difficulty","","Blockchain difficulty.",17,null],[12,"pending_total_difficulty","","Block queue difficulty.",17,null],[12,"genesis_hash","","Genesis block hash.",17,null],[12,"best_block_hash","","Best blockchain block hash.",17,null],[12,"best_block_number","","Best blockchain block number.",17,null],[12,"ancient_block_hash","","Best ancient block hash.",17,null],[12,"ancient_block_number","","Best ancient block number.",17,null],[12,"first_block_hash","","First block on the best sequence.",17,null],[12,"first_block_number","","Number of the first block on the best sequence.",17,null],[3,"BlockChainCacheSize","","Represents blockchain&#39;s in-memory cache size in bytes.",null,null],[12,"blocks","","Blocks cache size.",18,null],[12,"block_details","","BlockDetails cache size.",18,null],[12,"transaction_addresses","","Transaction addresses cache size.",18,null],[12,"blocks_blooms","","Blooms cache size.",18,null],[12,"block_receipts","","Block receipts size.",18,null],[3,"BlockQueueInfo","","Verification queue status",null,null],[12,"unverified_queue_size","","Number of queued items pending verification",19,null],[12,"verified_queue_size","","Number of verified queued items pending import",19,null],[12,"verifying_queue_size","","Number of items being verified",19,null],[12,"max_queue_size","","Configured maximum number of items in the queue",19,null],[12,"max_mem_use","","Configured maximum number of bytes to use",19,null],[12,"mem_used","","Heap memory used in bytes",19,null],[3,"ClientReport","","Report on the status of a client.",null,null],[12,"blocks_imported","","How many blocks have been imported so far.",20,null],[12,"transactions_applied","","How many transactions have been applied so far.",20,null],[12,"gas_processed","","How much gas has been processed so far.",20,null],[12,"state_db_mem","","Memory used by state DB",20,null],[3,"Client","","Blockchain database client backed by a persistent database. Owns and manages a blockchain and a block queue.\nCall `import_block()` to import a block asynchronously; `flush_queue()` flushes the queue.",null,null],[3,"ClientConfig","","Client configuration. Includes configs for all sub-systems.",null,null],[12,"queue","","Block queue configuration.",21,null],[12,"blockchain","","Blockchain configuration.",21,null],[12,"tracing","","Trace configuration.",21,null],[12,"vm_type","","VM type.",21,null],[12,"fat_db","","Fat DB enabled?",21,null],[12,"pruning","","The JournalDB (&quot;pruning&quot;) algorithm to use.",21,null],[12,"name","","The name of the client instance.",21,null],[12,"db_cache_size","","RocksDB state column cache-size if not default",21,null],[12,"db_compaction","","State db compaction profile",21,null],[12,"db_wal","","Should db have WAL enabled?",21,null],[12,"mode","","Operating mode",21,null],[12,"verifier_type","","Type of block verifier used by client.",21,null],[12,"state_cache_size","","State db cache-size.",21,null],[12,"jump_table_size","","EVM jump-tables cache size.",21,null],[12,"history","","State pruning history size.",21,null],[12,"check_seal","","Check seal valididity on block import",21,null],[3,"Config","","Blockchain configuration.",null,null],[12,"pref_cache_size","","Preferred cache size in bytes.",22,null],[12,"max_cache_size","","Maximum cache size in bytes.",22,null],[12,"db_cache_size","","Backing db cache_size",22,null],[3,"TraceId","","Uniquely identifies Trace.",null,null],[12,"transaction","","Transaction",23,null],[12,"address","","Trace address within transaction.",23,null],[3,"UncleID","","Uniquely identifies Uncle.",null,null],[12,"block","","Block id.",24,null],[12,"position","","Position in block.",24,null],[3,"TestBlockChainClient","","Test client.",null,null],[12,"blocks","","Blocks.",25,null],[12,"numbers","","Mapping of numbers to hashes.",25,null],[12,"genesis_hash","","Genesis block hash.",25,null],[12,"last_hash","","Last block hash.",25,null],[12,"extra_data","","Extra data do set for each block",25,null],[12,"difficulty","","Difficulty.",25,null],[12,"balances","","Balances.",25,null],[12,"nonces","","Nonces.",25,null],[12,"storage","","Storage.",25,null],[12,"code","","Code.",25,null],[12,"execution_result","","Execution result.",25,null],[12,"receipts","","Transaction receipts.",25,null],[12,"logs","","Logs",25,null],[12,"queue_size","","Block queue size.",25,null],[12,"miner","","Miner",25,null],[12,"spec","","Spec",25,null],[12,"vm_factory","","VM Factory",25,null],[12,"latest_block_timestamp","","Timestamp assigned to latest sealed block",25,null],[12,"ancient_block","","Ancient block info.",25,null],[12,"first_block","","First block info.",25,null],[3,"TraceFilter","","Easy to use trace filter.",null,null],[12,"range","","Range of filtering.",26,null],[12,"from_address","","From address.",26,null],[12,"to_address","","To address.",26,null],[3,"Executed","","Transaction execution receipt.",null,null],[12,"gas","","Gas paid up front for execution of transaction.",27,null],[12,"gas_used","","Gas used during execution of transaction.",27,null],[12,"refunded","","Gas refunded after the execution of transaction.\nTo get gas that was required up front, add `refunded` and `gas_used`.",27,null],[12,"cumulative_gas_used","","Cumulative gas used in current block so far.",27,null],[12,"logs","","Vector of logs generated by transaction.",27,null],[12,"contracts_created","","Addresses of contracts created during execution of transaction.\nOrdered from earliest creation.",27,null],[12,"output","","Transaction output.",27,null],[12,"trace","","The trace of this transaction.",27,null],[12,"vm_trace","","The VM trace of this transaction.",27,null],[12,"state_diff","","The state diff, if we traced it.",27,null],[3,"Executive","","Transaction executor.",null,null],[3,"TransactOptions","","Transaction execution options.",null,null],[12,"tracing","","Enable call tracing.",28,null],[12,"vm_tracing","","Enable VM tracing.",28,null],[12,"check_nonce","","Check transaction nonce before execution.",28,null],[3,"EnvInfo","","Information concerning the execution environment for a message-call/contract-creation.",null,null],[12,"number","","The block number.",29,null],[12,"author","","The block author.",29,null],[12,"timestamp","","The block timestamp.",29,null],[12,"difficulty","","The block difficulty.",29,null],[12,"gas_limit","","The block gas limit.",29,null],[12,"last_hashes","","The last 256 block hashes.",29,null],[12,"gas_used","","The gas used.",29,null],[3,"CallAnalytics","","Options concerning what analytics we run on the call.",null,null],[12,"transaction_tracing","","Make a transaction trace.",30,null],[12,"vm_tracing","","Make a VM trace.",30,null],[12,"state_diffing","","Make a diff.",30,null],[4,"BlockStatus","","General block status",null,null],[13,"InChain","","Part of the blockchain.",31,null],[13,"Queued","","Queued for import.",31,null],[13,"Bad","","Known as bad.",31,null],[13,"Unknown","","Unknown.",31,null],[4,"Mode","","Operating mode for the client.",null,null],[13,"Active","","Always on.",32,null],[13,"Passive","","Goes offline after RLP is inactive for some (given) time, but\ncomes back online after a while of inactivity.",32,null],[13,"Dark","","Goes offline after RLP is inactive for some (given) time and\nstays inactive.",32,null],[13,"Off","","Always off.",32,null],[4,"DatabaseCompactionProfile","","Client state db compaction profile",null,null],[13,"Auto","","Try to determine compaction profile automatically",33,null],[13,"SSD","","SSD compaction profile",33,null],[13,"HDD","","HDD or other slow storage io compaction profile",33,null],[4,"Error","","Client configuration errors.",null,null],[13,"Trace","","TraceDB configuration error.",34,null],[13,"Trie","","TrieDB-related error.",34,null],[13,"Database","","Database error",34,null],[13,"Util","","Util error",34,null],[4,"BlockID","","Uniquely identifies block.",null,null],[13,"Hash","","Block&#39;s sha3.\nQuerying by hash is always faster.",35,null],[13,"Number","","Block number within canon blockchain.",35,null],[13,"Earliest","","Earliest block (genesis).",35,null],[13,"Latest","","Latest mined block.",35,null],[13,"Pending","","Pending block.",35,null],[4,"TransactionID","","Uniquely identifies transaction.",null,null],[13,"Hash","","Transaction&#39;s sha3.",36,null],[13,"Location","","Block id and transaction index within this block.\nQuerying by block position is always faster.",36,null],[4,"EachBlockWith","","Used for generating test client blocks.",null,null],[13,"Nothing","","Plain block.",37,null],[13,"Uncle","","Block with an uncle.",37,null],[13,"Transaction","","Block with a transaction.",37,null],[13,"UncleAndTransaction","","Block with an uncle and transaction.",37,null],[4,"BlockImportError","","Error dedicated to import block function",null,null],[13,"Import","","Import error",38,null],[13,"Block","","Block error",38,null],[13,"Other","","Other error",38,null],[4,"TransactionImportResult","","Represents the result of importing transaction.",null,null],[13,"Current","","Transaction was imported to current queue.",39,null],[13,"Future","","Transaction was imported to future queue.",39,null],[4,"TransactionImportError","","Api-level error for transaction import",null,null],[13,"Transaction","","Transaction error",40,null],[13,"Other","","Other error",40,null],[11,"fmt","","",33,null],[11,"eq","","",33,null],[11,"default","","",33,{"inputs":[],"output":{"name":"self"}}],[11,"compaction_profile","","Returns corresponding compaction profile.",33,null],[11,"from_str","","",33,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"clone","","",32,null],[11,"default","","",32,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",32,null],[11,"fmt","","",21,null],[11,"eq","","",21,null],[11,"ne","","",21,null],[11,"default","","",21,{"inputs":[],"output":{"name":"clientconfig"}}],[11,"fmt","","",34,null],[11,"from","","",34,{"inputs":[{"name":"traceerror"}],"output":{"name":"self"}}],[11,"from","","",34,{"inputs":[{"name":"trieerror"}],"output":{"name":"self"}}],[11,"from","","",34,{"inputs":[{"name":"utilerror"}],"output":{"name":"self"}}],[11,"from","","",34,{"inputs":[{"name":"box"}],"output":{"name":"self"}}],[11,"fmt","","",34,null],[11,"clone","","",37,null],[11,"default","","",25,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Creates new test client.",25,{"inputs":[],"output":{"name":"self"}}],[11,"new_with_extra_data","","Creates new test client with specified extra data for each block",25,{"inputs":[{"name":"bytes"}],"output":{"name":"self"}}],[11,"new_with_spec","","Create test client with custom spec.",25,{"inputs":[{"name":"spec"}],"output":{"name":"self"}}],[11,"new_with_spec_and_extra","","Create test client with custom spec and extra data.",25,{"inputs":[{"name":"spec"},{"name":"bytes"}],"output":{"name":"self"}}],[11,"set_transaction_receipt","","Set the transaction receipt result",25,null],[11,"set_execution_result","","Set the execution result.",25,null],[11,"set_balance","","Set the balance of account `address` to `balance`.",25,null],[11,"set_nonce","","Set nonce of account `address` to `nonce`.",25,null],[11,"set_code","","Set `code` at `address`.",25,null],[11,"set_storage","","Set storage `position` to `value` for account `address`.",25,null],[11,"set_queue_size","","Set block queue size for testing",25,null],[11,"set_latest_block_timestamp","","Set timestamp assigned to latest sealed block",25,null],[11,"set_logs","","Set logs to return for each logs call.",25,null],[11,"add_blocks","","Add blocks to test client.",25,null],[11,"corrupt_block","","Make a bad block by setting invalid extra data.",25,null],[11,"corrupt_block_parent","","Make a bad block by setting invalid parent hash.",25,null],[11,"block_hash_delta_minus","","TODO:",25,null],[11,"insert_transaction_to_queue","","Inserts a transaction to miners transactions queue.",25,null],[11,"latest_schedule","","",25,null],[11,"prepare_open_block","","",25,null],[11,"vm_factory","","",25,null],[11,"import_sealed_block","","",25,null],[11,"call","","",25,null],[11,"replay","","",25,null],[11,"block_total_difficulty","","",25,null],[11,"block_hash","","",25,null],[11,"nonce","","",25,null],[11,"latest_nonce","","",25,null],[11,"code","","",25,null],[11,"balance","","",25,null],[11,"latest_balance","","",25,null],[11,"storage_at","","",25,null],[11,"list_accounts","","",25,null],[11,"transaction","","",25,null],[11,"uncle","","",25,null],[11,"uncle_extra_info","","",25,null],[11,"transaction_receipt","","",25,null],[11,"blocks_with_bloom","","",25,null],[11,"logs","","",25,null],[11,"last_hashes","","",25,null],[11,"best_block_header","","",25,null],[11,"block_header","","",25,null],[11,"block_body","","",25,null],[11,"block","","",25,null],[11,"block_extra_info","","",25,null],[11,"block_status","","",25,null],[11,"tree_route","","",25,null],[11,"find_uncles","","",25,null],[11,"state_data","","",25,null],[11,"block_receipts","","",25,null],[11,"import_block","","",25,null],[11,"import_block_with_receipts","","",25,null],[11,"queue_info","","",25,null],[11,"clear_queue","","",25,null],[11,"additional_params","","",25,null],[11,"chain_info","","",25,null],[11,"filter_traces","","",25,null],[11,"trace","","",25,null],[11,"transaction_traces","","",25,null],[11,"block_traces","","",25,null],[11,"queue_transactions","","",25,null],[11,"pending_transactions","","",25,null],[11,"signing_network_id","","",25,null],[11,"mode","","",25,null],[11,"set_mode","","",25,null],[11,"fmt","","",17,null],[11,"default","","",20,{"inputs":[],"output":{"name":"clientreport"}}],[11,"clone","","",20,null],[11,"fmt","","",20,null],[11,"eq","","",20,null],[11,"ne","","",20,null],[11,"accrue_block","","Alter internal reporting to reflect the additional `block` has been processed.",20,null],[11,"new","","Create a new client with given spec and DB path and custom verifier.",41,{"inputs":[{"name":"clientconfig"},{"name":"spec"},{"name":"path"},{"name":"arc"},{"name":"iochannel"},{"name":"databaseconfig"}],"output":{"name":"result"}}],[11,"add_notify","","Adds an actor to be notified on certain events",41,null],[11,"on_mode_change","","Register an action to be done if a mode change happens.",41,null],[11,"flush_queue","","Flush the block import queue.",41,null],[11,"import_verified_blocks","","This is triggered by a message coming from a block queue when the block is ready for insertion",41,null],[11,"import_queued_transactions","","Import transactions from the IO queue",41,null],[11,"update_sealing","","Used by PoA to try sealing on period change.",41,null],[11,"state_at","","Attempt to get a copy of a specific block&#39;s final state.",41,null],[11,"state_at_beginning","","Attempt to get a copy of a specific block&#39;s beginning state.",41,null],[11,"state","","Get a copy of the best block&#39;s state.",41,null],[11,"blockchain_cache_info","","Get info on the cache.",41,null],[11,"report","","Get the report.",41,null],[11,"tick","","Tick the client.",41,null],[11,"block_number","","Look up the block number for the given block ID.",41,null],[11,"take_snapshot","","Take a snapshot at the given block.\nIf the ID given is &quot;latest&quot;, this will default to 1000 blocks behind.",41,null],[11,"pruning_history","","Ask the client what the history parameter is.",41,null],[11,"restore_db","","Restart the client with a new backend",41,null],[11,"call","","",41,null],[11,"replay","","",41,null],[11,"keep_alive","","",41,null],[11,"mode","","",41,null],[11,"set_mode","","",41,null],[11,"best_block_header","","",41,null],[11,"block_header","","",41,null],[11,"block_body","","",41,null],[11,"block","","",41,null],[11,"block_status","","",41,null],[11,"block_total_difficulty","","",41,null],[11,"nonce","","",41,null],[11,"block_hash","","",41,null],[11,"code","","",41,null],[11,"balance","","",41,null],[11,"storage_at","","",41,null],[11,"list_accounts","","",41,null],[11,"transaction","","",41,null],[11,"uncle","","",41,null],[11,"transaction_receipt","","",41,null],[11,"tree_route","","",41,null],[11,"find_uncles","","",41,null],[11,"state_data","","",41,null],[11,"block_receipts","","",41,null],[11,"import_block","","",41,null],[11,"import_block_with_receipts","","",41,null],[11,"queue_info","","",41,null],[11,"clear_queue","","",41,null],[11,"chain_info","","",41,null],[11,"additional_params","","",41,null],[11,"blocks_with_bloom","","",41,null],[11,"logs","","",41,null],[11,"filter_traces","","",41,null],[11,"trace","","",41,null],[11,"transaction_traces","","",41,null],[11,"block_traces","","",41,null],[11,"last_hashes","","",41,null],[11,"queue_transactions","","",41,null],[11,"pending_transactions","","",41,null],[11,"signing_network_id","","",41,null],[11,"block_extra_info","","",41,null],[11,"uncle_extra_info","","",41,null],[11,"latest_schedule","","",41,null],[11,"prepare_open_block","","",41,null],[11,"vm_factory","","",41,null],[11,"import_sealed_block","","",41,null],[11,"on_panic","","",41,null],[0,"chain_notify","","Chain notify interface",null,null],[8,"ChainNotify","ethcore::client::chain_notify","Represents what has to be handled by actor listening to chain events",null,null],[11,"new_blocks","","fires when chain has new blocks.",42,null],[11,"start","","fires when chain achieves active mode",42,null],[11,"stop","","fires when chain achieves passive mode",42,null],[6,"LastHashes","ethcore::client","Simple vector of hashes, should be at most 256 items large, can be smaller if being used\nfor a block whose number is less than 257.",null,null],[8,"BlockChainClient","","Blockchain database client. Owns and manages a blockchain and a block queue.",null,null],[11,"keep_alive","","Should be called by any external-facing interface when actively using the client.\nTo minimise chatter, there&#39;s no need to call more than once every 30s.",43,null],[10,"block_header","","Get raw block header data by block id.",43,null],[10,"block_body","","Get raw block body data by block id.\nBlock body is an RLP list of two items: uncles and transactions.",43,null],[10,"block","","Get raw block data by block header hash.",43,null],[10,"block_status","","Get block status by block header hash.",43,null],[10,"block_total_difficulty","","Get block total difficulty.",43,null],[10,"nonce","","Attempt to get address nonce at given block.\nMay not fail on BlockID::Latest.",43,null],[11,"latest_nonce","","Get address nonce at the latest block&#39;s state.",43,null],[10,"block_hash","","Get block hash.",43,null],[10,"code","","Get address code at given block&#39;s state.",43,null],[11,"latest_code","","Get address code at the latest block&#39;s state.",43,null],[10,"balance","","Get address balance at the given block&#39;s state.",43,null],[11,"latest_balance","","Get address balance at the latest block&#39;s state.",43,null],[10,"storage_at","","Get value of the storage at given position at the given block&#39;s state.",43,null],[11,"latest_storage_at","","Get value of the storage at given position at the latest block&#39;s state.",43,null],[10,"list_accounts","","Get a list of all accounts in the block `id`, if fat DB is in operation, otherwise `None`.",43,null],[10,"transaction","","Get transaction with given hash.",43,null],[10,"uncle","","Get uncle with given id.",43,null],[10,"transaction_receipt","","Get transaction receipt with given hash.",43,null],[10,"tree_route","","Get a tree route between `from` and `to`.\nSee `BlockChain::tree_route`.",43,null],[10,"find_uncles","","Get all possible uncle hashes for a block.",43,null],[10,"state_data","","Get latest state node",43,null],[10,"block_receipts","","Get raw block receipts data by block header hash.",43,null],[10,"import_block","","Import a block into the blockchain.",43,null],[10,"import_block_with_receipts","","Import a block with transaction receipts. Does no sealing and transaction validation.",43,null],[10,"queue_info","","Get block queue information.",43,null],[10,"clear_queue","","Clear block queue and abort all import activity.",43,null],[10,"chain_info","","Get blockchain information.",43,null],[10,"additional_params","","Get the registrar address, if it exists.",43,null],[10,"best_block_header","","Get the best block header.",43,null],[10,"blocks_with_bloom","","Returns numbers of blocks containing given bloom.",43,null],[10,"logs","","Returns logs matching given filter.",43,null],[10,"call","","Makes a non-persistent transaction call.",43,null],[10,"replay","","Replays a given transaction for inspection.",43,null],[10,"filter_traces","","Returns traces matching given filter.",43,null],[10,"trace","","Returns trace with given id.",43,null],[10,"transaction_traces","","Returns traces created by transaction.",43,null],[10,"block_traces","","Returns traces created by transaction from block.",43,null],[10,"last_hashes","","Get last hashes starting from best block.",43,null],[10,"queue_transactions","","Queue transactions for importing.",43,null],[10,"pending_transactions","","list all transactions",43,null],[11,"gas_price_corpus","","Sorted list of transaction gas prices from at least last sample_size blocks.",43,null],[11,"gas_price_median","","Calculate median gas price from recent blocks if they have any transactions.",43,null],[11,"gas_price_histogram","","Get the gas price distribution based on recent blocks if they have any transactions.",43,null],[10,"signing_network_id","","Get the preferred network ID to sign on",43,null],[10,"mode","","Get the mode.",43,null],[10,"set_mode","","Set the mode.",43,null],[10,"block_extra_info","","Returns engine-related extra info for `BlockID`.",43,null],[10,"uncle_extra_info","","Returns engine-related extra info for `UncleID`.",43,null],[8,"MiningBlockChainClient","","Extended client interface used for mining",null,null],[10,"prepare_open_block","","Returns OpenBlock prepared for closing.",44,null],[10,"vm_factory","","Returns EvmFactory.",44,null],[10,"import_sealed_block","","Import sealed block. Skips all verifications.",44,null],[10,"latest_schedule","","Returns latest schedule.",44,null],[0,"error","ethcore","General error types for use in ethcore.",null,null],[4,"ExecutionError","ethcore::error","Result of executing the transaction.",null,null],[13,"NotEnoughBaseGas","","Returned when there gas paid for transaction execution is\nlower than base gas required.",45,null],[12,"required","ethcore::error::ExecutionError","Absolute minimum gas required.",45,null],[12,"got","","Gas provided.",45,null],[13,"BlockGasLimitReached","ethcore::error","Returned when block (gas_used + gas) &gt; gas_limit.",45,null],[12,"gas_limit","ethcore::error::ExecutionError","Gas limit of block for transaction.",45,null],[12,"gas_used","","Gas used in block prior to transaction.",45,null],[12,"gas","","Amount of gas in block.",45,null],[13,"InvalidNonce","ethcore::error","Returned when transaction nonce does not match state nonce.",45,null],[12,"expected","ethcore::error::ExecutionError","Nonce expected.",45,null],[12,"got","","Nonce found.",45,null],[13,"NotEnoughCash","ethcore::error","Returned when cost of transaction (value + gas_price * gas) exceeds\ncurrent sender balance.",45,null],[12,"required","ethcore::error::ExecutionError","Minimum required balance.",45,null],[12,"got","","Actual balance.",45,null],[13,"Internal","ethcore::error","Returned when internal evm error occurs.",45,null],[13,"TransactionMalformed","","Returned when generic transaction occurs",45,null],[4,"CallError","","Result of executing the transaction.",null,null],[13,"TransactionNotFound","","Couldn&#39;t find the transaction in the chain.",46,null],[13,"StatePruned","","Couldn&#39;t find requested block&#39;s state in the chain.",46,null],[13,"Execution","","Error executing.",46,null],[4,"TransactionError","","Errors concerning transaction processing.",null,null],[13,"AlreadyImported","","Transaction is already imported to the queue",47,null],[13,"Old","","Transaction is not valid anymore (state already has higher nonce)",47,null],[13,"TooCheapToReplace","","Transaction has too low fee\n(there is already a transaction with the same sender-nonce but higher gas price)",47,null],[13,"LimitReached","","Transaction was not imported to the queue because limit has been reached.",47,null],[13,"InsufficientGasPrice","","Transaction&#39;s gas price is below threshold.",47,null],[12,"minimal","ethcore::error::TransactionError","Minimal expected gas price",47,null],[12,"got","","Transaction gas price",47,null],[13,"InsufficientGas","ethcore::error","Transaction&#39;s gas is below currently set minimal gas requirement.",47,null],[12,"minimal","ethcore::error::TransactionError","Minimal expected gas",47,null],[12,"got","","Transaction gas",47,null],[13,"InsufficientBalance","ethcore::error","Sender doesn&#39;t have enough funds to pay for this transaction",47,null],[12,"balance","ethcore::error::TransactionError","Senders balance",47,null],[12,"cost","","Transaction cost",47,null],[13,"GasLimitExceeded","ethcore::error","Transactions gas is higher then current gas limit",47,null],[12,"limit","ethcore::error::TransactionError","Current gas limit",47,null],[12,"got","","Declared transaction gas",47,null],[13,"InvalidGasLimit","ethcore::error","Transaction&#39;s gas limit (aka gas) is invalid.",47,null],[13,"SenderBanned","","Transaction sender is banned.",47,null],[13,"RecipientBanned","","Transaction receipient is banned.",47,null],[13,"CodeBanned","","Contract creation code is banned.",47,null],[13,"InvalidNetworkId","","Invalid network ID given.",47,null],[4,"BlockError","","Errors concerning block processing.",null,null],[13,"TooManyUncles","","Block has too many uncles.",48,null],[13,"ExtraDataOutOfBounds","","Extra data is of an invalid length.",48,null],[13,"InvalidSealArity","","Seal is incorrect format.",48,null],[13,"TooMuchGasUsed","","Block has too much gas used.",48,null],[13,"InvalidUnclesHash","","Uncles hash in header is invalid.",48,null],[13,"UncleTooOld","","An uncle is from a generation too old.",48,null],[13,"UncleIsBrother","","An uncle is from the same generation as the block.",48,null],[13,"UncleInChain","","An uncle is already in the chain.",48,null],[13,"UncleParentNotInChain","","An uncle has a parent not in the chain.",48,null],[13,"InvalidStateRoot","","State root header field is invalid.",48,null],[13,"InvalidGasUsed","","Gas used header field is invalid.",48,null],[13,"InvalidTransactionsRoot","","Transactions root header field is invalid.",48,null],[13,"DifficultyOutOfBounds","","Difficulty is out of range; this can be used as an looser error prior to getting a definitive\nvalue for difficulty. This error needs only provide bounds of which it is out.",48,null],[13,"InvalidDifficulty","","Difficulty header field is invalid; this is a strong error used after getting a definitive\nvalue for difficulty (which is provided).",48,null],[13,"MismatchedH256SealElement","","Seal element of type H256 (max_hash for Ethash, but could be something else for\nother seal engines) is out of bounds.",48,null],[13,"InvalidProofOfWork","","Proof-of-work aspect of seal, which we assume is a 256-bit value, is invalid.",48,null],[13,"InvalidSeal","","Some low-level aspect of the seal is incorrect.",48,null],[13,"InvalidGasLimit","","Gas limit header field is invalid.",48,null],[13,"InvalidReceiptsRoot","","Receipts trie root header field is invalid.",48,null],[13,"InvalidTimestamp","","Timestamp header field is invalid.",48,null],[13,"InvalidLogBloom","","Log bloom header field is invalid.",48,null],[13,"InvalidParentHash","","Parent hash field of header is invalid; this is an invalid error indicating a logic flaw in the codebase.\nTODO: remove and favour an assert!/panic!.",48,null],[13,"InvalidNumber","","Number field of header is invalid.",48,null],[13,"RidiculousNumber","","Block number isn&#39;t sensible.",48,null],[13,"UnknownParent","","Parent given is unknown.",48,null],[13,"UnknownUncleParent","","Uncle parent given is unknown.",48,null],[13,"DoubleVote","","The same author issued different votes at the same step.",48,null],[4,"ImportError","","Import to the block queue result",null,null],[13,"AlreadyInChain","","Already in the block chain.",49,null],[13,"AlreadyQueued","","Already in the block queue.",49,null],[13,"KnownBad","","Already marked as bad from a previous import (could mean parent is bad).",49,null],[4,"Error","","General error type which should be capable of representing all errors in ethcore.",null,null],[13,"Client","","Client configuration error.",50,null],[13,"Util","","Error concerning a utility.",50,null],[13,"Block","","Error concerning block processing.",50,null],[13,"UnknownEngineName","","Unknown engine given.",50,null],[13,"Execution","","Error concerning EVM code execution.",50,null],[13,"Transaction","","Error concerning transaction processing.",50,null],[13,"Import","","Error concerning block import.",50,null],[13,"PowHashInvalid","","PoW hash is invalid or out of date.",50,null],[13,"PowInvalid","","The value of the nonce or mishash is invalid.",50,null],[13,"Trie","","Error concerning TrieDBs",50,null],[13,"Io","","Io crate error.",50,null],[13,"StdIo","","Standard io error.",50,null],[13,"Snappy","","Snappy error.",50,null],[13,"Snapshot","","Snapshot error.",50,null],[13,"Ethkey","","Ethkey error.",50,null],[6,"ImportResult","","Result of import block operation.",null,null],[11,"fmt","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"clone","","",47,null],[11,"fmt","","",47,null],[11,"fmt","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"clone","","",48,null],[11,"fmt","","",48,null],[11,"fmt","","",49,null],[11,"clone","","",49,null],[11,"eq","","",49,null],[11,"fmt","","",49,null],[11,"fmt","","",50,null],[11,"fmt","","",50,null],[11,"from","","",50,{"inputs":[{"name":"clienterror"}],"output":{"name":"error"}}],[11,"from","","",50,{"inputs":[{"name":"transactionerror"}],"output":{"name":"error"}}],[11,"from","","",50,{"inputs":[{"name":"importerror"}],"output":{"name":"error"}}],[11,"from","","",50,{"inputs":[{"name":"blockerror"}],"output":{"name":"error"}}],[11,"from","","",50,{"inputs":[{"name":"executionerror"}],"output":{"name":"error"}}],[11,"from","","",50,{"inputs":[{"name":"decodererror"}],"output":{"name":"error"}}],[11,"from","","",50,{"inputs":[{"name":"utilerror"}],"output":{"name":"error"}}],[11,"from","","",50,{"inputs":[{"name":"ioerror"}],"output":{"name":"error"}}],[11,"from","","",50,{"inputs":[{"name":"trieerror"}],"output":{"name":"error"}}],[11,"from","","",50,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",50,{"inputs":[{"name":"blockimporterror"}],"output":{"name":"error"}}],[11,"from","","",50,{"inputs":[{"name":"invalidinput"}],"output":{"name":"error"}}],[11,"from","","",50,{"inputs":[{"name":"snapshoterror"}],"output":{"name":"error"}}],[11,"from","","",50,{"inputs":[{"name":"ethkeyerror"}],"output":{"name":"error"}}],[11,"from","","",50,{"inputs":[{"name":"box"}],"output":{"name":"error"}}],[11,"from_bytes","","",48,null],[11,"to_bytes","","",48,null],[11,"from_bytes","","",49,null],[11,"to_bytes","","",49,null],[11,"from_bytes","","",47,null],[11,"to_bytes","","",47,null],[0,"ethereum","ethcore","Ethereum protocol module.",null,null],[5,"new_olympic","ethcore::ethereum","Create a new Olympic chain spec.",null,{"inputs":[],"output":{"name":"spec"}}],[5,"new_frontier","","Create a new Frontier mainnet chain spec.",null,{"inputs":[],"output":{"name":"spec"}}],[5,"new_classic","","Create a new Frontier mainnet chain spec without the DAO hardfork.",null,{"inputs":[],"output":{"name":"spec"}}],[5,"new_expanse","","Create a new Frontier mainnet chain spec without the DAO hardfork.",null,{"inputs":[],"output":{"name":"spec"}}],[5,"new_frontier_test","","Create a new Frontier chain spec as though it never changes to Homestead.",null,{"inputs":[],"output":{"name":"spec"}}],[5,"new_homestead_test","","Create a new Homestead chain spec as though it never changed from Frontier.",null,{"inputs":[],"output":{"name":"spec"}}],[5,"new_eip150_test","","Create a new Homestead-EIP150 chain spec as though it never changed from Homestead/Frontier.",null,{"inputs":[],"output":{"name":"spec"}}],[5,"new_eip161_test","","Create a new Homestead-EIP150 chain spec as though it never changed from Homestead/Frontier.",null,{"inputs":[],"output":{"name":"spec"}}],[5,"new_transition_test","","Create a new Frontier/Homestead/DAO chain spec with transition points at #5 and #8.",null,{"inputs":[],"output":{"name":"spec"}}],[5,"new_mainnet_like","","Create a new Frontier main net chain spec without genesis accounts.",null,{"inputs":[],"output":{"name":"spec"}}],[5,"new_ropsten","","Create a new Ropsten chain spec.",null,{"inputs":[],"output":{"name":"spec"}}],[5,"new_morden","","Create a new Morden chain spec.",null,{"inputs":[],"output":{"name":"spec"}}],[0,"ethash","","Export the ethash module.",null,null],[3,"EthashParams","ethcore::ethereum::ethash","Ethash params.",null,null],[12,"gas_limit_bound_divisor","","Gas limit divisor.",51,null],[12,"minimum_difficulty","","Minimum difficulty.",51,null],[12,"difficulty_bound_divisor","","Difficulty bound divisor.",51,null],[12,"difficulty_increment_divisor","","Difficulty increment divisor.",51,null],[12,"duration_limit","","Block duration.",51,null],[12,"block_reward","","Block reward.",51,null],[12,"registrar","","Namereg contract address.",51,null],[12,"homestead_transition","","Homestead transition block number.",51,null],[12,"dao_hardfork_transition","","DAO hard-fork transition block (X).",51,null],[12,"dao_hardfork_beneficiary","","DAO hard-fork refund contract address (C).",51,null],[12,"dao_hardfork_accounts","","DAO hard-fork DAO accounts list (L)",51,null],[12,"difficulty_hardfork_transition","","Transition block for a change of difficulty params (currently just bound_divisor).",51,null],[12,"difficulty_hardfork_bound_divisor","","Difficulty param after the difficulty transition.",51,null],[12,"bomb_defuse_transition","","Block on which there is no additional difficulty from the exponential bomb.",51,null],[12,"eip150_transition","","Number of first block where EIP-150 rules begin.",51,null],[12,"eip155_transition","","Number of first block where EIP-155 rules begin.",51,null],[12,"eip160_transition","","Number of first block where EIP-160 rules begin.",51,null],[12,"eip161abc_transition","","Number of first block where EIP-161.abc begin.",51,null],[12,"eip161d_transition","","Number of first block where EIP-161.d begins.",51,null],[12,"ecip1010_pause_transition","","Number of first block where ECIP-1010 begins.",51,null],[12,"ecip1010_continue_transition","","Number of first block where ECIP-1010 ends.",51,null],[12,"max_code_size","","Maximum amount of code that can be deploying into a contract.",51,null],[3,"Ethash","","Engine using Ethash proof-of-work consensus algorithm, suitable for Ethereum\nmainnet chains in the Olympic, Frontier and Homestead eras.",null,null],[11,"fmt","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"from","","",51,{"inputs":[{"name":"ethashparams"}],"output":{"name":"self"}}],[11,"new","","Create a new instance of Ethash engine",52,{"inputs":[{"name":"commonparams"},{"name":"ethashparams"},{"name":"btreemap"}],"output":{"name":"self"}}],[11,"name","","",52,null],[11,"version","","",52,null],[11,"seal_fields","","",52,null],[11,"params","","",52,null],[11,"additional_params","","",52,null],[11,"builtins","","",52,null],[11,"extra_info","","Additional engine-specific information for the user/developer concerning `header`.",52,null],[11,"schedule","","",52,null],[11,"signing_network_id","","",52,null],[11,"populate_from_parent","","",52,null],[11,"on_new_block","","",52,null],[11,"on_close_block","","Apply the block reward on finalisation of the block.\nThis assumes that all uncles are valid uncles (i.e. of at least one generation before the current).",52,null],[11,"verify_block_basic","","",52,null],[11,"verify_block_unordered","","",52,null],[11,"verify_block_family","","",52,null],[11,"verify_transaction_basic","","",52,null],[11,"verify_transaction","","",52,null],[11,"boundary_to_difficulty","","Convert an Ethash boundary to its original difficulty. Basically just `f(x) = 2^256 / x`.",52,{"inputs":[{"name":"h256"}],"output":{"name":"u256"}}],[11,"difficulty_to_boundary","","Convert an Ethash difficulty to the target boundary. Basically just `f(x) = 2^256 / x`.",52,{"inputs":[{"name":"u256"}],"output":{"name":"h256"}}],[0,"denominations","ethcore::ethereum","Export the denominations module.",null,null],[5,"ether","ethcore::ethereum::denominations","1 Ether in Wei",null,{"inputs":[],"output":{"name":"u256"}}],[5,"finney","","1 Finney in Wei",null,{"inputs":[],"output":{"name":"u256"}}],[5,"szabo","","1 Szabo in Wei",null,{"inputs":[],"output":{"name":"u256"}}],[5,"shannon","","1 Shannon in Wei",null,{"inputs":[],"output":{"name":"u256"}}],[5,"wei","","1 Wei in Wei",null,{"inputs":[],"output":{"name":"u256"}}],[0,"header","ethcore","Block header.",null,null],[3,"Header","ethcore::header","A block header.",null,null],[6,"BlockNumber","","Type for Block number",null,null],[11,"fmt","","",53,null],[11,"clone","","",53,null],[11,"eq","","",53,null],[11,"default","","",53,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Create a new, default-valued, header.",53,{"inputs":[],"output":{"name":"self"}}],[11,"parent_hash","","Get the parent_hash field of the header.",53,null],[11,"timestamp","","Get the timestamp field of the header.",53,null],[11,"number","","Get the number field of the header.",53,null],[11,"author","","Get the author field of the header.",53,null],[11,"extra_data","","Get the extra data field of the header.",53,null],[11,"extra_data_mut","","Get a mutable reference to extra_data",53,null],[11,"state_root","","Get the state root field of the header.",53,null],[11,"receipts_root","","Get the receipts root field of the header.",53,null],[11,"log_bloom","","Get the log bloom field of the header.",53,null],[11,"transactions_root","","Get the transactions root field of the header.",53,null],[11,"uncles_hash","","Get the uncles hash field of the header.",53,null],[11,"gas_used","","Get the gas used field of the header.",53,null],[11,"gas_limit","","Get the gas limit field of the header.",53,null],[11,"difficulty","","Get the difficulty field of the header.",53,null],[11,"seal","","Get the seal field of the header.",53,null],[11,"set_parent_hash","","Set the number field of the header.",53,null],[11,"set_uncles_hash","","Set the uncles hash field of the header.",53,null],[11,"set_state_root","","Set the state root field of the header.",53,null],[11,"set_transactions_root","","Set the transactions root field of the header.",53,null],[11,"set_receipts_root","","Set the receipts root field of the header.",53,null],[11,"set_log_bloom","","Set the log bloom field of the header.",53,null],[11,"set_timestamp","","Set the timestamp field of the header.",53,null],[11,"set_timestamp_now","","Set the timestamp field of the header to the current time.",53,null],[11,"set_number","","Set the number field of the header.",53,null],[11,"set_author","","Set the author field of the header.",53,null],[11,"set_extra_data","","Set the extra data field of the header.",53,null],[11,"set_gas_used","","Set the gas used field of the header.",53,null],[11,"set_gas_limit","","Set the gas limit field of the header.",53,null],[11,"set_difficulty","","Set the difficulty field of the header.",53,null],[11,"set_seal","","Set the seal field of the header.",53,null],[11,"hash","","Get the hash of this header (sha3 of the RLP).",53,null],[11,"bare_hash","","Get the hash of the header excluding the seal",53,null],[11,"note_dirty","","Note that some fields have changed. Resets the memoised hash.",53,null],[11,"stream_rlp","","Place this header into an RLP stream `s`, optionally `with_seal`.",53,null],[11,"rlp","","Get the RLP of this header, optionally `with_seal`.",53,null],[11,"rlp_sha3","","Get the SHA3 (Keccak) of this header, optionally `with_seal`.",53,null],[11,"decode","","",53,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"rlp_append","","",53,null],[11,"heap_size_of_children","","",53,null],[0,"service","ethcore","Creates and registers client and network services.",null,null],[3,"ClientService","ethcore::service","Client service setup. Creates and registers client and network services with the IO subsystem.",null,null],[4,"ClientIoMessage","","Message type for external and internal events",null,null],[13,"NewChainHead","","Best Block Hash in chain has been changed",54,null],[13,"BlockVerified","","A block is ready",54,null],[13,"NewTransactions","","New transaction RLPs are ready to be imported",54,null],[13,"BeginRestoration","","Begin snapshot restoration",54,null],[13,"FeedStateChunk","","Feed a state chunk to the snapshot service",54,null],[13,"FeedBlockChunk","","Feed a block chunk to the snapshot service",54,null],[13,"TakeSnapshot","","Take a snapshot for the block with given number.",54,null],[13,"UpdateSealing","","Trigger sealing update (useful for internal sealing).",54,null],[11,"clone","","",54,null],[11,"start","","Start the `ClientService`.",55,{"inputs":[{"name":"clientconfig"},{"name":"spec"},{"name":"path"},{"name":"path"},{"name":"path"},{"name":"arc"}],"output":{"name":"result"}}],[11,"add_node","","Add a node to network",55,null],[11,"register_io_handler","","Get general IO interface",55,null],[11,"client","","Get client interface",55,null],[11,"snapshot_service","","Get snapshot interface.",55,null],[11,"io","","Get network service component",55,null],[11,"add_notify","","Set the actor to be notified on certain chain events",55,null],[11,"on_panic","","",55,null],[0,"trace","ethcore","Tracing",null,null],[3,"Config","ethcore::trace","Traces config.",null,null],[12,"enabled","","Indicates if tracing should be enabled or not.\nIf it&#39;s None, it will be automatically configured.",56,null],[12,"blooms","","Traces blooms configuration.",56,null],[12,"pref_cache_size","","Preferef cache-size.",56,null],[12,"max_cache_size","","Max cache-size.",56,null],[3,"TraceDB","","Trace database.",null,null],[3,"VMTrace","","A record of a full VM trace for a CALL/CREATE.",null,null],[12,"parent_step","","The step (i.e. index into operations) at which this trace corresponds.",57,null],[12,"code","","The code to be executed.",57,null],[12,"operations","","The operations executed.",57,null],[12,"subs","","The sub traces for each interior action performed as part of this call/create.\nThre is a 1:1 correspondance between these and a CALL/CREATE/CALLCODE/DELEGATECALL instruction.",57,null],[3,"VMOperation","","A record of the execution of a single VM operation.",null,null],[12,"pc","","The program counter.",58,null],[12,"instruction","","The instruction executed.",58,null],[12,"gas_cost","","The gas cost for this instruction.",58,null],[12,"executed","","Information concerning the execution of the operation.",58,null],[3,"VMExecutedOperation","","A record of an executed VM operation.",null,null],[12,"gas_used","","The total gas used.",59,null],[12,"stack_push","","The stack item placed, if any.",59,null],[12,"mem_diff","","If altered, the memory delta.",59,null],[12,"store_diff","","The altered storage value, if any.",59,null],[3,"MemoryDiff","","A diff of some chunk of memory.",null,null],[12,"offset","","Offset into memory the change begins.",60,null],[12,"data","","The changed data.",60,null],[3,"StorageDiff","","A diff of some storage value.",null,null],[12,"location","","Which key in storage is changed.",61,null],[12,"value","","What the value has been changed to.",61,null],[3,"FlatTrace","","Trace localized in vector of traces produced by a single transaction.",null,null],[12,"action","","Type of action performed by a transaction.",62,null],[12,"result","","Result of this action.",62,null],[12,"subtraces","","Number of subtraces.",62,null],[12,"trace_address","","Exact location of trace.",62,null],[3,"FlatTransactionTraces","","Represents all traces produced by a single transaction.",null,null],[3,"FlatBlockTraces","","Represents all traces produced by transactions in a single block.",null,null],[3,"NoopTracer","","Nonoperative tracer. Does not trace anything.",null,null],[3,"NoopVMTracer","","Nonoperative VM tracer. Does not trace anything.",null,null],[3,"ExecutiveTracer","","Simple executive tracer. Traces all calls and creates. Ignores delegatecalls.",null,null],[3,"ExecutiveVMTracer","","Simple VM tracer. Traces all operations.",null,null],[3,"Filter","","Traces filter.",null,null],[12,"range","","Block range.",63,null],[12,"from_address","","From address filter.",63,null],[12,"to_address","","To address filter.",63,null],[3,"AddressesFilter","","Addresses filter.",null,null],[3,"ImportRequest","","Traces import request.",null,null],[12,"traces","","Traces to import.",64,null],[12,"block_hash","","Hash of traces block.",64,null],[12,"block_number","","Number of traces block.",64,null],[12,"enacted","","Blocks enacted by this import.",64,null],[12,"retracted","","Number of blocks retracted by this import.",64,null],[3,"LocalizedTrace","","Localized trace.",null,null],[12,"action","","Type of action performed by a transaction.",65,null],[12,"result","","Result of this action.",65,null],[12,"subtraces","","Number of subtraces.",65,null],[12,"trace_address","","Exact location of trace.",65,null],[12,"transaction_number","","Transaction number within the block.",65,null],[12,"transaction_hash","","Signed transaction hash.",65,null],[12,"block_number","","Block number.",65,null],[12,"block_hash","","Block hash.",65,null],[4,"TraceError","","Trace evm errors.",null,null],[13,"OutOfGas","","`OutOfGas` is returned when transaction execution runs out of gas.",66,null],[13,"BadJumpDestination","","`BadJumpDestination` is returned when execution tried to move\nto position that wasn&#39;t marked with JUMPDEST instruction",66,null],[13,"BadInstruction","","`BadInstructions` is returned when given instruction is not supported",66,null],[13,"StackUnderflow","","`StackUnderflow` when there is not enough stack elements to execute instruction",66,null],[13,"OutOfStack","","When execution would exceed defined Stack Limit",66,null],[13,"Internal","","Returned on evm internal error. Should never be ignored during development.\nLikely to cause consensus issues.",66,null],[4,"Error","","`TraceDB` errors.",null,null],[13,"ResyncRequired","","Returned when tracing is enabled,\nbut database does not contain traces of old transactions.",67,null],[11,"fmt","","",56,null],[11,"eq","","",56,null],[11,"ne","","",56,null],[11,"clone","","",56,null],[11,"default","","",56,{"inputs":[],"output":{"name":"self"}}],[11,"blooms_at","","",68,null],[11,"new","","Creates new instance of `TraceDB`.",68,{"inputs":[{"name":"config"},{"name":"arc"},{"name":"arc"}],"output":{"name":"self"}}],[11,"collect_garbage","","Ticks our cache system and throws out any old data.",68,null],[11,"tracing_enabled","","",68,null],[11,"import","","Traces of import request&#39;s enacted blocks are expected to be already in database\nor to be the currently inserted trace.",68,null],[11,"trace","","",68,null],[11,"transaction_traces","","",68,null],[11,"block_traces","","",68,null],[11,"filter","","",68,null],[11,"fmt","","",67,null],[11,"fmt","","",67,null],[11,"default","","",69,{"inputs":[],"output":{"name":"executivetracer"}}],[11,"prepare_trace_call","","",69,null],[11,"prepare_trace_create","","",69,null],[11,"prepare_trace_output","","",69,null],[11,"trace_call","","",69,null],[11,"trace_create","","",69,null],[11,"trace_failed_call","","",69,null],[11,"trace_failed_create","","",69,null],[11,"trace_suicide","","",69,null],[11,"subtracer","","",69,null],[11,"traces","","",69,null],[11,"toplevel","","Create a new top-level instance.",70,{"inputs":[],"output":{"name":"self"}}],[11,"trace_prepare_execute","","",70,null],[11,"trace_executed","","",70,null],[11,"prepare_subtrace","","",70,null],[11,"done_subtrace","","",70,null],[11,"drain","","",70,null],[11,"prepare_trace_call","","",71,null],[11,"prepare_trace_create","","",71,null],[11,"prepare_trace_output","","",71,null],[11,"trace_call","","",71,null],[11,"trace_create","","",71,null],[11,"trace_failed_call","","",71,null],[11,"trace_failed_create","","",71,null],[11,"trace_suicide","","",71,null],[11,"subtracer","","",71,null],[11,"traces","","",71,null],[11,"trace_prepare_execute","","Trace the preparation to execute a single instruction.",72,null],[11,"trace_executed","","Trace the finalised execution of a single instruction.",72,null],[11,"prepare_subtrace","","Spawn subtracer which will be used to trace deeper levels of execution.",72,null],[11,"done_subtrace","","Spawn subtracer which will be used to trace deeper levels of execution.",72,null],[11,"drain","","Consumes self and returns all VM traces.",72,null],[0,"filter","","Trace filters type definitions",null,null],[3,"AddressesFilter","ethcore::trace::filter","Addresses filter.",null,null],[3,"Filter","","Traces filter.",null,null],[12,"range","","Block range.",63,null],[12,"from_address","","From address filter.",63,null],[12,"to_address","","To address filter.",63,null],[11,"fmt","ethcore::trace","",73,null],[11,"size","","",73,null],[11,"to_bytes","","",73,null],[11,"from_bytes","","",73,null],[11,"len_params","","",73,{"inputs":[],"output":{"name":"usize"}}],[11,"from","","",73,{"inputs":[{"name":"vec"}],"output":{"name":"self"}}],[11,"matches","","Returns true if address matches one of the searched addresses.",73,null],[11,"matches_all","","Returns true if this address filter matches everything.",73,null],[11,"blooms","","Returns blooms of this addresses filter.",73,null],[11,"with_blooms","","Returns vector of blooms zipped with blooms of this addresses filter.",73,null],[11,"fmt","","",63,null],[11,"size","","",63,null],[11,"to_bytes","","",63,null],[11,"from_bytes","","",63,null],[11,"len_params","","",63,{"inputs":[],"output":{"name":"usize"}}],[11,"bloom_possibilities","","",63,null],[11,"range","","",63,null],[11,"matches","","Returns true if given trace matches the filter.",63,null],[0,"flat","","Flat trace module",null,null],[3,"FlatTrace","ethcore::trace::flat","Trace localized in vector of traces produced by a single transaction.",null,null],[12,"action","","Type of action performed by a transaction.",62,null],[12,"result","","Result of this action.",62,null],[12,"subtraces","","Number of subtraces.",62,null],[12,"trace_address","","Exact location of trace.",62,null],[3,"FlatTransactionTraces","","Represents all traces produced by a single transaction.",null,null],[3,"FlatBlockTraces","","Represents all traces produced by transactions in a single block.",null,null],[11,"clone","ethcore::trace","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"fmt","","",62,null],[11,"size","","",62,null],[11,"to_bytes","","",62,null],[11,"from_bytes","","",62,null],[11,"len_params","","",62,{"inputs":[],"output":{"name":"usize"}}],[11,"bloom","","Returns bloom of the trace.",62,null],[11,"heap_size_of_children","","",62,null],[11,"rlp_append","","",62,null],[11,"decode","","",62,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"clone","","",74,null],[11,"eq","","",74,null],[11,"ne","","",74,null],[11,"fmt","","",74,null],[11,"from","","",74,{"inputs":[{"name":"vec"}],"output":{"name":"self"}}],[11,"heap_size_of_children","","",74,null],[11,"bloom","","Returns bloom of all traces in the collection.",74,null],[11,"rlp_append","","",74,null],[11,"decode","","",74,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"into","","",74,null],[11,"default","","",75,{"inputs":[],"output":{"name":"flatblocktraces"}}],[11,"clone","","",75,null],[11,"eq","","",75,null],[11,"ne","","",75,null],[11,"fmt","","",75,null],[11,"heap_size_of_children","","",75,null],[11,"from","","",75,{"inputs":[{"name":"vec"}],"output":{"name":"self"}}],[11,"bloom","","Returns bloom of all traces in the block.",75,null],[11,"rlp_append","","",75,null],[11,"decode","","",75,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"into","","",75,null],[0,"localized","","Localized traces type definitions",null,null],[3,"LocalizedTrace","ethcore::trace::localized","Localized trace.",null,null],[12,"action","","Type of action performed by a transaction.",65,null],[12,"result","","Result of this action.",65,null],[12,"subtraces","","Number of subtraces.",65,null],[12,"trace_address","","Exact location of trace.",65,null],[12,"transaction_number","","Transaction number within the block.",65,null],[12,"transaction_hash","","Signed transaction hash.",65,null],[12,"block_number","","Block number.",65,null],[12,"block_hash","","Block hash.",65,null],[11,"eq","ethcore::trace","",65,null],[11,"ne","","",65,null],[11,"fmt","","",65,null],[11,"size","","",65,null],[11,"to_bytes","","",65,null],[11,"from_bytes","","",65,null],[11,"len_params","","",65,{"inputs":[],"output":{"name":"usize"}}],[0,"trace","","Tracing datatypes.",null,null],[3,"CallResult","ethcore::trace::trace","`Call` result.",null,null],[12,"gas_used","","Gas used by call.",76,null],[12,"output","","Call Output.",76,null],[3,"CreateResult","","`Create` result.",null,null],[12,"gas_used","","Gas used by create.",77,null],[12,"code","","Code of the newly created contract.",77,null],[12,"address","","Address of the newly created contract.",77,null],[3,"Call","","Description of a _call_ action, either a `CALL` operation or a message transction.",null,null],[12,"from","","The sending account.",78,null],[12,"to","","The destination account.",78,null],[12,"value","","The value transferred to the destination account.",78,null],[12,"gas","","The gas available for executing the call.",78,null],[12,"input","","The input data provided to the call.",78,null],[12,"call_type","","The type of the call.",78,null],[3,"Create","","Description of a _create_ action, either a `CREATE` operation or a create transction.",null,null],[12,"from","","The address of the creator.",79,null],[12,"value","","The value with which the new account is endowed.",79,null],[12,"gas","","The gas available for the creation init code.",79,null],[12,"init","","The init code.",79,null],[3,"Suicide","","Suicide action.",null,null],[12,"address","","Suicided address.",80,null],[12,"refund_address","","Suicided contract heir.",80,null],[12,"balance","","Balance of the contract just before suicide.",80,null],[3,"MemoryDiff","","A diff of some chunk of memory.",null,null],[12,"offset","","Offset into memory the change begins.",60,null],[12,"data","","The changed data.",60,null],[3,"StorageDiff","","A diff of some storage value.",null,null],[12,"location","","Which key in storage is changed.",61,null],[12,"value","","What the value has been changed to.",61,null],[3,"VMExecutedOperation","","A record of an executed VM operation.",null,null],[12,"gas_used","","The total gas used.",59,null],[12,"stack_push","","The stack item placed, if any.",59,null],[12,"mem_diff","","If altered, the memory delta.",59,null],[12,"store_diff","","The altered storage value, if any.",59,null],[3,"VMOperation","","A record of the execution of a single VM operation.",null,null],[12,"pc","","The program counter.",58,null],[12,"instruction","","The instruction executed.",58,null],[12,"gas_cost","","The gas cost for this instruction.",58,null],[12,"executed","","Information concerning the execution of the operation.",58,null],[3,"VMTrace","","A record of a full VM trace for a CALL/CREATE.",null,null],[12,"parent_step","","The step (i.e. index into operations) at which this trace corresponds.",57,null],[12,"code","","The code to be executed.",57,null],[12,"operations","","The operations executed.",57,null],[12,"subs","","The sub traces for each interior action performed as part of this call/create.\nThre is a 1:1 correspondance between these and a CALL/CREATE/CALLCODE/DELEGATECALL instruction.",57,null],[4,"Action","","Description of an action that we trace; will be either a call or a create.",null,null],[13,"Call","","It&#39;s a call action.",81,null],[13,"Create","","It&#39;s a create action.",81,null],[13,"Suicide","","Suicide.",81,null],[4,"Res","","The result of the performed action.",null,null],[13,"Call","","Successful call action result.",82,null],[13,"Create","","Successful create action result.",82,null],[13,"FailedCall","","Failed call.",82,null],[13,"FailedCreate","","Failed create.",82,null],[13,"None","","None",82,null],[11,"default","","",76,{"inputs":[],"output":{"name":"callresult"}}],[11,"eq","","",76,null],[11,"ne","","",76,null],[11,"clone","","",76,null],[11,"fmt","","",76,null],[11,"size","","",76,null],[11,"to_bytes","","",76,null],[11,"from_bytes","","",76,null],[11,"len_params","","",76,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",76,null],[11,"decode","","",76,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"clone","","",77,null],[11,"fmt","","",77,null],[11,"size","","",77,null],[11,"to_bytes","","",77,null],[11,"from_bytes","","",77,null],[11,"len_params","","",77,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",77,null],[11,"decode","","",77,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"bloom","","Returns bloom.",77,null],[11,"eq","","",78,null],[11,"ne","","",78,null],[11,"clone","","",78,null],[11,"fmt","","",78,null],[11,"size","","",78,null],[11,"to_bytes","","",78,null],[11,"from_bytes","","",78,null],[11,"len_params","","",78,{"inputs":[],"output":{"name":"usize"}}],[11,"from","","",78,{"inputs":[{"name":"actionparams"}],"output":{"name":"self"}}],[11,"rlp_append","","",78,null],[11,"decode","","",78,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"bloom","","Returns call action bloom.\nThe bloom contains from and to addresses.",78,null],[11,"eq","","",79,null],[11,"ne","","",79,null],[11,"clone","","",79,null],[11,"fmt","","",79,null],[11,"size","","",79,null],[11,"to_bytes","","",79,null],[11,"from_bytes","","",79,null],[11,"len_params","","",79,{"inputs":[],"output":{"name":"usize"}}],[11,"from","","",79,{"inputs":[{"name":"actionparams"}],"output":{"name":"self"}}],[11,"rlp_append","","",79,null],[11,"decode","","",79,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"bloom","","Returns bloom create action bloom.\nThe bloom contains only from address.",79,null],[11,"eq","","",80,null],[11,"ne","","",80,null],[11,"clone","","",80,null],[11,"fmt","","",80,null],[11,"size","","",80,null],[11,"to_bytes","","",80,null],[11,"from_bytes","","",80,null],[11,"len_params","","",80,{"inputs":[],"output":{"name":"usize"}}],[11,"bloom","","Return suicide action bloom.",80,null],[11,"rlp_append","","",80,null],[11,"decode","","",80,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"eq","","",81,null],[11,"ne","","",81,null],[11,"clone","","",81,null],[11,"fmt","","",81,null],[11,"size","","",81,null],[11,"to_bytes","","",81,null],[11,"from_bytes","","",81,null],[11,"len_params","","",81,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",81,null],[11,"decode","","",81,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"bloom","","Returns action bloom.",81,null],[11,"eq","","",82,null],[11,"ne","","",82,null],[11,"clone","","",82,null],[11,"fmt","","",82,null],[11,"size","","",82,null],[11,"to_bytes","","",82,null],[11,"from_bytes","","",82,null],[11,"len_params","","",82,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",82,null],[11,"decode","","",82,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"bloom","","Returns result bloom.",82,null],[11,"eq","ethcore::trace","",60,null],[11,"ne","","",60,null],[11,"clone","","",60,null],[11,"fmt","","",60,null],[11,"size","","",60,null],[11,"to_bytes","","",60,null],[11,"from_bytes","","",60,null],[11,"len_params","","",60,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",60,null],[11,"decode","","",60,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"eq","","",61,null],[11,"ne","","",61,null],[11,"clone","","",61,null],[11,"fmt","","",61,null],[11,"size","","",61,null],[11,"to_bytes","","",61,null],[11,"from_bytes","","",61,null],[11,"len_params","","",61,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",61,null],[11,"decode","","",61,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"eq","","",59,null],[11,"ne","","",59,null],[11,"clone","","",59,null],[11,"fmt","","",59,null],[11,"size","","",59,null],[11,"to_bytes","","",59,null],[11,"from_bytes","","",59,null],[11,"len_params","","",59,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",59,null],[11,"decode","","",59,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"default","","",58,{"inputs":[],"output":{"name":"vmoperation"}}],[11,"eq","","",58,null],[11,"ne","","",58,null],[11,"clone","","",58,null],[11,"fmt","","",58,null],[11,"size","","",58,null],[11,"to_bytes","","",58,null],[11,"from_bytes","","",58,null],[11,"len_params","","",58,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",58,null],[11,"decode","","",58,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"default","","",57,{"inputs":[],"output":{"name":"vmtrace"}}],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"clone","","",57,null],[11,"fmt","","",57,null],[11,"size","","",57,null],[11,"to_bytes","","",57,null],[11,"from_bytes","","",57,null],[11,"len_params","","",57,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",57,null],[11,"decode","","",57,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[8,"Tracer","","This trait is used by executive to build traces.",null,null],[10,"prepare_trace_call","","Prepares call trace for given params. Noop tracer should return None.",83,null],[10,"prepare_trace_create","","Prepares create trace for given params. Noop tracer should return None.",83,null],[10,"prepare_trace_output","","Prepare trace output. Noop tracer should return None.",83,null],[10,"trace_call","","Stores trace call info.",83,null],[10,"trace_create","","Stores trace create info.",83,null],[10,"trace_failed_call","","Stores failed call trace.",83,null],[10,"trace_failed_create","","Stores failed create trace.",83,null],[10,"trace_suicide","","Stores suicide info.",83,null],[10,"subtracer","","Spawn subtracer which will be used to trace deeper levels of execution.",83,null],[10,"traces","","Consumes self and returns all traces.",83,null],[8,"VMTracer","","Used by executive to build VM traces.",null,null],[11,"trace_prepare_execute","","Trace the preparation to execute a single instruction.\n@returns true if `trace_executed` should be called.",84,null],[11,"trace_executed","","Trace the finalised execution of a single instruction.",84,null],[10,"prepare_subtrace","","Spawn subtracer which will be used to trace deeper levels of execution.",84,null],[10,"done_subtrace","","Spawn subtracer which will be used to trace deeper levels of execution.",84,null],[10,"drain","","Consumes self and returns the VM trace.",84,null],[8,"DatabaseExtras","","`DbExtras` provides an interface to query extra data which is not stored in tracesdb,\nbut necessary to work correctly.",null,null],[10,"block_hash","","Returns hash of given block number.",85,null],[10,"transaction_hash","","Returns hash of transaction at given position.",85,null],[8,"Database","","Db provides an interface to query tracesdb.",null,null],[10,"tracing_enabled","","Returns true if tracing is enabled. Otherwise false.",86,null],[10,"import","","Imports new block traces.",86,null],[10,"trace","","Returns localized trace at given position.",86,null],[10,"transaction_traces","","Returns localized traces created by a single transaction.",86,null],[10,"block_traces","","Returns localized traces created in given block.",86,null],[10,"filter","","Filter traces matching given filter.",86,null],[0,"spec","ethcore","Blockchain params.",null,null],[3,"Genesis","ethcore::spec","Genesis components.",null,null],[12,"seal","","Seal.",87,null],[12,"difficulty","","Difficulty.",87,null],[12,"author","","Author.",87,null],[12,"timestamp","","Timestamp.",87,null],[12,"parent_hash","","Parent hash.",87,null],[12,"gas_limit","","Gas limit.",87,null],[12,"transactions_root","","Transactions root.",87,null],[12,"receipts_root","","Receipts root.",87,null],[12,"state_root","","State root.",87,null],[12,"gas_used","","Gas used.",87,null],[12,"extra_data","","Extra data.",87,null],[11,"from","","",87,{"inputs":[{"name":"genesis"}],"output":{"name":"self"}}],[0,"spec","","Parameters for a block chain.",null,null],[3,"CommonParams","ethcore::spec::spec","Parameters common to all engines.",null,null],[12,"account_start_nonce","","Account start nonce.",88,null],[12,"maximum_extra_data_size","","Maximum size of extra data.",88,null],[12,"network_id","","Network id.",88,null],[12,"subprotocol_name","","Main subprotocol name.",88,null],[12,"min_gas_limit","","Minimum gas limit.",88,null],[12,"fork_block","","Fork block to check.",88,null],[3,"Spec","","Parameters for a block chain; includes both those intrinsic to the design of the\nchain and those to be interpreted by the active chain engine.",null,null],[12,"name","","User friendly spec name",89,null],[12,"engine","","What engine are we using for this?",89,null],[12,"fork_name","","The fork identifier for this chain. Only needed to distinguish two chains sharing the same genesis.",89,null],[12,"nodes","","Known nodes on the network in enode format.",89,null],[12,"params","","Parameters common to all engines.",89,null],[12,"parent_hash","","The genesis block&#39;s parent hash field.",89,null],[12,"author","","The genesis block&#39;s author field.",89,null],[12,"difficulty","","The genesis block&#39;s difficulty field.",89,null],[12,"gas_limit","","The genesis block&#39;s gas limit field.",89,null],[12,"gas_used","","The genesis block&#39;s gas used field.",89,null],[12,"timestamp","","The genesis block&#39;s timestamp field.",89,null],[12,"transactions_root","","Transactions root of the genesis block. Should be SHA3_NULL_RLP.",89,null],[12,"receipts_root","","Receipts root of the genesis block. Should be SHA3_NULL_RLP.",89,null],[12,"extra_data","","The genesis block&#39;s extra data field.",89,null],[12,"seal_fields","","The number of seal fields in the genesis block.",89,null],[12,"seal_rlp","","Each seal field, expressed as RLP, concatenated.",89,null],[11,"fmt","","",88,null],[11,"eq","","",88,null],[11,"ne","","",88,null],[11,"clone","","",88,null],[11,"from","","",88,{"inputs":[{"name":"params"}],"output":{"name":"self"}}],[11,"from","","",89,{"inputs":[{"name":"spec"}],"output":{"name":"self"}}],[11,"state_root","","Return the state root for the genesis state, memoising accordingly.",89,null],[11,"nodes","","Get the known knodes of the network in enode format.",89,null],[11,"network_id","","Get the configured Network ID.",89,null],[11,"subprotocol_name","","Get the configured subprotocol name.",89,null],[11,"fork_block","","Get the configured network fork block.",89,null],[11,"genesis_header","","Get the header of the genesis block.",89,null],[11,"genesis_block","","Compose the genesis block for this chain.",89,null],[11,"overwrite_genesis_params","","Overwrite the genesis components.",89,null],[11,"set_genesis_state","","Alter the value of the genesis state.",89,null],[11,"is_state_root_valid","","Returns `false` if the memoized state root is invalid. `true` otherwise.",89,null],[11,"ensure_db_good","","Ensure that the given state DB has the trie nodes in for the genesis state.",89,null],[11,"load","","Loads spec from json file.",89,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"new_test","","Create a new Spec which conforms to the Frontier-era Morden chain except that it&#39;s a NullEngine consensus.",89,{"inputs":[],"output":{"name":"spec"}}],[11,"new_null","","Create a new Spec which is a NullEngine consensus with a premine of address whose secret is sha3(&#39;&#39;).",89,{"inputs":[],"output":{"name":"spec"}}],[11,"new_instant","","Create a new Spec with InstantSeal consensus which does internal sealing (not requiring work).",89,{"inputs":[],"output":{"name":"spec"}}],[11,"new_test_round","","Create a new Spec with AuthorityRound consensus which does internal sealing (not requiring work).\nAccounts with secrets &quot;1&quot;.sha3() and &quot;2&quot;.sha3() are the authorities.",89,{"inputs":[],"output":{"name":"self"}}],[0,"views","ethcore","Block oriented views onto rlp.",null,null],[3,"BlockView","ethcore::views","View onto block rlp.",null,null],[3,"HeaderView","","View onto block header rlp.",null,null],[3,"BodyView","","View onto block rlp.",null,null],[3,"TransactionView","","View onto transaction rlp.",null,null],[11,"new","","Creates new view onto block from raw bytes.",90,null],[11,"new_from_rlp","","Creates new view onto block from rlp.",90,{"inputs":[{"name":"rlp"}],"output":{"name":"blockview"}}],[11,"hash","","Block header hash.",90,null],[11,"rlp","","Return reference to underlaying rlp.",90,null],[11,"header","","Create new Header object from header rlp.",90,null],[11,"header_rlp","","Return header rlp.",90,null],[11,"header_view","","Create new header view obto block head rlp.",90,null],[11,"transactions","","Return List of transactions in given block.",90,null],[11,"localized_transactions","","Return List of transactions with additional localization info.",90,null],[11,"transactions_count","","Return number of transactions in given block, without deserializing them.",90,null],[11,"transaction_views","","Return List of transactions in given block.",90,null],[11,"transaction_hashes","","Return transaction hashes.",90,null],[11,"transaction_at","","Returns transaction at given index without deserializing unnecessary data.",90,null],[11,"localized_transaction_at","","Returns localized transaction at given index.",90,null],[11,"uncles","","Return list of uncles of given block.",90,null],[11,"uncles_count","","Return number of uncles in given block, without deserializing them.",90,null],[11,"uncle_views","","Return List of transactions in given block.",90,null],[11,"uncle_hashes","","Return list of uncle hashes of given block.",90,null],[11,"uncle_at","","Return nth uncle.",90,null],[11,"uncle_rlp_at","","Return nth uncle rlp.",90,null],[11,"sha3","","",90,null],[11,"new","","Creates new view onto header from raw bytes.",91,null],[11,"new_from_rlp","","Creates new view onto header from rlp.",91,{"inputs":[{"name":"rlp"}],"output":{"name":"headerview"}}],[11,"hash","","Returns header hash.",91,null],[11,"rlp","","Returns raw rlp.",91,null],[11,"parent_hash","","Returns parent hash.",91,null],[11,"uncles_hash","","Returns uncles hash.",91,null],[11,"author","","Returns author.",91,null],[11,"state_root","","Returns state root.",91,null],[11,"transactions_root","","Returns transactions root.",91,null],[11,"receipts_root","","Returns block receipts root.",91,null],[11,"log_bloom","","Returns block log bloom.",91,null],[11,"difficulty","","Returns block difficulty.",91,null],[11,"number","","Returns block number.",91,null],[11,"gas_limit","","Returns block gas limit.",91,null],[11,"gas_used","","Returns block gas used.",91,null],[11,"timestamp","","Returns timestamp.",91,null],[11,"extra_data","","Returns block extra data.",91,null],[11,"seal","","Returns a vector of post-RLP-encoded seal fields.",91,null],[11,"sha3","","",91,null],[11,"new","","Creates new view onto block from raw bytes.",92,null],[11,"new_from_rlp","","Creates new view onto block from rlp.",92,{"inputs":[{"name":"rlp"}],"output":{"name":"transactionview"}}],[11,"rlp","","Return reference to underlaying rlp.",92,null],[11,"nonce","","Get the nonce field of the transaction.",92,null],[11,"gas_price","","Get the gas_price field of the transaction.",92,null],[11,"gas","","Get the gas field of the transaction.",92,null],[11,"value","","Get the value field of the transaction.",92,null],[11,"data","","Get the data field of the transaction.",92,null],[11,"v","","Get the v field of the transaction.",92,null],[11,"r","","Get the r field of the transaction.",92,null],[11,"s","","Get the s field of the transaction.",92,null],[11,"sha3","","",92,null],[11,"new","","Creates new view onto block from raw bytes.",93,null],[11,"new_from_rlp","","Creates new view onto block from rlp.",93,{"inputs":[{"name":"rlp"}],"output":{"name":"bodyview"}}],[11,"rlp","","Return reference to underlaying rlp.",93,null],[11,"transactions","","Return List of transactions in given block.",93,null],[11,"localized_transactions","","Return List of transactions with additional localization info.",93,null],[11,"transactions_count","","Return number of transactions in given block, without deserializing them.",93,null],[11,"transaction_views","","Return List of transactions in given block.",93,null],[11,"transaction_hashes","","Return transaction hashes.",93,null],[11,"transaction_at","","Returns transaction at given index without deserializing unnecessary data.",93,null],[11,"localized_transaction_at","","Returns localized transaction at given index.",93,null],[11,"uncles","","Return list of uncles of given block.",93,null],[11,"uncles_count","","Return number of uncles in given block, without deserializing them.",93,null],[11,"uncle_views","","Return List of transactions in given block.",93,null],[11,"uncle_hashes","","Return list of uncle hashes of given block.",93,null],[11,"uncle_at","","Return nth uncle.",93,null],[11,"uncle_rlp_at","","Return nth uncle rlp.",93,null],[0,"pod_state","ethcore","State of all accounts in the system expressed in Plain Old Data.",null,null],[3,"PodState","ethcore::pod_state","State of all accounts in the system expressed in Plain Old Data.",null,null],[5,"diff_pod","","Calculate and return diff between `pre` state and `post` state.",null,{"inputs":[{"name":"podstate"},{"name":"podstate"}],"output":{"name":"statediff"}}],[11,"fmt","","",94,null],[11,"clone","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"default","","",94,{"inputs":[],"output":{"name":"podstate"}}],[11,"new","","Contruct a new object from the `m`.",94,{"inputs":[],"output":{"name":"podstate"}}],[11,"from","","Contruct a new object from the `m`.",94,{"inputs":[{"name":"btreemap"}],"output":{"name":"podstate"}}],[11,"get","","Get the underlying map.",94,null],[11,"root","","Get the root hash of the trie of the RLP of this.",94,null],[11,"drain","","Drain object to get the underlying map.",94,null],[11,"from","","",94,{"inputs":[{"name":"state"}],"output":{"name":"podstate"}}],[11,"from","","",94,{"inputs":[{"name":"state"}],"output":{"name":"podstate"}}],[11,"fmt","","",94,null],[0,"migrations","ethcore","Database migrations.",null,null],[3,"ToV9","ethcore::migrations","Consolidation of extras/block/state databases into single one.",null,null],[3,"ToV10","","Account bloom migration.",null,null],[4,"Extract","","Which part of block to preserve",null,null],[13,"Header","","Extract block header RLP.",95,null],[13,"Body","","Extract block body RLP.",95,null],[13,"All","","Don&#39;t change the value.",95,null],[0,"state","","State database migrations.",null,null],[3,"ArchiveV7","ethcore::migrations::state","Version for `ArchiveDB`.",null,null],[3,"OverlayRecentV7","","Version for `OverlayRecent` database.\nmore involved than the archive version because of journaling.",null,null],[11,"default","","",96,{"inputs":[],"output":{"name":"archivev7"}}],[11,"columns","","",96,null],[11,"version","","",96,null],[11,"simple_migrate","","",96,null],[11,"default","","",97,{"inputs":[],"output":{"name":"overlayrecentv7"}}],[11,"columns","","",97,null],[11,"version","","",97,null],[11,"migrate","","",97,null],[0,"blocks","ethcore::migrations","Blocks database migrations.",null,null],[3,"V8","ethcore::migrations::blocks","Compressing migration.",null,null],[11,"default","","",98,{"inputs":[],"output":{"name":"v8"}}],[11,"version","","",98,null],[11,"columns","","",98,null],[11,"simple_migrate","","",98,null],[0,"extras","ethcore::migrations","Extras database migrations.",null,null],[3,"ToV6","ethcore::migrations::extras","This migration reduces the sizes of keys and moves `ExtrasIndex` byte from back to the front.",null,null],[11,"columns","","",99,null],[11,"version","","",99,null],[11,"simple_migrate","","",99,null],[11,"new","ethcore::migrations","Creates new V9 migration and assigns all `(key,value)` pairs from `source` DB to given Column Family",100,{"inputs":[{"name":"option"},{"name":"extract"}],"output":{"name":"self"}}],[11,"columns","","",100,null],[11,"version","","",100,null],[11,"migrate","","",100,null],[11,"default","","",101,{"inputs":[],"output":{"name":"tov10"}}],[11,"new","","New v10 migration",101,{"inputs":[],"output":{"name":"tov10"}}],[11,"version","","",101,null],[11,"pre_columns","","",101,null],[11,"columns","","",101,null],[11,"migrate","","",101,null],[0,"miner","ethcore","Miner module\nKeeps track of transactions and mined block.",null,null],[3,"ExternalMiner","ethcore::miner","External Miner.",null,null],[3,"Miner","","Keeps track of transactions using priority queue and holds currently mined block.\nHandles preparing work for &quot;work sealing&quot; or seals &quot;internally&quot; if Engine does not require work.",null,null],[12,"seals_internally","","Does the node perform internal (without work) sealing.",102,null],[3,"MinerOptions","","Configures the behaviour of the miner.",null,null],[12,"new_work_notify","","URLs to notify when there is new work.",103,null],[12,"force_sealing","","Force the miner to reseal, even when nobody has asked for work.",103,null],[12,"reseal_on_external_tx","","Reseal on receipt of new external transactions.",103,null],[12,"reseal_on_own_tx","","Reseal on receipt of new local transactions.",103,null],[12,"reseal_min_period","","Minimum period between transaction-inspired reseals.",103,null],[12,"tx_gas_limit","","Maximum amount of gas to bother considering for block insertion.",103,null],[12,"tx_queue_size","","Maximum size of the transaction queue.",103,null],[12,"tx_queue_strategy","","Strategy to use for prioritizing transactions in the queue.",103,null],[12,"pending_set","","Whether we should fallback to providing all the queue&#39;s transactions or just pending.",103,null],[12,"work_queue_size","","How many historical work packages can we store before running out?",103,null],[12,"enable_resubmission","","Can we submit two different solutions for the same block and expect both to result in an import?",103,null],[12,"tx_queue_gas_limit","","Global gas limit for all transaction in the queue except for local and retracted.",103,null],[12,"tx_queue_banning","","Banning settings",103,null],[3,"GasPriceCalibratorOptions","","Options for the dynamic gas price recalibrator.",null,null],[12,"usd_per_tx","","Base transaction price to match against.",104,null],[12,"recalibration_period","","How frequently we should recalibrate.",104,null],[3,"TransactionQueue","","`TransactionQueue` implementation",null,null],[3,"AccountDetails","","Details of account",null,null],[12,"nonce","","Most recent account nonce",105,null],[12,"balance","","Current account balance",105,null],[3,"MinerStatus","","Mining status",null,null],[12,"transactions_in_pending_queue","","Number of transactions in queue with state `pending` (ready to be included in block)",106,null],[12,"transactions_in_future_queue","","Number of transactions in queue with state `future` (not yet ready to be included in block)",106,null],[12,"transactions_in_pending_block","","Number of transactions included in currently mined block",106,null],[4,"Banning","","Transaction queue banning settings.",null,null],[13,"Disabled","","Banning in transaction queue is disabled",107,null],[13,"Enabled","","Banning in transaction queue is enabled",107,null],[12,"offend_threshold","ethcore::miner::Banning","Upper limit of transaction processing time before banning.",107,null],[12,"min_offends","","Number of similar offending transactions before banning.",107,null],[12,"ban_duration","","Number of seconds the offender is banned for.",107,null],[4,"PendingSet","ethcore::miner","Different possible definitions for pending transaction set.",null,null],[13,"AlwaysQueue","","Always just the transactions in the queue. These have had only cheap checks.",108,null],[13,"AlwaysSealing","","Always just the transactions in the sealing block. These have had full checks but\nmay be empty if the node is not actively mining or has force_sealing enabled.",108,null],[13,"SealingOrElseQueue","","Try the sealing block, but if it is not currently sealing, fallback to the queue.",108,null],[4,"GasPricer","","Struct to look after updating the acceptable gas price of a miner.",null,null],[13,"Fixed","","A fixed gas price in terms of Wei - always the argument given.",109,null],[13,"Calibrated","","Gas price is calibrated according to a fixed amount of USD.",109,null],[4,"GasLimit","","Type of the gas limit to apply to the transaction queue.",null,null],[13,"Auto","","Depends on the block gas limit and is updated with every block.",110,null],[13,"None","","No limit.",110,null],[13,"Fixed","","Set to a fixed gas value.",110,null],[4,"PrioritizationStrategy","","Describes the strategy used to prioritize transactions in the queue.",null,null],[13,"GasPriceOnly","","Use only gas price. Disregards the actual computation cost of the transaction.\ni.e. Higher gas price = Higher priority",111,null],[13,"GasAndGasPrice","","Use gas limit and then gas price.\ni.e. Higher gas limit = Lower priority",111,null],[13,"GasFactorAndGasPrice","","Calculate and use priority based on gas and gas price.\nPRIORITY = GAS_PRICE - GAS/2^15 * MIN_GAS_PRICE",111,null],[4,"TransactionOrigin","","Transaction origin",null,null],[13,"Local","","Transaction coming from local RPC",112,null],[13,"External","","External transaction received from network",112,null],[13,"RetractedBlock","","Transactions from retracted blocks",112,null],[4,"LocalTransactionStatus","","Status of local transaction.\nCan indicate that the transaction is currently part of the queue (`Pending/Future`)\nor gives a reason why the transaction was removed.",null,null],[13,"Pending","","The transaction is currently in the transaction queue.",113,null],[13,"Future","","The transaction is in future part of the queue.",113,null],[13,"Mined","","Transaction is already mined.",113,null],[13,"Dropped","","Transaction is dropped because of limit",113,null],[13,"Replaced","","Replaced because of higher gas price of another transaction.",113,null],[13,"Rejected","","Transaction was never accepted to the queue.",113,null],[13,"Invalid","","Transaction is invalid.",113,null],[4,"TransactionImportResult","","Represents the result of importing transaction.",null,null],[13,"Current","","Transaction was imported to current queue.",39,null],[13,"Future","","Transaction was imported to future queue.",39,null],[11,"default","","",114,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Creates new external miner with prefilled hashrates.",114,{"inputs":[{"name":"arc"}],"output":{"name":"self"}}],[11,"submit_hashrate","","",114,null],[11,"hashrate","","",114,null],[11,"fmt","","",113,null],[11,"eq","","",113,null],[11,"ne","","",113,null],[11,"clone","","",113,null],[11,"fmt","","",108,null],[11,"eq","","",108,null],[11,"fmt","","",110,null],[11,"eq","","",110,null],[11,"ne","","",110,null],[11,"fmt","","",107,null],[11,"eq","","",107,null],[11,"ne","","",107,null],[11,"clone","","",107,null],[11,"fmt","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"default","","",103,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"fmt","","",109,null],[11,"eq","","",109,null],[11,"ne","","",109,null],[11,"new_calibrated","","Create a new Calibrated `GasPricer`.",109,{"inputs":[{"name":"gaspricecalibratoroptions"}],"output":{"name":"gaspricer"}}],[11,"new_fixed","","Create a new Fixed `GasPricer`.",109,{"inputs":[{"name":"u256"}],"output":{"name":"gaspricer"}}],[11,"with_spec_and_accounts","","Creates new instance of miner with accounts and with given spec.",102,{"inputs":[{"name":"spec"},{"name":"option"}],"output":{"name":"miner"}}],[11,"with_spec","","Creates new instance of miner without accounts, but with given spec.",102,{"inputs":[{"name":"spec"}],"output":{"name":"miner"}}],[11,"new","","Creates new instance of a miner Arc.",102,{"inputs":[{"name":"mineroptions"},{"name":"gaspricer"},{"name":"spec"},{"name":"option"}],"output":{"name":"arc"}}],[11,"clear","","Clear all pending block states",102,null],[11,"pending_state","","Get `Some` `clone()` of the current pending block&#39;s state or `None` if we&#39;re not sealing.",102,null],[11,"pending_block","","Get `Some` `clone()` of the current pending block&#39;s state or `None` if we&#39;re not sealing.",102,null],[11,"clear_and_reset","","",102,null],[11,"status","","",102,null],[11,"call","","",102,null],[11,"balance","","",102,null],[11,"storage_at","","",102,null],[11,"nonce","","",102,null],[11,"code","","",102,null],[11,"set_author","","",102,null],[11,"set_extra_data","","",102,null],[11,"set_gas_floor_target","","Set the gas limit we wish to target when sealing a new block.",102,null],[11,"set_gas_ceil_target","","",102,null],[11,"set_minimal_gas_price","","",102,null],[11,"minimal_gas_price","","",102,null],[11,"sensible_gas_price","","",102,null],[11,"sensible_gas_limit","","",102,null],[11,"transactions_limit","","",102,null],[11,"set_transactions_limit","","",102,null],[11,"set_tx_gas_limit","","",102,null],[11,"author","","Get the author that we will seal blocks as.",102,null],[11,"extra_data","","Get the extra_data that we will seal blocks with.",102,null],[11,"gas_floor_target","","Get the gas limit we wish to target when sealing a new block.",102,null],[11,"gas_ceil_target","","Get the gas limit we wish to target when sealing a new block.",102,null],[11,"import_external_transactions","","",102,null],[11,"import_own_transaction","","",102,null],[11,"all_transactions","","",102,null],[11,"local_transactions","","",102,null],[11,"pending_transactions","","",102,null],[11,"pending_transactions_hashes","","",102,null],[11,"transaction","","",102,null],[11,"pending_receipt","","",102,null],[11,"pending_receipts","","",102,null],[11,"last_nonce","","",102,null],[11,"update_sealing","","Update sealing if required.\nPrepare the block and work if the Engine does not seal internally.",102,null],[11,"is_sealing","","",102,null],[11,"map_sealing_work","","",102,null],[11,"submit_seal","","",102,null],[11,"chain_new_blocks","","",102,null],[11,"clone","","",112,null],[11,"fmt","","",112,null],[11,"eq","","",112,null],[11,"partial_cmp","","",112,null],[11,"cmp","","",112,null],[11,"fmt","","",111,null],[11,"clone","","",111,null],[11,"eq","","",111,null],[11,"default","","",115,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Creates new instance of this Queue",115,{"inputs":[{"name":"prioritizationstrategy"}],"output":{"name":"self"}}],[11,"with_limits","","Create new instance of this Queue with specified limits",115,{"inputs":[{"name":"prioritizationstrategy"},{"name":"usize"},{"name":"u256"},{"name":"u256"}],"output":{"name":"self"}}],[11,"set_limit","","Set the new limit for `current` and `future` queue.",115,null],[11,"limit","","Returns current limit of transactions in the queue.",115,null],[11,"minimal_gas_price","","Get the minimal gas price.",115,null],[11,"set_minimal_gas_price","","Sets new gas price threshold for incoming transactions.\nAny transaction already imported to the queue is not affected.",115,null],[11,"effective_minimum_gas_price","","Get one more than the lowest gas price in the queue iff the pool is\nfull, otherwise 0.",115,null],[11,"set_gas_limit","","Sets new gas limit. Transactions with gas slightly (`GAS_LIMIT_HYSTERESIS`) above the limit won&#39;t be imported.\nAny transaction already imported to the queue is not affected.",115,null],[11,"set_total_gas_limit","","Sets new total gas limit.",115,null],[11,"set_tx_gas_limit","","Set the new limit for the amount of gas any individual transaction may have.\nAny transaction already imported to the queue is not affected.",115,null],[11,"status","","Returns current status for this queue",115,null],[11,"add","","Add signed transaction to queue to be verified and imported.",115,null],[11,"remove_all","","Removes all transactions from particular sender up to (excluding) given client (state) nonce.\nClient (State) Nonce = next valid nonce for this sender.",115,null],[11,"penalize","","Penalize transactions from sender of transaction with given hash.\nI.e. it should change the priority of the transaction in the queue.",115,null],[11,"remove_invalid","","Removes invalid transaction identified by hash from queue.\nAssumption is that this transaction nonce is not related to client nonce,\nso transactions left in queue are processed according to client nonce.",115,null],[11,"top_transactions","","Returns top transactions from the queue ordered by priority.",115,null],[11,"local_transactions","","Returns local transactions (some of them might not be part of the queue anymore).",115,null],[11,"pending_hashes","","Returns hashes of all transactions from current, ordered by priority.",115,null],[11,"has_local_pending_transactions","","Returns true if there is at least one local transaction pending",115,null],[11,"find","","Finds transaction in the queue by hash (if any)",115,null],[11,"clear","","Removes all elements (in any state) from the queue",115,null],[11,"last_nonce","","Returns highest transaction nonce for given address.",115,null],[8,"ExternalMinerService","","External miner interface.",null,null],[10,"submit_hashrate","","Submit hashrate for given miner.",116,null],[10,"hashrate","","Total hashrate.",116,null],[8,"MinerService","","Miner client API",null,null],[10,"status","","Returns miner&#39;s status.",117,null],[10,"author","","Get the author that we will seal blocks as.",117,null],[10,"set_author","","Set the author that we will seal blocks as.",117,null],[10,"extra_data","","Get the extra_data that we will seal blocks with.",117,null],[10,"set_extra_data","","Set the extra_data that we will seal blocks with.",117,null],[10,"minimal_gas_price","","Get current minimal gas price for transactions accepted to queue.",117,null],[10,"set_minimal_gas_price","","Set minimal gas price of transaction to be accepted for mining.",117,null],[10,"gas_floor_target","","Get the lower bound of the gas limit we wish to target when sealing a new block.",117,null],[10,"gas_ceil_target","","Get the upper bound of the gas limit we wish to target when sealing a new block.",117,null],[10,"set_gas_floor_target","","Set the lower bound of gas limit we wish to target when sealing a new block.",117,null],[10,"set_gas_ceil_target","","Set the upper bound of gas limit we wish to target when sealing a new block.",117,null],[10,"transactions_limit","","Get current transactions limit in queue.",117,null],[10,"set_transactions_limit","","Set maximal number of transactions kept in the queue (both current and future).",117,null],[10,"set_tx_gas_limit","","Set maximum amount of gas allowed for any single transaction to mine.",117,null],[10,"import_external_transactions","","Imports transactions to transaction queue.",117,null],[10,"import_own_transaction","","Imports own (node owner) transaction to queue.",117,null],[10,"pending_transactions_hashes","","Returns hashes of transactions currently in pending",117,null],[10,"clear_and_reset","","Removes all transactions from the queue and restart mining operation.",117,null],[10,"chain_new_blocks","","Called when blocks are imported to chain, updates transactions queue.",117,null],[10,"update_sealing","","New chain head event. Restart mining operation.",117,null],[10,"submit_seal","","Submit `seal` as a valid solution for the header of `pow_hash`.\nWill check the seal, but not actually insert the block into the chain.",117,null],[10,"map_sealing_work","","Get the sealing work package and if `Some`, apply some transform.",117,null],[10,"transaction","","Query pending transactions for hash.",117,null],[10,"all_transactions","","Get a list of all transactions.",117,null],[10,"pending_transactions","","Get a list of all pending transactions.",117,null],[10,"local_transactions","","Get a list of local transactions with statuses.",117,null],[10,"pending_receipts","","Get a list of all pending receipts.",117,null],[10,"pending_receipt","","Get a particular reciept.",117,null],[10,"last_nonce","","Returns highest transaction nonce for given address.",117,null],[10,"is_sealing","","Is it currently sealing?",117,null],[10,"sensible_gas_price","","Suggested gas price.",117,null],[11,"sensible_gas_limit","","Suggested gas limit.",117,null],[10,"balance","","Latest account balance in pending state.",117,null],[10,"call","","Call into contract code using pending state.",117,null],[10,"storage_at","","Get storage value in pending state.",117,null],[10,"nonce","","Get account nonce in pending state.",117,null],[10,"code","","Get contract code in pending state.",117,null],[11,"fmt","","",106,null],[0,"snapshot","ethcore","Snapshot creation, restoration, and network service.",null,null],[3,"Watcher","ethcore::snapshot","A `ChainNotify` implementation which will trigger a snapshot event\nat certain block numbers.",null,null],[3,"ManifestData","","Manifest data.",null,null],[12,"state_hashes","","List of state chunk hashes.",118,null],[12,"block_hashes","","List of block chunk hashes.",118,null],[12,"state_root","","The final, expected state root.",118,null],[12,"block_number","","Block number this snapshot was taken at.",118,null],[12,"block_hash","","Block hash this snapshot was taken at.",118,null],[3,"Progress","","A progress indicator for snapshots.",null,null],[3,"StateRebuilder","","Used to rebuild the state trie piece by piece.",null,null],[3,"BlockRebuilder","","Rebuilds the blockchain from chunks.",null,null],[4,"Error","","Snapshot-related errors.",null,null],[13,"InvalidStartingBlock","","Invalid starting block for snapshot.",119,null],[13,"BlockNotFound","","Block not found.",119,null],[13,"IncompleteChain","","Incomplete chain.",119,null],[13,"WrongStateRoot","","Best block has wrong state root.",119,null],[13,"WrongBlockHash","","Wrong block hash.",119,null],[13,"TooManyBlocks","","Too many blocks contained within the snapshot.",119,null],[13,"OldBlockPrunedDB","","Old starting block in a pruned database.",119,null],[13,"MissingCode","","Missing code.",119,null],[13,"UnrecognizedCodeState","","Unrecognized code encoding.",119,null],[13,"RestorationAborted","","Restoration aborted.",119,null],[13,"Trie","","Trie error.",119,null],[13,"Decoder","","Decoder error.",119,null],[13,"Io","","Io error.",119,null],[4,"RestorationStatus","","Statuses for restorations.",null,null],[13,"Inactive","","No restoration.",120,null],[13,"Ongoing","","Ongoing restoration.",120,null],[12,"state_chunks","ethcore::snapshot::RestorationStatus","Total number of state chunks.",120,null],[12,"block_chunks","","Total number of block chunks.",120,null],[12,"state_chunks_done","","Number of state chunks completed.",120,null],[12,"block_chunks_done","","Number of block chunks completed.",120,null],[13,"Failed","ethcore::snapshot","Failed restoration.",120,null],[5,"take_snapshot","","Take a snapshot using the given blockchain, starting block hash, and database, writing into the given writer.",null,{"inputs":[{"name":"blockchain"},{"name":"h256"},{"name":"hashdb"},{"name":"w"},{"name":"progress"}],"output":{"name":"result"}}],[5,"chunk_blocks","","Create and write out all block chunks to disk, returning a vector of all\nthe hashes of block chunks created.",null,{"inputs":[{"name":"blockchain"},{"name":"h256"},{"name":"mutex"},{"name":"progress"}],"output":{"name":"result"}}],[5,"chunk_state","","Walk the given state database starting from the given root,\ncreating chunks and writing them out.",null,{"inputs":[{"name":"hashdb"},{"name":"h256"},{"name":"mutex"},{"name":"progress"}],"output":{"name":"result"}}],[5,"verify_old_block","","Verify an old block with the given header, engine, blockchain, body. If `always` is set, it will perform\nthe fullest verification possible. If not, it will take a random sample to determine whether it will\ndo heavy or light verification.",null,{"inputs":[{"name":"osrng"},{"name":"header"},{"name":"engine"},{"name":"blockchain"},{"name":"option"},{"name":"bool"}],"output":{"name":"result"}}],[0,"io","","Snapshot i/o.\nWays of writing and reading snapshots. This module supports writing and reading\nsnapshots of two different formats: packed and loose.\nPacked snapshots are written to a single file, and loose snapshots are\nwritten to multiple files in one directory.",null,null],[3,"PackedWriter","ethcore::snapshot::io","A packed snapshot writer. This writes snapshots to a single concatenated file.",null,null],[3,"LooseWriter","","A &quot;loose&quot; writer writes chunk files into a directory.",null,null],[3,"PackedReader","","Packed snapshot reader.",null,null],[3,"LooseReader","","reader for &quot;loose&quot; snapshots",null,null],[8,"SnapshotWriter","","Something which can write snapshots.\nWriting the same chunk multiple times will lead to implementation-defined\nbehavior, and is not advised.",null,null],[10,"write_state_chunk","","Write a compressed state chunk.",121,null],[10,"write_block_chunk","","Write a compressed block chunk.",121,null],[10,"finish","","Complete writing. The manifest&#39;s chunk lists must be consistent\nwith the chunks written.",121,null],[8,"SnapshotReader","","Something which can read compressed snapshots.",null,null],[10,"manifest","","Get the manifest data for this snapshot.",122,null],[10,"chunk","","Get raw chunk data by hash. implementation defined behavior\nif a chunk not in the manifest is requested.",122,null],[11,"new","","Create a new &quot;PackedWriter&quot;, to write into the file at the given path.",123,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"write_state_chunk","","",123,null],[11,"write_block_chunk","","",123,null],[11,"finish","","",123,null],[11,"new","","Create a new LooseWriter which will write into the given directory,\ncreating it if it doesn&#39;t exist.",124,{"inputs":[{"name":"pathbuf"}],"output":{"name":"result"}}],[11,"write_state_chunk","","",124,null],[11,"write_block_chunk","","",124,null],[11,"finish","","",124,null],[11,"new","","Create a new `PackedReader` for the file at the given path.\nThis will fail if any io errors are encountered or the file\nis not a valid packed snapshot.",125,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"manifest","","",125,null],[11,"chunk","","",125,null],[11,"new","","Create a new `LooseReader` which will read the manifest and chunk data from\nthe given directory.",126,{"inputs":[{"name":"pathbuf"}],"output":{"name":"result"}}],[11,"manifest","","",126,null],[11,"chunk","","",126,null],[0,"service","ethcore::snapshot","Snapshot network service implementation.",null,null],[3,"ServiceParams","ethcore::snapshot::service","Snapshot service parameters.",null,null],[12,"engine","","The consensus engine this is built on.",127,null],[12,"genesis_block","","The chain&#39;s genesis block.",127,null],[12,"db_config","","Database configuration options.",127,null],[12,"pruning","","State pruning algorithm.",127,null],[12,"channel","","Async IO channel for sending messages.",127,null],[12,"snapshot_root","","The directory to put snapshots in.\nUsually &quot;&lt;chain hash&gt;/snapshot&quot;",127,null],[12,"db_restore","","A handle for database restoration.",127,null],[3,"Service","","`SnapshotService` implementation.\nThis controls taking snapshots and restoring from them.",null,null],[6,"Channel","","Type alias for client io channel.",null,null],[8,"DatabaseRestore","","External database restoration handler",null,null],[10,"restore_db","","Restart with a new backend. Takes ownership of passed database and moves it to a new location.",128,null],[11,"new","","Create a new snapshot service from the given parameters.",129,{"inputs":[{"name":"serviceparams"}],"output":{"name":"result"}}],[11,"reader","","Get a reference to the snapshot reader.",129,null],[11,"tick","","Tick the snapshot service. This will log any active snapshot\nbeing taken.",129,null],[11,"take_snapshot","","Take a snapshot at the block with the given number.\ncalling this while a restoration is in progress or vice versa\nwill lead to a race condition where the first one to finish will\nhave their produced snapshot overwritten.",129,null],[11,"init_restore","","Initialize the restoration synchronously.\nThe recover flag indicates whether to recover the restored snapshot.",129,null],[11,"feed_state_chunk","","Feed a state chunk to be processed synchronously.",129,null],[11,"feed_block_chunk","","Feed a block chunk to be processed synchronously.",129,null],[11,"manifest","","",129,null],[11,"chunk","","",129,null],[11,"status","","",129,null],[11,"begin_restore","","",129,null],[11,"abort_restore","","",129,null],[11,"restore_state_chunk","","",129,null],[11,"restore_block_chunk","","",129,null],[11,"provide_canon_hashes","","",129,null],[11,"drop","","",129,null],[11,"fmt","ethcore::snapshot","",119,null],[11,"fmt","","",119,null],[11,"from","","",119,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",119,{"inputs":[{"name":"trieerror"}],"output":{"name":"self"}}],[11,"from","","",119,{"inputs":[{"name":"decodererror"}],"output":{"name":"self"}}],[11,"from","","",119,{"inputs":[{"name":"box"}],"output":{"name":"self"}}],[11,"new","","Create a new `Watcher` which will trigger a snapshot event\nonce every `period` blocks, but only after that block is\n`history` blocks old.",130,{"inputs":[{"name":"arc"},{"name":"f"},{"name":"iochannel"},{"name":"u64"},{"name":"u64"}],"output":{"name":"self"}}],[11,"new_blocks","","",130,null],[8,"SnapshotService","","The interface for a snapshot network service.\nThis handles:\n   - restoration of snapshots to temporary databases.\n   - responding to queries for snapshot manifests and chunks",null,null],[10,"manifest","","Query the most recent manifest data.",131,null],[10,"chunk","","Get raw chunk for a given hash.",131,null],[10,"status","","Ask the snapshot service for the restoration status.",131,null],[10,"begin_restore","","Begin snapshot restoration.\nIf restoration in-progress, this will reset it.\nFrom this point on, any previous snapshot may become unavailable.",131,null],[10,"abort_restore","","Abort an in-progress restoration if there is one.",131,null],[10,"restore_state_chunk","","Feed a raw state chunk to the service to be processed asynchronously.\nno-op if not currently restoring.",131,null],[10,"restore_block_chunk","","Feed a raw block chunk to the service to be processed asynchronously.\nno-op if currently restoring.",131,null],[10,"provide_canon_hashes","","Give the restoration in-progress some canonical block hashes for\nextra verification (performed at the end)",131,null],[11,"fmt","","",132,null],[11,"default","","",132,{"inputs":[],"output":{"name":"progress"}}],[11,"reset","","Reset the progress.",132,null],[11,"accounts","","Get the number of accounts snapshotted thus far.",132,null],[11,"blocks","","Get the number of blocks snapshotted thus far.",132,null],[11,"size","","Get the written size of the snapshot in bytes.",132,null],[11,"done","","Whether the snapshot is complete.",132,null],[11,"new","","Create a new state rebuilder to write into the given backing DB.",133,{"inputs":[{"name":"arc"},{"name":"algorithm"}],"output":{"name":"self"}}],[11,"feed","","Feed an uncompressed state chunk into the rebuilder.",133,null],[11,"check_missing","","Check for accounts missing code. Once all chunks have been fed, there should\nbe none.",133,null],[11,"state_root","","Get the state root of the rebuilder.",133,null],[11,"new","","Create a new BlockRebuilder.",134,{"inputs":[{"name":"blockchain"},{"name":"arc"},{"name":"manifestdata"}],"output":{"name":"result"}}],[11,"feed","","Feed the rebuilder an uncompressed block chunk.\nReturns the number of blocks fed or any errors.",134,null],[11,"finalize","","Glue together any disconnected chunks and check that the chain is complete.",134,null],[0,"action_params","ethcore","Evm input params.",null,null],[3,"ActionParams","ethcore::action_params","Action (call/create) input params. Everything else should be specified in Externalities.",null,null],[12,"code_address","","Address of currently executed code.",135,null],[12,"code_hash","","Hash of currently executed code.",135,null],[12,"address","","Receive address. Usually equal to code_address,\nexcept when called using CALLCODE.",135,null],[12,"sender","","Sender of current part of the transaction.",135,null],[12,"origin","","Transaction initiator.",135,null],[12,"gas","","Gas paid up front for transaction execution",135,null],[12,"gas_price","","Gas price.",135,null],[12,"value","","Transaction value.",135,null],[12,"code","","Code being executed.",135,null],[12,"data","","Input data.",135,null],[12,"call_type","","Type of call",135,null],[4,"ActionValue","","Transaction value",null,null],[13,"Transfer","","Value that should be transfered",136,null],[13,"Apparent","","Apparent value for transaction (not transfered)",136,null],[11,"clone","","",136,null],[11,"fmt","","",136,null],[11,"value","","Returns action value as U256.",136,null],[11,"clone","","",135,null],[11,"fmt","","",135,null],[11,"default","","Returns default ActionParams initialized with zeros",135,{"inputs":[],"output":{"name":"actionparams"}}],[11,"from","","",135,{"inputs":[{"name":"transaction"}],"output":{"name":"self"}}],[0,"db","ethcore","Database utilities and definitions.",null,null],[4,"CacheUpdatePolicy","ethcore::db","Modes for updating caches.",null,null],[13,"Overwrite","","Overwrite entries.",137,null],[13,"Remove","","Remove entries.",137,null],[17,"COL_STATE","","Column for State",null,null],[17,"COL_HEADERS","","Column for Block headers",null,null],[17,"COL_BODIES","","Column for Block bodies",null,null],[17,"COL_EXTRA","","Column for Extras",null,null],[17,"COL_TRACE","","Column for Traces",null,null],[17,"COL_ACCOUNT_BLOOM","","Column for Traces",null,null],[17,"NUM_COLUMNS","","Number of columns in DB",null,null],[8,"Cache","","A cache for arbitrary key-value pairs.",null,null],[10,"insert","","Insert an entry into the cache and get the old value.",138,null],[10,"remove","","Remove an entry from the cache, getting the old value if it existed.",138,null],[10,"get","","Query the cache for a key&#39;s associated value.",138,null],[8,"Key","","Should be used to get database key associated with given value.",null,null],[16,"Target","","The db key associated with this value.",139,null],[10,"key","","Returns db key.",139,null],[8,"Writable","","Should be used to write value into database.",null,null],[10,"write","","Writes the value into the database.",140,null],[10,"delete","","Deletes key from the databse.",140,null],[11,"write_with_cache","","Writes the value into the database and updates the cache.",140,null],[11,"extend_with_cache","","Writes the values into the database and updates the cache.",140,null],[11,"extend_with_option_cache","","Writes and removes the values into the database and updates the cache.",140,null],[8,"Readable","","Should be used to read values from database.",null,null],[10,"read","","Returns value for given key.",141,null],[11,"read_with_cache","","Returns value for given key either in cache or in database.",141,null],[10,"exists","","Returns true if given value exists.",141,null],[11,"exists_with_cache","","Returns true if given value exists either in cache or in database.",141,null],[11,"clone","","",137,null],[0,"verification","ethcore","Block verification utilities.",null,null],[3,"CanonVerifier","ethcore::verification","A canonial verifier -- this does full verification.",null,null],[3,"NoopVerifier","","A no-op verifier -- this will verify everything it&#39;s given immediately.",null,null],[3,"VerificationQueueInfo","","Verification queue status",null,null],[12,"unverified_queue_size","","Number of queued items pending verification",19,null],[12,"verified_queue_size","","Number of verified queued items pending import",19,null],[12,"verifying_queue_size","","Number of items being verified",19,null],[12,"max_queue_size","","Configured maximum number of items in the queue",19,null],[12,"max_mem_use","","Configured maximum number of bytes to use",19,null],[12,"mem_used","","Heap memory used in bytes",19,null],[4,"VerifierType","","Verifier type.",null,null],[13,"Canon","","Verifies block normally.",142,null],[13,"CanonNoSeal","","Verifies block normallly, but skips seal verification.",142,null],[13,"Noop","","Does not verify block at all.\nUsed in tests.",142,null],[5,"new","","Create a new verifier based on type.",null,{"inputs":[{"name":"verifiertype"}],"output":{"name":"box"}}],[0,"verification","","Block and transaction verification functions",null,null],[3,"PreverifiedBlock","ethcore::verification::verification","Preprocessed block data gathered in `verify_block_unordered` call",null,null],[12,"header","","Populated block header",143,null],[12,"transactions","","Populated block transactions",143,null],[12,"bytes","","Block bytes",143,null],[5,"verify_block_basic","","Phase 1 quick block verification. Only does checks that are cheap. Operates on a single block",null,null],[5,"verify_block_unordered","","Phase 2 verification. Perform costly checks such as transaction signatures and block nonce for ethash.\nStill operates on a individual block\nReturns a `PreverifiedBlock` structure populated with transactions",null,{"inputs":[{"name":"header"},{"name":"bytes"},{"name":"engine"},{"name":"bool"}],"output":{"name":"result"}}],[5,"verify_block_family","","Phase 3 verification. Check block information against parent and uncles.",null,null],[5,"verify_block_final","","Phase 4 verification. Check block information against transaction enactment results,",null,{"inputs":[{"name":"header"},{"name":"header"}],"output":{"name":"result"}}],[5,"verify_header_params","","Check basic header parameters.",null,{"inputs":[{"name":"header"},{"name":"engine"}],"output":{"name":"result"}}],[11,"heap_size_of_children","","",143,null],[0,"verifier","ethcore::verification","A generic verifier trait.",null,null],[8,"Verifier","ethcore::verification::verifier","Should be used to verify blocks.",null,null],[10,"verify_block_family","","Verify a block relative to its parent and uncles.",144,null],[10,"verify_block_final","","Do a final verification check for an enacted header vs its expected counterpart.",144,null],[0,"queue","ethcore::verification","A queue of blocks. Sits between network or other I/O and the `BlockChain`.\nSorts them ready for blockchain insertion.",null,null],[3,"QueueInfo","ethcore::verification::queue","Verification queue status",null,null],[12,"unverified_queue_size","","Number of queued items pending verification",19,null],[12,"verified_queue_size","","Number of verified queued items pending import",19,null],[12,"verifying_queue_size","","Number of items being verified",19,null],[12,"max_queue_size","","Configured maximum number of items in the queue",19,null],[12,"max_mem_use","","Configured maximum number of bytes to use",19,null],[12,"mem_used","","Heap memory used in bytes",19,null],[3,"Config","","Verification queue configuration",null,null],[12,"max_queue_size","","Maximum number of items to keep in unverified queue.\nWhen the limit is reached, is_full returns true.",145,null],[12,"max_mem_use","","Maximum heap memory to use.\nWhen the limit is reached, is_full returns true.",145,null],[3,"Verifying","","An item which is in the process of being verified.",null,null],[3,"VerificationQueue","","A queue of items to be verified. Sits between network or other I/O and the `BlockChain`.\nKeeps them in the same order as inserted, minus invalid items.",null,null],[4,"Status","","Status of items in the queue.",null,null],[13,"Queued","","Currently queued.",146,null],[13,"Bad","","Known to be bad.",146,null],[13,"Unknown","","Unknown.",146,null],[0,"kind","","Definition of valid items for the verification queue.",null,null],[0,"blocks","ethcore::verification::queue::kind","The blocks verification module.",null,null],[3,"Blocks","ethcore::verification::queue::kind::blocks","A mode for verifying blocks.",null,null],[3,"Unverified","","An unverified block.",null,null],[11,"create","","",147,{"inputs":[{"name":"input"},{"name":"engine"}],"output":{"name":"result"}}],[11,"verify","","",147,{"inputs":[{"name":"unverified"},{"name":"engine"},{"name":"bool"}],"output":{"name":"result"}}],[11,"new","","Create an `Unverified` from raw bytes.",148,{"inputs":[{"name":"bytes"}],"output":{"name":"self"}}],[11,"heap_size_of_children","","",148,null],[11,"hash","","",148,null],[11,"parent_hash","","",148,null],[11,"hash","ethcore::verification::verification","",143,null],[11,"parent_hash","","",143,null],[0,"headers","ethcore::verification::queue::kind","Verification for headers.",null,null],[3,"Headers","ethcore::verification::queue::kind::headers","A mode for verifying headers.",null,null],[11,"hash","ethcore::header","",53,null],[11,"parent_hash","","",53,null],[11,"create","ethcore::verification::queue::kind::headers","",149,{"inputs":[{"name":"input"},{"name":"engine"}],"output":{"name":"result"}}],[11,"verify","","",149,{"inputs":[{"name":"unverified"},{"name":"engine"},{"name":"bool"}],"output":{"name":"result"}}],[8,"HasHash","ethcore::verification::queue::kind","Something which can produce a hash and a parent hash.",null,null],[10,"hash","","Get the hash of this item.",150,null],[10,"parent_hash","","Get the hash of this item&#39;s parent.",150,null],[8,"Kind","","Defines transitions between stages of verification.",null,null],[16,"Input","","The first stage: completely unverified.",151,null],[16,"Unverified","","The second stage: partially verified.",151,null],[16,"Verified","","The third stage: completely verified.",151,null],[10,"create","","Attempt to create the `Unverified` item from the input.",151,{"inputs":[{"name":"input"},{"name":"engine"}],"output":{"name":"result"}}],[10,"verify","","Attempt to verify the `Unverified` item using the given engine.",151,{"inputs":[{"name":"unverified"},{"name":"engine"},{"name":"bool"}],"output":{"name":"result"}}],[6,"BlockQueue","ethcore::verification::queue","Type alias for block queue convenience.",null,null],[6,"HeaderQueue","","Type alias for header queue convenience.",null,null],[11,"fmt","","",145,null],[11,"eq","","",145,null],[11,"ne","","",145,null],[11,"clone","","",145,null],[11,"default","","",145,{"inputs":[],"output":{"name":"self"}}],[11,"heap_size_of_children","","",152,null],[11,"new","","Creates a new queue instance.",153,{"inputs":[{"name":"config"},{"name":"arc"},{"name":"iochannel"},{"name":"bool"}],"output":{"name":"self"}}],[11,"clear","","Clear the queue and stop verification activity.",153,null],[11,"flush","","Wait for unverified queue to be empty",153,null],[11,"status","","Check if the item is currently in the queue",153,null],[11,"import","","Add a block to the queue.",153,null],[11,"mark_as_bad","","Mark given item and all its children as bad. pauses verification\nuntil complete.",153,null],[11,"mark_as_good","","Mark given item as processed.\nReturns true if the queue becomes empty.",153,null],[11,"drain","","Removes up to `max` verified items from the queue",153,null],[11,"queue_info","","Get queue status.",153,null],[11,"collect_garbage","","Optimise memory footprint of the heap fields, and adjust the number of threads\nto better suit the workload.",153,null],[11,"on_panic","","",153,null],[11,"drop","","",153,null],[11,"verify_block_family","ethcore::verification","",154,null],[11,"verify_block_final","","",154,null],[11,"verify_block_family","","",155,null],[11,"verify_block_final","","",155,null],[11,"fmt","","",142,null],[11,"eq","","",142,null],[11,"clone","","",142,null],[11,"default","","",142,{"inputs":[],"output":{"name":"self"}}],[11,"verifying_seal","","Check if seal verification is enabled for this verifier type.",142,null],[0,"evm","ethcore","Ethereum virtual machine.",null,null],[4,"CallType","ethcore::evm","The type of the call-like instruction.",null,null],[13,"None","","Not a CALL.",156,null],[13,"Call","","CALL.",156,null],[13,"CallCode","","CALLCODE.",156,null],[13,"DelegateCall","","DELEGATECALL.",156,null],[0,"ext","","Interface for Evm externalities.",null,null],[4,"ContractCreateResult","ethcore::evm::ext","Result of externalities create function.",null,null],[13,"Created","","Returned when creation was successfull.\nContains an address of newly created contract and gas left.",157,null],[13,"Failed","","Returned when contract creation failed.\nVM doesn&#39;t have to know the reason.",157,null],[4,"MessageCallResult","","Result of externalities call function.",null,null],[13,"Success","","Returned when message call was successfull.\nContains gas left.",158,null],[13,"Failed","","Returned when message call failed.\nVM doesn&#39;t have to know the reason.",158,null],[8,"Ext","","Externalities interface for EVMs",null,null],[10,"storage_at","","Returns a value for given key.",159,null],[10,"set_storage","","Stores a value for given key.",159,null],[10,"exists","","Determine whether an account exists.",159,null],[10,"exists_and_not_null","","Determine whether an account exists and is not null (zero balance/nonce, no code).",159,null],[10,"origin_balance","","Balance of the origin account.",159,null],[10,"balance","","Returns address balance.",159,null],[10,"blockhash","","Returns the hash of one of the 256 most recent complete blocks.",159,null],[10,"create","","Creates new contract.",159,null],[10,"call","","Message call.",159,null],[10,"extcode","","Returns code at given address",159,null],[10,"extcodesize","","Returns code size at given address",159,null],[10,"log","","Creates log entry with given topics and data",159,null],[10,"ret","","Should be called when transaction calls `RETURN` opcode.\nReturns gas_left if cost of returning the data is not too high.",159,null],[10,"suicide","","Should be called when contract commits suicide.\nAddress to which funds should be refunded.",159,null],[10,"schedule","","Returns schedule.",159,null],[10,"env_info","","Returns environment info.",159,null],[10,"depth","","Returns current depth of execution.",159,null],[10,"inc_sstore_clears","","Increments sstore refunds count by 1.",159,null],[11,"trace_prepare_execute","","Prepare to trace an operation. Passthrough for the VM trace.",159,null],[11,"trace_executed","","Trace the finalised execution of a single instruction.",159,null],[0,"evm","ethcore::evm","Evm interface.",null,null],[4,"Error","ethcore::evm::evm","Evm errors.",null,null],[13,"OutOfGas","","`OutOfGas` is returned when transaction execution runs out of gas.\nThe state should be reverted to the state from before the\ntransaction execution. But it does not mean that transaction\nwas invalid. Balance still should be transfered and nonce\nshould be increased.",160,null],[13,"BadJumpDestination","","`BadJumpDestination` is returned when execution tried to move\nto position that wasn&#39;t marked with JUMPDEST instruction",160,null],[12,"destination","ethcore::evm::evm::Error","Position the code tried to jump to.",160,null],[13,"BadInstruction","ethcore::evm::evm","`BadInstructions` is returned when given instruction is not supported",160,null],[12,"instruction","ethcore::evm::evm::Error","Unrecognized opcode",160,null],[13,"StackUnderflow","ethcore::evm::evm","`StackUnderflow` when there is not enough stack elements to execute instruction",160,null],[12,"instruction","ethcore::evm::evm::Error","Invoked instruction",160,null],[12,"wanted","","How many stack elements was requested by instruction",160,null],[12,"on_stack","","How many elements were on stack",160,null],[13,"OutOfStack","ethcore::evm::evm","When execution would exceed defined Stack Limit",160,null],[12,"instruction","ethcore::evm::evm::Error","Invoked instruction",160,null],[12,"wanted","","How many stack elements instruction wanted to push",160,null],[12,"limit","","What was the stack limit",160,null],[13,"Internal","ethcore::evm::evm","Returned on evm internal error. Should never be ignored during development.\nLikely to cause consensus issues.",160,null],[4,"GasLeft","","Gas Left: either it is a known value, or it needs to be computed by processing\na return instruction.",null,null],[13,"Known","","Known gas left",161,null],[13,"NeedsReturn","","Return instruction must be processed.",161,null],[6,"Result","","A specialized version of Result over EVM errors.",null,null],[8,"Finalize","","Types that can be &quot;finalized&quot; using an EVM.",null,null],[10,"finalize","","Consume the externalities, call return if necessary, and produce a final amount of gas left.",162,null],[8,"CostType","","Cost calculation type. For low-gas usage we calculate costs using usize instead of U256",null,null],[10,"as_u256","","Converts this cost into `U256`",163,null],[10,"from_u256","","Tries to fit `U256` into this `Cost` type",163,{"inputs":[{"name":"u256"}],"output":{"name":"result"}}],[10,"as_usize","","Convert to usize (may panic)",163,null],[10,"overflow_add","","Add with overflow",163,null],[10,"overflow_mul","","Multiple with overflow",163,null],[10,"overflow_mul_shr","","Single-step full multiplication and shift: `(self*other) &gt;&gt; shr`\nShould not overflow on intermediate steps",163,null],[8,"Evm","","Evm interface",null,null],[10,"exec","","This function should be used to execute transaction.",164,null],[11,"fmt","","",160,null],[11,"clone","","",160,null],[11,"fmt","","",160,null],[11,"fmt","","",161,null],[11,"eq","","",161,null],[11,"ne","","",161,null],[11,"partial_cmp","","",161,null],[11,"lt","","",161,null],[11,"le","","",161,null],[11,"gt","","",161,null],[11,"ge","","",161,null],[11,"cmp","","",161,null],[11,"finalize","","",165,null],[0,"interpreter","ethcore::evm","Rust VM implementation",null,null],[3,"SharedCache","ethcore::evm::interpreter","Global cache for EVM interpreter",null,null],[3,"Interpreter","","Intepreter EVM implementation",null,null],[11,"new","","Create a jump destinations cache with a maximum size in bytes\nto cache.",166,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"jump_destinations","","Get jump destinations bitmap for a contract.",166,null],[11,"default","","",166,{"inputs":[],"output":{"name":"self"}}],[11,"exec","","",167,null],[11,"new","","Create a new `Interpreter` instance with shared cache.",167,{"inputs":[{"name":"arc"}],"output":{"name":"interpreter"}}],[0,"factory","ethcore::evm","Evm factory.",null,null],[3,"Factory","ethcore::evm::factory","Evm factory. Creates appropriate Evm.",null,null],[4,"VMType","","Type of EVM to use.",null,null],[13,"Interpreter","","RUST EVM",168,null],[11,"fmt","","",168,null],[11,"eq","","",168,null],[11,"clone","","",168,null],[11,"fmt","","",168,null],[11,"default","","",168,{"inputs":[],"output":{"name":"self"}}],[11,"all","","Return all possible VMs (Interpreter)",168,{"inputs":[],"output":{"name":"vec"}}],[11,"jit","","Return new jit if it&#39;s possible",168,{"inputs":[],"output":{"name":"option"}}],[11,"clone","","",169,null],[11,"create","","Create fresh instance of VM\nMight choose implementation depending on supplied gas.",169,null],[11,"new","","Create new instance of specific `VMType` factory, with a size in bytes\nfor caching jump destinations.",169,{"inputs":[{"name":"vmtype"},{"name":"usize"}],"output":{"name":"self"}}],[11,"default","","Returns native rust evm factory",169,{"inputs":[],"output":{"name":"factory"}}],[0,"schedule","ethcore::evm","Cost schedule and other parameterisations for the EVM.",null,null],[3,"Schedule","ethcore::evm::schedule","Definition of the cost schedule and other parameterisations for the EVM.",null,null],[12,"exceptional_failed_code_deposit","","Does it support exceptional failed code deposit",170,null],[12,"have_delegate_call","","Does it have a delegate cal",170,null],[12,"stack_limit","","VM stack limit",170,null],[12,"max_depth","","Max number of nested calls/creates",170,null],[12,"tier_step_gas","","Gas prices for instructions in all tiers",170,null],[12,"exp_gas","","Gas price for `EXP` opcode",170,null],[12,"exp_byte_gas","","Additional gas for `EXP` opcode for each byte of exponent",170,null],[12,"sha3_gas","","Gas price for `SHA3` opcode",170,null],[12,"sha3_word_gas","","Additional gas for `SHA3` opcode for each word of hashed memory",170,null],[12,"sload_gas","","Gas price for loading from storage",170,null],[12,"sstore_set_gas","","Gas price for setting new value to storage (`storage==0`, `new!=0`)",170,null],[12,"sstore_reset_gas","","Gas price for altering value in storage",170,null],[12,"sstore_refund_gas","","Gas refund for `SSTORE` clearing (when `storage!=0`, `new==0`)",170,null],[12,"jumpdest_gas","","Gas price for `JUMPDEST` opcode",170,null],[12,"log_gas","","Gas price for `LOG*`",170,null],[12,"log_data_gas","","Additional gas for data in `LOG*`",170,null],[12,"log_topic_gas","","Additional gas for each topic in `LOG*`",170,null],[12,"create_gas","","Gas price for `CREATE` opcode",170,null],[12,"call_gas","","Gas price for `*CALL*` opcodes",170,null],[12,"call_stipend","","Stipend for transfer for `CALL|CALLCODE` opcode when `value&gt;0`",170,null],[12,"call_value_transfer_gas","","Additional gas required for value transfer (`CALL|CALLCODE`)",170,null],[12,"call_new_account_gas","","Additional gas for creating new account (`CALL|CALLCODE`)",170,null],[12,"suicide_refund_gas","","Refund for SUICIDE",170,null],[12,"memory_gas","","Gas for used memory",170,null],[12,"quad_coeff_div","","Coefficient used to convert memory size to gas price for memory",170,null],[12,"create_data_gas","","Cost for contract length when executing `CREATE`",170,null],[12,"create_data_limit","","Maximum code size when creating a contract.",170,null],[12,"tx_gas","","Transaction cost",170,null],[12,"tx_create_gas","","`CREATE` transaction cost",170,null],[12,"tx_data_zero_gas","","Additional cost for empty data transaction",170,null],[12,"tx_data_non_zero_gas","","Aditional cost for non-empty data transaction",170,null],[12,"copy_gas","","Gas price for copying memory",170,null],[12,"extcodesize_gas","","Price of EXTCODESIZE",170,null],[12,"extcodecopy_base_gas","","Base price of EXTCODECOPY",170,null],[12,"balance_gas","","Price of BALANCE",170,null],[12,"suicide_gas","","Price of SUICIDE",170,null],[12,"suicide_to_new_account_cost","","Amount of additional gas to pay when SUICIDE credits a non-existant account",170,null],[12,"sub_gas_cap_divisor","","If Some(x): let limit = GAS * (x - 1) / x; let CALL&#39;s gas = min(requested, limit). let CREATE&#39;s gas = limit.\nIf None: let CALL&#39;s gas = (requested &gt; GAS ? [OOG] : GAS). let CREATE&#39;s gas = GAS",170,null],[12,"no_empty","","Don&#39;t ever make empty accounts; contracts start with nonce=1. Also, don&#39;t charge 25k when sending/suicide zero-value.",170,null],[12,"kill_empty","","Kill empty accounts if touched.",170,null],[11,"new_frontier","","Schedule for the Frontier-era of the Ethereum main net.",170,{"inputs":[],"output":{"name":"schedule"}}],[11,"new_homestead","","Schedule for the Homestead-era of the Ethereum main net.",170,{"inputs":[],"output":{"name":"schedule"}}],[11,"new_post_eip150","","Schedule for the post-EIP-150-era of the Ethereum main net.",170,{"inputs":[{"name":"usize"},{"name":"bool"},{"name":"bool"},{"name":"bool"}],"output":{"name":"schedule"}}],[11,"fmt","ethcore::client","",29,null],[11,"default","","",29,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",29,{"inputs":[{"name":"env"}],"output":{"name":"self"}}],[11,"default","","",28,{"inputs":[],"output":{"name":"transactoptions"}}],[11,"new","","Basic constructor.",171,{"inputs":[{"name":"state"},{"name":"envinfo"},{"name":"engine"},{"name":"factory"}],"output":{"name":"self"}}],[11,"from_parent","","Populates executive from parent properties. Increments executive depth.",171,{"inputs":[{"name":"state"},{"name":"envinfo"},{"name":"engine"},{"name":"factory"},{"name":"usize"}],"output":{"name":"self"}}],[11,"as_externalities","","Creates `Externalities` from `Executive`.",171,null],[11,"transact","","This function should be used to execute transaction.",171,null],[11,"transact_with_tracer","","Execute transaction/call with tracing enabled",171,null],[11,"call","","Calls contract function with given contract params.\nNOTE. It does not finalize the transaction (doesn&#39;t do refunds, nor suicides).\nModifies the substate and the output.\nReturns either gas_left or `evm::Error`.",171,null],[11,"create","","Creates contract with given contract params.\nNOTE. It does not finalize the transaction (doesn&#39;t do refunds, nor suicides).\nModifies the substate.",171,null],[11,"fmt","","",18,null],[11,"total","","Total amount used by the cache.",18,null],[11,"fmt","","",22,null],[11,"eq","","",22,null],[11,"ne","","",22,null],[11,"clone","","",22,null],[11,"default","","",22,{"inputs":[],"output":{"name":"self"}}],[11,"key","ethcore::blockchain::extras","",172,null],[11,"hash","ethcore::client","",35,null],[11,"clone","","",35,null],[11,"eq","","",35,null],[11,"ne","","",35,null],[11,"fmt","","",35,null],[11,"size","","",35,null],[11,"to_bytes","","",35,null],[11,"from_bytes","","",35,null],[11,"len_params","","",35,{"inputs":[],"output":{"name":"usize"}}],[11,"hash","","",36,null],[11,"clone","","",36,null],[11,"eq","","",36,null],[11,"ne","","",36,null],[11,"fmt","","",36,null],[11,"size","","",36,null],[11,"to_bytes","","",36,null],[11,"from_bytes","","",36,null],[11,"len_params","","",36,{"inputs":[],"output":{"name":"usize"}}],[11,"size","","",23,null],[11,"to_bytes","","",23,null],[11,"from_bytes","","",23,null],[11,"len_params","","",23,{"inputs":[],"output":{"name":"usize"}}],[11,"clone","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"fmt","","",24,null],[11,"size","","",24,null],[11,"to_bytes","","",24,null],[11,"from_bytes","","",24,null],[11,"len_params","","",24,{"inputs":[],"output":{"name":"usize"}}],[11,"fmt","","",17,null],[11,"clone","","",17,null],[11,"size","","",17,null],[11,"to_bytes","","",17,null],[11,"from_bytes","","",17,null],[11,"len_params","","",17,{"inputs":[],"output":{"name":"usize"}}],[11,"clone","ethcore::trace","",66,null],[11,"eq","","",66,null],[11,"fmt","","",66,null],[11,"size","","",66,null],[11,"to_bytes","","",66,null],[11,"from_bytes","","",66,null],[11,"len_params","","",66,{"inputs":[],"output":{"name":"usize"}}],[11,"from","","",66,{"inputs":[{"name":"evmerror"}],"output":{"name":"self"}}],[11,"fmt","","",66,null],[11,"rlp_append","","",66,null],[11,"decode","","",66,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",73,null],[11,"size","","",73,null],[11,"to_bytes","","",73,null],[11,"from_bytes","","",73,null],[11,"len_params","","",73,{"inputs":[],"output":{"name":"usize"}}],[11,"from","","",73,{"inputs":[{"name":"vec"}],"output":{"name":"self"}}],[11,"matches","","Returns true if address matches one of the searched addresses.",73,null],[11,"matches_all","","Returns true if this address filter matches everything.",73,null],[11,"blooms","","Returns blooms of this addresses filter.",73,null],[11,"with_blooms","","Returns vector of blooms zipped with blooms of this addresses filter.",73,null],[11,"fmt","","",63,null],[11,"size","","",63,null],[11,"to_bytes","","",63,null],[11,"from_bytes","","",63,null],[11,"len_params","","",63,{"inputs":[],"output":{"name":"usize"}}],[11,"bloom_possibilities","","",63,null],[11,"range","","",63,null],[11,"matches","","Returns true if given trace matches the filter.",63,null],[11,"clone","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"fmt","","",62,null],[11,"size","","",62,null],[11,"to_bytes","","",62,null],[11,"from_bytes","","",62,null],[11,"len_params","","",62,{"inputs":[],"output":{"name":"usize"}}],[11,"bloom","","Returns bloom of the trace.",62,null],[11,"heap_size_of_children","","",62,null],[11,"rlp_append","","",62,null],[11,"decode","","",62,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"clone","","",74,null],[11,"eq","","",74,null],[11,"ne","","",74,null],[11,"fmt","","",74,null],[11,"from","","",74,{"inputs":[{"name":"vec"}],"output":{"name":"self"}}],[11,"heap_size_of_children","","",74,null],[11,"bloom","","Returns bloom of all traces in the collection.",74,null],[11,"rlp_append","","",74,null],[11,"decode","","",74,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"into","","",74,null],[11,"default","","",75,{"inputs":[],"output":{"name":"flatblocktraces"}}],[11,"clone","","",75,null],[11,"eq","","",75,null],[11,"ne","","",75,null],[11,"fmt","","",75,null],[11,"heap_size_of_children","","",75,null],[11,"from","","",75,{"inputs":[{"name":"vec"}],"output":{"name":"self"}}],[11,"bloom","","Returns bloom of all traces in the block.",75,null],[11,"rlp_append","","",75,null],[11,"decode","","",75,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"into","","",75,null],[11,"default","ethcore::trace::trace","",76,{"inputs":[],"output":{"name":"callresult"}}],[11,"eq","","",76,null],[11,"ne","","",76,null],[11,"clone","","",76,null],[11,"fmt","","",76,null],[11,"size","","",76,null],[11,"to_bytes","","",76,null],[11,"from_bytes","","",76,null],[11,"len_params","","",76,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",76,null],[11,"decode","","",76,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"clone","","",77,null],[11,"fmt","","",77,null],[11,"size","","",77,null],[11,"to_bytes","","",77,null],[11,"from_bytes","","",77,null],[11,"len_params","","",77,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",77,null],[11,"decode","","",77,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"bloom","","Returns bloom.",77,null],[11,"eq","","",78,null],[11,"ne","","",78,null],[11,"clone","","",78,null],[11,"fmt","","",78,null],[11,"size","","",78,null],[11,"to_bytes","","",78,null],[11,"from_bytes","","",78,null],[11,"len_params","","",78,{"inputs":[],"output":{"name":"usize"}}],[11,"from","","",78,{"inputs":[{"name":"actionparams"}],"output":{"name":"self"}}],[11,"rlp_append","","",78,null],[11,"decode","","",78,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"bloom","","Returns call action bloom.\nThe bloom contains from and to addresses.",78,null],[11,"eq","","",79,null],[11,"ne","","",79,null],[11,"clone","","",79,null],[11,"fmt","","",79,null],[11,"size","","",79,null],[11,"to_bytes","","",79,null],[11,"from_bytes","","",79,null],[11,"len_params","","",79,{"inputs":[],"output":{"name":"usize"}}],[11,"from","","",79,{"inputs":[{"name":"actionparams"}],"output":{"name":"self"}}],[11,"rlp_append","","",79,null],[11,"decode","","",79,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"bloom","","Returns bloom create action bloom.\nThe bloom contains only from address.",79,null],[11,"eq","","",80,null],[11,"ne","","",80,null],[11,"clone","","",80,null],[11,"fmt","","",80,null],[11,"size","","",80,null],[11,"to_bytes","","",80,null],[11,"from_bytes","","",80,null],[11,"len_params","","",80,{"inputs":[],"output":{"name":"usize"}}],[11,"bloom","","Return suicide action bloom.",80,null],[11,"rlp_append","","",80,null],[11,"decode","","",80,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"eq","","",81,null],[11,"ne","","",81,null],[11,"clone","","",81,null],[11,"fmt","","",81,null],[11,"size","","",81,null],[11,"to_bytes","","",81,null],[11,"from_bytes","","",81,null],[11,"len_params","","",81,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",81,null],[11,"decode","","",81,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"bloom","","Returns action bloom.",81,null],[11,"eq","","",82,null],[11,"ne","","",82,null],[11,"clone","","",82,null],[11,"fmt","","",82,null],[11,"size","","",82,null],[11,"to_bytes","","",82,null],[11,"from_bytes","","",82,null],[11,"len_params","","",82,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",82,null],[11,"decode","","",82,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"bloom","","Returns result bloom.",82,null],[11,"eq","ethcore::trace","",60,null],[11,"ne","","",60,null],[11,"clone","","",60,null],[11,"fmt","","",60,null],[11,"size","","",60,null],[11,"to_bytes","","",60,null],[11,"from_bytes","","",60,null],[11,"len_params","","",60,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",60,null],[11,"decode","","",60,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"eq","","",61,null],[11,"ne","","",61,null],[11,"clone","","",61,null],[11,"fmt","","",61,null],[11,"size","","",61,null],[11,"to_bytes","","",61,null],[11,"from_bytes","","",61,null],[11,"len_params","","",61,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",61,null],[11,"decode","","",61,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"eq","","",59,null],[11,"ne","","",59,null],[11,"clone","","",59,null],[11,"fmt","","",59,null],[11,"size","","",59,null],[11,"to_bytes","","",59,null],[11,"from_bytes","","",59,null],[11,"len_params","","",59,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",59,null],[11,"decode","","",59,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"default","","",58,{"inputs":[],"output":{"name":"vmoperation"}}],[11,"eq","","",58,null],[11,"ne","","",58,null],[11,"clone","","",58,null],[11,"fmt","","",58,null],[11,"size","","",58,null],[11,"to_bytes","","",58,null],[11,"from_bytes","","",58,null],[11,"len_params","","",58,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",58,null],[11,"decode","","",58,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"default","","",57,{"inputs":[],"output":{"name":"vmtrace"}}],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"clone","","",57,null],[11,"fmt","","",57,null],[11,"size","","",57,null],[11,"to_bytes","","",57,null],[11,"from_bytes","","",57,null],[11,"len_params","","",57,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",57,null],[11,"decode","","",57,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"fmt","","",65,null],[11,"size","","",65,null],[11,"to_bytes","","",65,null],[11,"from_bytes","","",65,null],[11,"len_params","","",65,{"inputs":[],"output":{"name":"usize"}}],[11,"clone","ethcore::evm","",156,null],[11,"eq","","",156,null],[11,"fmt","","",156,null],[11,"size","","",156,null],[11,"to_bytes","","",156,null],[11,"from_bytes","","",156,null],[11,"len_params","","",156,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",156,null],[11,"decode","","",156,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"clone","ethcore::client","",27,null],[11,"eq","","",27,null],[11,"ne","","",27,null],[11,"fmt","","",27,null],[11,"size","","",27,null],[11,"to_bytes","","",27,null],[11,"from_bytes","","",27,null],[11,"len_params","","",27,{"inputs":[],"output":{"name":"usize"}}],[11,"clone","ethcore::error","",45,null],[11,"fmt","","",45,null],[11,"eq","","",45,null],[11,"ne","","",45,null],[11,"size","","",45,null],[11,"to_bytes","","",45,null],[11,"from_bytes","","",45,null],[11,"len_params","","",45,{"inputs":[],"output":{"name":"usize"}}],[11,"fmt","","",45,null],[11,"clone","","",46,null],[11,"fmt","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"size","","",46,null],[11,"to_bytes","","",46,null],[11,"from_bytes","","",46,null],[11,"len_params","","",46,{"inputs":[],"output":{"name":"usize"}}],[11,"from","","",46,{"inputs":[{"name":"executionerror"}],"output":{"name":"self"}}],[11,"fmt","","",46,null],[11,"eq","ethcore::client","",31,null],[11,"fmt","","",31,null],[11,"size","","",31,null],[11,"to_bytes","","",31,null],[11,"from_bytes","","",31,null],[11,"len_params","","",31,{"inputs":[],"output":{"name":"usize"}}],[11,"from","","",31,{"inputs":[{"name":"queuestatus"}],"output":{"name":"self"}}],[11,"fmt","","",19,null],[11,"size","","",19,null],[11,"to_bytes","","",19,null],[11,"from_bytes","","",19,null],[11,"len_params","","",19,{"inputs":[],"output":{"name":"usize"}}],[11,"total_queue_size","","The total size of the queues.",19,null],[11,"incomplete_queue_size","","The size of the unverified and verifying queues.",19,null],[11,"is_full","","Indicates that queue is full",19,null],[11,"is_empty","","Indicates that queue is empty",19,null],[11,"size","","",26,null],[11,"to_bytes","","",26,null],[11,"from_bytes","","",26,null],[11,"len_params","","",26,{"inputs":[],"output":{"name":"usize"}}],[11,"fmt","","",30,null],[11,"clone","","",30,null],[11,"default","","",30,{"inputs":[],"output":{"name":"callanalytics"}}],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"size","","",30,null],[11,"to_bytes","","",30,null],[11,"from_bytes","","",30,null],[11,"len_params","","",30,{"inputs":[],"output":{"name":"usize"}}],[11,"eq","","",39,null],[11,"clone","","",39,null],[11,"fmt","","",39,null],[11,"from_bytes","","",39,null],[11,"to_bytes","","",39,null],[11,"clone","","",40,null],[11,"fmt","","",40,null],[11,"size","","",40,null],[11,"to_bytes","","",40,null],[11,"from_bytes","","",40,null],[11,"len_params","","",40,{"inputs":[],"output":{"name":"usize"}}],[11,"from","","",40,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"fmt","","",38,null],[11,"size","","",38,null],[11,"to_bytes","","",38,null],[11,"from_bytes","","",38,null],[11,"len_params","","",38,{"inputs":[],"output":{"name":"usize"}}],[11,"from","","",38,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"fmt","ethcore::snapshot","",120,null],[11,"clone","","",120,null],[11,"eq","","",120,null],[11,"ne","","",120,null],[11,"size","","",120,null],[11,"to_bytes","","",120,null],[11,"from_bytes","","",120,null],[11,"len_params","","",120,{"inputs":[],"output":{"name":"usize"}}],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"clone","","",118,null],[11,"fmt","","",118,null],[11,"size","","",118,null],[11,"to_bytes","","",118,null],[11,"from_bytes","","",118,null],[11,"len_params","","",118,{"inputs":[],"output":{"name":"usize"}}],[11,"into_rlp","","Encode the manifest data to rlp.",118,null],[11,"from_rlp","","Try to restore manifest data from raw bytes, interpreted as RLP.",118,null],[11,"from","ethcore::client","",32,{"inputs":[{"name":"mode"}],"output":{"name":"self"}}],[0,"transaction","ethcore","Transaction data structure.",null,null],[3,"Transaction","ethcore::transaction","A set of information describing an externally-originating message call\nor contract creation operation.",null,null],[12,"nonce","","Nonce.",173,null],[12,"gas_price","","Gas price.",173,null],[12,"gas","","Gas paid up front for transaction execution.",173,null],[12,"action","","Action, can be either call or contract create.",173,null],[12,"value","","Transfered value.",173,null],[12,"data","","Transaction data.",173,null],[3,"SignedTransaction","","Signed transaction information.",null,null],[3,"LocalizedTransaction","","Signed Transaction that is a part of canon blockchain.",null,null],[12,"signed","","Signed part.",174,null],[12,"block_number","","Block number.",174,null],[12,"block_hash","","Block hash.",174,null],[12,"transaction_index","","Transaction index within block.",174,null],[4,"Action","","Transaction action type.",null,null],[13,"Create","","Create creates new contract.",175,null],[13,"Call","","Calls contract at given address.\nIn the case of a transfer, this is the receiver&#39;s address.&#39;",175,null],[0,"ids","ethcore","Unique identifiers.",null,null],[3,"TraceId","ethcore::ids","Uniquely identifies Trace.",null,null],[12,"transaction","","Transaction",23,null],[12,"address","","Trace address within transaction.",23,null],[3,"UncleID","","Uniquely identifies Uncle.",null,null],[12,"block","","Block id.",24,null],[12,"position","","Position in block.",24,null],[4,"BlockID","","Uniquely identifies block.",null,null],[13,"Hash","","Block&#39;s sha3.\nQuerying by hash is always faster.",35,null],[13,"Number","","Block number within canon blockchain.",35,null],[13,"Earliest","","Earliest block (genesis).",35,null],[13,"Latest","","Latest mined block.",35,null],[13,"Pending","","Pending block.",35,null],[4,"TransactionID","","Uniquely identifies transaction.",null,null],[13,"Hash","","Transaction&#39;s sha3.",36,null],[13,"Location","","Block id and transaction index within this block.\nQuerying by block position is always faster.",36,null],[0,"receipt","ethcore","Receipt",null,null],[3,"Receipt","ethcore::receipt","Information describing execution of a transaction.",null,null],[12,"state_root","","The state root after executing the transaction.",176,null],[12,"gas_used","","The total gas used in the block following execution of the transaction.",176,null],[12,"log_bloom","","The OR-wide combination of all logs&#39; blooms for this transaction.",176,null],[12,"logs","","The logs stemming from this transaction.",176,null],[3,"RichReceipt","","Receipt with additional info.",null,null],[12,"transaction_hash","","Transaction hash.",177,null],[12,"transaction_index","","Transaction index.",177,null],[12,"cumulative_gas_used","","The total gas used in the block following execution of the transaction.",177,null],[12,"gas_used","","The gas used in the execution of the transaction. Note the difference of meaning to `Receipt::gas_used`.",177,null],[12,"contract_address","","Contract address.",177,null],[12,"logs","","Logs",177,null],[12,"log_bloom","","Logs bloom",177,null],[12,"state_root","","State root",177,null],[3,"LocalizedReceipt","","Receipt with additional info.",null,null],[12,"transaction_hash","","Transaction hash.",178,null],[12,"transaction_index","","Transaction index.",178,null],[12,"block_hash","","Block hash.",178,null],[12,"block_number","","Block number.",178,null],[12,"cumulative_gas_used","","The total gas used in the block following execution of the transaction.",178,null],[12,"gas_used","","The gas used in the execution of the transaction. Note the difference of meaning to `Receipt::gas_used`.",178,null],[12,"contract_address","","Contract address.",178,null],[12,"logs","","Logs",178,null],[12,"log_bloom","","Logs bloom",178,null],[12,"state_root","","State root",178,null],[0,"tree_route","ethcore","Tree route info type definition",null,null],[3,"TreeRoute","ethcore::tree_route","Represents a tree route between `from` block and `to` block:",null,null],[12,"blocks","","A vector of hashes of all blocks, ordered from `from` to `to`.",179,null],[12,"ancestor","","Best common ancestor of these blocks.",179,null],[12,"index","","An index where best common ancestor would be.",179,null],[0,"blockchain_info","ethcore","Blockhain info type definition",null,null],[3,"BlockChainInfo","ethcore::blockchain_info","Information about the blockchain gathered together.",null,null],[12,"total_difficulty","","Blockchain difficulty.",17,null],[12,"pending_total_difficulty","","Block queue difficulty.",17,null],[12,"genesis_hash","","Genesis block hash.",17,null],[12,"best_block_hash","","Best blockchain block hash.",17,null],[12,"best_block_number","","Best blockchain block number.",17,null],[12,"ancient_block_hash","","Best ancient block hash.",17,null],[12,"ancient_block_number","","Best ancient block number.",17,null],[12,"first_block_hash","","First block on the best sequence.",17,null],[12,"first_block_number","","Number of the first block on the best sequence.",17,null],[0,"log_entry","ethcore","Log entry type definition.",null,null],[3,"LogEntry","ethcore::log_entry","A record of execution for a `LOG` operation.",null,null],[12,"address","","The address of the contract executing at the point of the `LOG` operation.",180,null],[12,"topics","","The topics associated with the `LOG` operation.",180,null],[12,"data","","The data associated with the `LOG` operation.",180,null],[3,"LocalizedLogEntry","","Log localized in a blockchain.",null,null],[12,"entry","","Plain log entry.",181,null],[12,"block_hash","","Block in which this log was created.",181,null],[12,"block_number","","Block number.",181,null],[12,"transaction_hash","","Hash of transaction in which this log was created.",181,null],[12,"transaction_index","","Index of transaction within block.",181,null],[12,"log_index","","Log position in the block.",181,null],[0,"trace_types","ethcore","Types used in the public api",null,null],[0,"error","ethcore::trace_types","Trace errors.",null,null],[4,"Error","ethcore::trace_types::error","Trace evm errors.",null,null],[13,"OutOfGas","","`OutOfGas` is returned when transaction execution runs out of gas.",66,null],[13,"BadJumpDestination","","`BadJumpDestination` is returned when execution tried to move\nto position that wasn&#39;t marked with JUMPDEST instruction",66,null],[13,"BadInstruction","","`BadInstructions` is returned when given instruction is not supported",66,null],[13,"StackUnderflow","","`StackUnderflow` when there is not enough stack elements to execute instruction",66,null],[13,"OutOfStack","","When execution would exceed defined Stack Limit",66,null],[13,"Internal","","Returned on evm internal error. Should never be ignored during development.\nLikely to cause consensus issues.",66,null],[0,"filter","ethcore::trace_types","Trace filters type definitions",null,null],[3,"AddressesFilter","ethcore::trace_types::filter","Addresses filter.",null,null],[3,"Filter","","Traces filter.",null,null],[12,"range","","Block range.",63,null],[12,"from_address","","From address filter.",63,null],[12,"to_address","","To address filter.",63,null],[0,"flat","ethcore::trace_types","Flat trace module",null,null],[3,"FlatTrace","ethcore::trace_types::flat","Trace localized in vector of traces produced by a single transaction.",null,null],[12,"action","","Type of action performed by a transaction.",62,null],[12,"result","","Result of this action.",62,null],[12,"subtraces","","Number of subtraces.",62,null],[12,"trace_address","","Exact location of trace.",62,null],[3,"FlatTransactionTraces","","Represents all traces produced by a single transaction.",null,null],[3,"FlatBlockTraces","","Represents all traces produced by transactions in a single block.",null,null],[0,"trace","ethcore::trace_types","Tracing datatypes.",null,null],[3,"CallResult","ethcore::trace_types::trace","`Call` result.",null,null],[12,"gas_used","","Gas used by call.",76,null],[12,"output","","Call Output.",76,null],[3,"CreateResult","","`Create` result.",null,null],[12,"gas_used","","Gas used by create.",77,null],[12,"code","","Code of the newly created contract.",77,null],[12,"address","","Address of the newly created contract.",77,null],[3,"Call","","Description of a _call_ action, either a `CALL` operation or a message transction.",null,null],[12,"from","","The sending account.",78,null],[12,"to","","The destination account.",78,null],[12,"value","","The value transferred to the destination account.",78,null],[12,"gas","","The gas available for executing the call.",78,null],[12,"input","","The input data provided to the call.",78,null],[12,"call_type","","The type of the call.",78,null],[3,"Create","","Description of a _create_ action, either a `CREATE` operation or a create transction.",null,null],[12,"from","","The address of the creator.",79,null],[12,"value","","The value with which the new account is endowed.",79,null],[12,"gas","","The gas available for the creation init code.",79,null],[12,"init","","The init code.",79,null],[3,"Suicide","","Suicide action.",null,null],[12,"address","","Suicided address.",80,null],[12,"refund_address","","Suicided contract heir.",80,null],[12,"balance","","Balance of the contract just before suicide.",80,null],[3,"MemoryDiff","","A diff of some chunk of memory.",null,null],[12,"offset","","Offset into memory the change begins.",60,null],[12,"data","","The changed data.",60,null],[3,"StorageDiff","","A diff of some storage value.",null,null],[12,"location","","Which key in storage is changed.",61,null],[12,"value","","What the value has been changed to.",61,null],[3,"VMExecutedOperation","","A record of an executed VM operation.",null,null],[12,"gas_used","","The total gas used.",59,null],[12,"stack_push","","The stack item placed, if any.",59,null],[12,"mem_diff","","If altered, the memory delta.",59,null],[12,"store_diff","","The altered storage value, if any.",59,null],[3,"VMOperation","","A record of the execution of a single VM operation.",null,null],[12,"pc","","The program counter.",58,null],[12,"instruction","","The instruction executed.",58,null],[12,"gas_cost","","The gas cost for this instruction.",58,null],[12,"executed","","Information concerning the execution of the operation.",58,null],[3,"VMTrace","","A record of a full VM trace for a CALL/CREATE.",null,null],[12,"parent_step","","The step (i.e. index into operations) at which this trace corresponds.",57,null],[12,"code","","The code to be executed.",57,null],[12,"operations","","The operations executed.",57,null],[12,"subs","","The sub traces for each interior action performed as part of this call/create.\nThre is a 1:1 correspondance between these and a CALL/CREATE/CALLCODE/DELEGATECALL instruction.",57,null],[4,"Action","","Description of an action that we trace; will be either a call or a create.",null,null],[13,"Call","","It&#39;s a call action.",81,null],[13,"Create","","It&#39;s a create action.",81,null],[13,"Suicide","","Suicide.",81,null],[4,"Res","","The result of the performed action.",null,null],[13,"Call","","Successful call action result.",82,null],[13,"Create","","Successful create action result.",82,null],[13,"FailedCall","","Failed call.",82,null],[13,"FailedCreate","","Failed create.",82,null],[13,"None","","None",82,null],[0,"localized","ethcore::trace_types","Localized traces type definitions",null,null],[3,"LocalizedTrace","ethcore::trace_types::localized","Localized trace.",null,null],[12,"action","","Type of action performed by a transaction.",65,null],[12,"result","","Result of this action.",65,null],[12,"subtraces","","Number of subtraces.",65,null],[12,"trace_address","","Exact location of trace.",65,null],[12,"transaction_number","","Transaction number within the block.",65,null],[12,"transaction_hash","","Signed transaction hash.",65,null],[12,"block_number","","Block number.",65,null],[12,"block_hash","","Block hash.",65,null],[0,"executed","ethcore","Transaction execution format module.",null,null],[3,"Executed","ethcore::executed","Transaction execution receipt.",null,null],[12,"gas","","Gas paid up front for execution of transaction.",27,null],[12,"gas_used","","Gas used during execution of transaction.",27,null],[12,"refunded","","Gas refunded after the execution of transaction.\nTo get gas that was required up front, add `refunded` and `gas_used`.",27,null],[12,"cumulative_gas_used","","Cumulative gas used in current block so far.",27,null],[12,"logs","","Vector of logs generated by transaction.",27,null],[12,"contracts_created","","Addresses of contracts created during execution of transaction.\nOrdered from earliest creation.",27,null],[12,"output","","Transaction output.",27,null],[12,"trace","","The trace of this transaction.",27,null],[12,"vm_trace","","The VM trace of this transaction.",27,null],[12,"state_diff","","The state diff, if we traced it.",27,null],[4,"CallType","","The type of the call-like instruction.",null,null],[13,"None","","Not a CALL.",156,null],[13,"Call","","CALL.",156,null],[13,"CallCode","","CALLCODE.",156,null],[13,"DelegateCall","","DELEGATECALL.",156,null],[4,"ExecutionError","","Result of executing the transaction.",null,null],[13,"NotEnoughBaseGas","","Returned when there gas paid for transaction execution is\nlower than base gas required.",45,null],[12,"required","ethcore::executed::ExecutionError","Absolute minimum gas required.",45,null],[12,"got","","Gas provided.",45,null],[13,"BlockGasLimitReached","ethcore::executed","Returned when block (gas_used + gas) &gt; gas_limit.",45,null],[12,"gas_limit","ethcore::executed::ExecutionError","Gas limit of block for transaction.",45,null],[12,"gas_used","","Gas used in block prior to transaction.",45,null],[12,"gas","","Amount of gas in block.",45,null],[13,"InvalidNonce","ethcore::executed","Returned when transaction nonce does not match state nonce.",45,null],[12,"expected","ethcore::executed::ExecutionError","Nonce expected.",45,null],[12,"got","","Nonce found.",45,null],[13,"NotEnoughCash","ethcore::executed","Returned when cost of transaction (value + gas_price * gas) exceeds\ncurrent sender balance.",45,null],[12,"required","ethcore::executed::ExecutionError","Minimum required balance.",45,null],[12,"got","","Actual balance.",45,null],[13,"Internal","ethcore::executed","Returned when internal evm error occurs.",45,null],[13,"TransactionMalformed","","Returned when generic transaction occurs",45,null],[4,"CallError","","Result of executing the transaction.",null,null],[13,"TransactionNotFound","","Couldn&#39;t find the transaction in the chain.",46,null],[13,"StatePruned","","Couldn&#39;t find requested block&#39;s state in the chain.",46,null],[13,"Execution","","Error executing.",46,null],[6,"ExecutionResult","","Transaction execution result.",null,null],[0,"block_status","ethcore","Block status description module",null,null],[4,"BlockStatus","ethcore::block_status","General block status",null,null],[13,"InChain","","Part of the blockchain.",31,null],[13,"Queued","","Queued for import.",31,null],[13,"Bad","","Known as bad.",31,null],[13,"Unknown","","Unknown.",31,null],[0,"account_diff","ethcore","Diff between two accounts.",null,null],[3,"AccountDiff","ethcore::account_diff","Account diff.",null,null],[12,"balance","","Change in balance, allowed to be `Diff::Same`.",182,null],[12,"nonce","","Change in nonce, allowed to be `Diff::Same`.",182,null],[12,"code","","Change in code, allowed to be `Diff::Same`.",182,null],[12,"storage","","Change in storage, values are not allowed to be `Diff::Same`.",182,null],[4,"Diff","","Diff type for specifying a change (or not).",null,null],[13,"Same","","Both sides are the same.",183,null],[13,"Born","","Left (pre, source) side doesn&#39;t include value, right side (post, destination) does.",183,null],[13,"Changed","","Both sides include data; it chaged value between them.",183,null],[13,"Died","","Left (pre, source) side does include value, right side (post, destination) does not.",183,null],[4,"Existance","","Change in existance type.",null,null],[13,"Born","","Item came into existance.",184,null],[13,"Alive","","Item stayed in existance.",184,null],[13,"Died","","Item went out of existance.",184,null],[0,"state_diff","ethcore","State diff module.",null,null],[3,"StateDiff","ethcore::state_diff","Expression for the delta between two system states. Encoded the\ndelta of every altered account.",null,null],[12,"raw","","Raw diff key-value",185,null],[0,"verification_queue_info","ethcore","Verification queue info types",null,null],[3,"VerificationQueueInfo","ethcore::verification_queue_info","Verification queue status",null,null],[12,"unverified_queue_size","","Number of queued items pending verification",19,null],[12,"verified_queue_size","","Number of verified queued items pending import",19,null],[12,"verifying_queue_size","","Number of items being verified",19,null],[12,"max_queue_size","","Configured maximum number of items in the queue",19,null],[12,"max_mem_use","","Configured maximum number of bytes to use",19,null],[12,"mem_used","","Heap memory used in bytes",19,null],[0,"filter","ethcore","Blockchain filter",null,null],[3,"Filter","ethcore::filter","Blockchain Filter.",null,null],[12,"from_block","","Blockchain will be searched from this block.",186,null],[12,"to_block","","Till this block.",186,null],[12,"address","","Search addresses.",186,null],[12,"topics","","Search topics.",186,null],[12,"limit","","Logs limit",186,null],[0,"trace_filter","ethcore","Trace filter related types",null,null],[3,"Filter","ethcore::trace_filter","Easy to use trace filter.",null,null],[12,"range","","Range of filtering.",26,null],[12,"from_address","","From address.",26,null],[12,"to_address","","To address.",26,null],[0,"call_analytics","ethcore","Call analytics related types",null,null],[3,"CallAnalytics","ethcore::call_analytics","Options concerning what analytics we run on the call.",null,null],[12,"transaction_tracing","","Make a transaction trace.",30,null],[12,"vm_tracing","","Make a VM trace.",30,null],[12,"state_diffing","","Make a diff.",30,null],[0,"transaction_import","ethcore","Transaction import result related types",null,null],[4,"TransactionImportResult","ethcore::transaction_import","Represents the result of importing transaction.",null,null],[13,"Current","","Transaction was imported to current queue.",39,null],[13,"Future","","Transaction was imported to future queue.",39,null],[4,"TransactionImportError","","Api-level error for transaction import",null,null],[13,"Transaction","","Transaction error",40,null],[13,"Other","","Other error",40,null],[0,"block_import_error","ethcore","Block import error related types",null,null],[4,"BlockImportError","ethcore::block_import_error","Error dedicated to import block function",null,null],[13,"Import","","Import error",38,null],[13,"Block","","Block error",38,null],[13,"Other","","Other error",38,null],[0,"restoration_status","ethcore","Restoration status type definition",null,null],[4,"RestorationStatus","ethcore::restoration_status","Statuses for restorations.",null,null],[13,"Inactive","","No restoration.",120,null],[13,"Ongoing","","Ongoing restoration.",120,null],[12,"state_chunks","ethcore::restoration_status::RestorationStatus","Total number of state chunks.",120,null],[12,"block_chunks","","Total number of block chunks.",120,null],[12,"state_chunks_done","","Number of state chunks completed.",120,null],[12,"block_chunks_done","","Number of block chunks completed.",120,null],[13,"Failed","ethcore::restoration_status","Failed restoration.",120,null],[0,"snapshot_manifest","ethcore","Snapshot manifest type definition",null,null],[3,"ManifestData","ethcore::snapshot_manifest","Manifest data.",null,null],[12,"state_hashes","","List of state chunk hashes.",118,null],[12,"block_hashes","","List of block chunk hashes.",118,null],[12,"state_root","","The final, expected state root.",118,null],[12,"block_number","","Block number this snapshot was taken at.",118,null],[12,"block_hash","","Block hash this snapshot was taken at.",118,null],[0,"mode","ethcore","Mode type",null,null],[3,"Duration","ethcore::mode","A duration type to represent a span of time, typically used for system\ntimeouts.",null,null],[4,"Mode","","IPC-capable shadow-type for client::config::Mode",null,null],[13,"Off","","Same as ClientMode::Off.",187,null],[13,"Dark","","Same as ClientMode::Dark; values in seconds.",187,null],[13,"Passive","","Same as ClientMode::Passive; values in seconds.",187,null],[13,"Active","","Same as ClientMode::Active.",187,null],[14,"evm_test","ethcore","Create tests by injecting different VM factories",null,null],[14,"evm_test_ignore","","Create ignored tests by injecting different VM factories",null,null],[11,"r","ethcore::account_provider","Get a slice into the &#39;r&#39; portion of the data.",188,null],[11,"s","","Get a slice into the &#39;s&#39; portion of the data.",188,null],[11,"v","","Get the recovery byte.",188,null],[11,"from_rsv","","Create a signature object from the sig.",188,{"inputs":[{"name":"h256"},{"name":"h256"},{"name":"u8"}],"output":{"name":"signature"}}],[11,"is_low_s","","Check if this is a &quot;low&quot; signature.",188,null],[11,"is_valid","","Check if each component of the signature is in range.",188,null],[11,"deserialize","ethcore::mode","",189,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"serialize","","",189,null],[11,"eq","","",189,null],[11,"ne","","",189,null],[11,"mul_assign","","",189,null],[11,"hash","","",189,null],[11,"div","","",189,null],[11,"sub_assign","","",189,null],[11,"mul","","",189,null],[11,"partial_cmp","","",189,null],[11,"lt","","",189,null],[11,"le","","",189,null],[11,"gt","","",189,null],[11,"ge","","",189,null],[11,"clone","","",189,null],[11,"add_assign","","",189,null],[11,"div_assign","","",189,null],[11,"cmp","","",189,null],[11,"add","","",189,null],[11,"fmt","","",189,null],[11,"sub","","",189,null],[11,"into","ethcore::account_provider","",188,null],[11,"deref","","",188,null],[11,"fmt","","",188,null],[11,"default","","",188,{"inputs":[],"output":{"name":"signature"}}],[11,"eq","","",188,null],[11,"from_str","","",188,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",188,null],[11,"from","","",188,null],[11,"from","","",188,{"inputs":[{"name":"h520"}],"output":{"name":"signature"}}],[11,"deref_mut","","",188,null],[11,"new","ethcore::mode","Creates a new `Duration` from the specified number of seconds and\nadditional nanosecond precision.",189,{"inputs":[{"name":"u64"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"from_secs","","Creates a new `Duration` from the specified number of seconds.",189,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"from_millis","","Creates a new `Duration` from the specified number of milliseconds.",189,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"as_secs","","Returns the number of whole seconds represented by this duration.",189,null],[11,"subsec_nanos","","Returns the nanosecond precision represented by this duration.",189,null],[11,"checked_add","","Checked duration addition. Computes `self + other`, returning `None`\nif overflow occurred.",189,null],[11,"checked_sub","","Checked duration subtraction. Computes `self + other`, returning `None`\nif the result would be negative or if underflow occurred.",189,null],[11,"checked_mul","","Checked duration multiplication. Computes `self * other`, returning\n`None` if underflow or overflow occurred.",189,null],[11,"checked_div","","Checked duration division. Computes `self / other`, returning `None`\nif `other == 0` or the operation results in underflow or overflow.",189,null],[11,"keep_alive","ethcore::client","Should be called by any external-facing interface when actively using the client.\nTo minimise chatter, there&#39;s no need to call more than once every 30s.",43,null],[11,"latest_nonce","","Get address nonce at the latest block&#39;s state.",43,null],[11,"latest_code","","Get address code at the latest block&#39;s state.",43,null],[11,"latest_balance","","Get address balance at the latest block&#39;s state.",43,null],[11,"latest_storage_at","","Get value of the storage at given position at the latest block&#39;s state.",43,null],[11,"gas_price_corpus","","Sorted list of transaction gas prices from at least last sample_size blocks.",43,null],[11,"gas_price_median","","Calculate median gas price from recent blocks if they have any transactions.",43,null],[11,"gas_price_histogram","","Get the gas price distribution based on recent blocks if they have any transactions.",43,null],[11,"nonce","ethcore::header","Get the none field of the header.",53,null],[11,"mix_hash","","Get the mix hash field of the header.",53,null],[11,"set_nonce_and_mix_hash","","Set the nonce and mix hash fields of the header.",53,null],[11,"eq","ethcore::transaction","",175,null],[11,"ne","","",175,null],[11,"clone","","",175,null],[11,"fmt","","",175,null],[11,"size","","",175,null],[11,"to_bytes","","",175,null],[11,"from_bytes","","",175,null],[11,"len_params","","",175,{"inputs":[],"output":{"name":"usize"}}],[11,"default","","",175,{"inputs":[],"output":{"name":"action"}}],[11,"decode","","",175,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"eq","","",173,null],[11,"ne","","",173,null],[11,"clone","","",173,null],[11,"fmt","","",173,null],[11,"default","","",173,{"inputs":[],"output":{"name":"transaction"}}],[11,"size","","",173,null],[11,"to_bytes","","",173,null],[11,"from_bytes","","",173,null],[11,"len_params","","",173,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append_unsigned_transaction","","Append object with a without signature into RLP stream",173,null],[11,"heap_size_of_children","","",173,null],[11,"from","","",190,{"inputs":[{"name":"transaction"}],"output":{"name":"self"}}],[11,"from","","",190,{"inputs":[{"name":"transaction"}],"output":{"name":"self"}}],[11,"hash","","The message hash of the transaction.",173,null],[11,"sign","","Signs the transaction as coming from `sender`.",173,null],[11,"with_signature","","Signs the transaction with signature.",173,null],[11,"fake_sign","","Specify the sender; this won&#39;t survive the serialize/deserialize process, but can be cloned.",173,null],[11,"gas_required_for","","Get the transaction cost in gas for the given params.",173,null],[11,"gas_required","","Get the transaction cost in gas for this transaction.",173,null],[11,"clone","","",190,null],[11,"fmt","","",190,null],[11,"size","","",190,null],[11,"to_bytes","","",190,null],[11,"from_bytes","","",190,null],[11,"len_params","","",190,{"inputs":[],"output":{"name":"usize"}}],[11,"eq","","",190,null],[11,"deref","","",190,null],[11,"decode","","",190,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"rlp_append","","",190,null],[11,"heap_size_of_children","","",190,null],[11,"hash","","Get the hash of this header (sha3 of the RLP).",190,null],[11,"standard_v","","0 if `v` would have been 27 under &quot;Electrum&quot; notation, 1 if 28 or 4 if invalid.",190,null],[11,"network_id","","The network ID, or `None` if this is a global transaction.",190,null],[11,"signature","","Construct a signature object from the sig.",190,null],[11,"check_low_s","","Checks whether the signature has a low &#39;s&#39; value.",190,null],[11,"sender","","Returns transaction sender.",190,null],[11,"public_key","","Returns the public key of the sender.",190,null],[11,"eq","","",174,null],[11,"ne","","",174,null],[11,"fmt","","",174,null],[11,"size","","",174,null],[11,"to_bytes","","",174,null],[11,"from_bytes","","",174,null],[11,"len_params","","",174,{"inputs":[],"output":{"name":"usize"}}],[11,"deref","","",174,null],[11,"clone","ethcore::receipt","",176,null],[11,"fmt","","",176,null],[11,"default","","",176,{"inputs":[],"output":{"name":"receipt"}}],[11,"size","","",176,null],[11,"to_bytes","","",176,null],[11,"from_bytes","","",176,null],[11,"len_params","","",176,{"inputs":[],"output":{"name":"usize"}}],[11,"new","","Create a new receipt.",176,{"inputs":[{"name":"h256"},{"name":"u256"},{"name":"vec"}],"output":{"name":"receipt"}}],[11,"rlp_append","","",176,null],[11,"decode","","",176,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"heap_size_of_children","","",176,null],[11,"eq","","",177,null],[11,"ne","","",177,null],[11,"clone","","",177,null],[11,"fmt","","",177,null],[11,"size","","",177,null],[11,"to_bytes","","",177,null],[11,"from_bytes","","",177,null],[11,"len_params","","",177,{"inputs":[],"output":{"name":"usize"}}],[11,"eq","","",178,null],[11,"ne","","",178,null],[11,"clone","","",178,null],[11,"fmt","","",178,null],[11,"size","","",178,null],[11,"to_bytes","","",178,null],[11,"from_bytes","","",178,null],[11,"len_params","","",178,{"inputs":[],"output":{"name":"usize"}}],[11,"fmt","ethcore::tree_route","",179,null],[11,"size","","",179,null],[11,"to_bytes","","",179,null],[11,"from_bytes","","",179,null],[11,"len_params","","",179,{"inputs":[],"output":{"name":"usize"}}],[11,"eq","ethcore::log_entry","",180,null],[11,"ne","","",180,null],[11,"clone","","",180,null],[11,"fmt","","",180,null],[11,"default","","",180,{"inputs":[],"output":{"name":"logentry"}}],[11,"size","","",180,null],[11,"to_bytes","","",180,null],[11,"from_bytes","","",180,null],[11,"len_params","","",180,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",180,null],[11,"decode","","",180,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"heap_size_of_children","","",180,null],[11,"bloom","","Calculates the bloom of this log entry.",180,null],[11,"from","","",180,{"inputs":[{"name":"log"}],"output":{"name":"self"}}],[11,"clone","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"fmt","","",181,null],[11,"default","","",181,{"inputs":[],"output":{"name":"localizedlogentry"}}],[11,"size","","",181,null],[11,"to_bytes","","",181,null],[11,"from_bytes","","",181,null],[11,"len_params","","",181,{"inputs":[],"output":{"name":"usize"}}],[11,"deref","","",181,null],[11,"clone","ethcore::account_diff","",183,null],[11,"eq","","",183,null],[11,"ne","","",183,null],[11,"fmt","","",183,null],[11,"size","","",183,null],[11,"to_bytes","","",183,null],[11,"from_bytes","","",183,null],[11,"len_params","","",183,{"inputs":[],"output":{"name":"usize"}}],[11,"new","","Construct new object with given `pre` and `post`.",183,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"self"}}],[11,"pre","","Get the before value, if there is one.",183,null],[11,"post","","Get the after value, if there is one.",183,null],[11,"is_same","","Determine whether there was a change or not.",183,null],[11,"clone","","",182,null],[11,"eq","","",182,null],[11,"ne","","",182,null],[11,"fmt","","",182,null],[11,"size","","",182,null],[11,"to_bytes","","",182,null],[11,"from_bytes","","",182,null],[11,"len_params","","",182,{"inputs":[],"output":{"name":"usize"}}],[11,"clone","","",184,null],[11,"eq","","",184,null],[11,"fmt","","",184,null],[11,"size","","",184,null],[11,"to_bytes","","",184,null],[11,"from_bytes","","",184,null],[11,"len_params","","",184,{"inputs":[],"output":{"name":"usize"}}],[11,"fmt","","",184,null],[11,"existance","","Get `Existance` projection.",182,null],[11,"fmt","","",182,null],[11,"clone","ethcore::state_diff","",185,null],[11,"eq","","",185,null],[11,"ne","","",185,null],[11,"fmt","","",185,null],[11,"size","","",185,null],[11,"to_bytes","","",185,null],[11,"from_bytes","","",185,null],[11,"len_params","","",185,{"inputs":[],"output":{"name":"usize"}}],[11,"get","","Get the actual data.",185,null],[11,"fmt","","",185,null],[11,"deref","","",185,null],[11,"eq","ethcore::filter","",186,null],[11,"ne","","",186,null],[11,"fmt","","",186,null],[11,"size","","",186,null],[11,"to_bytes","","",186,null],[11,"from_bytes","","",186,null],[11,"len_params","","",186,{"inputs":[],"output":{"name":"usize"}}],[11,"clone","","",186,null],[11,"bloom_possibilities","","Returns combinations of each address and topic.",186,null],[11,"matches","","Returns true if given log entry matches filter.",186,null],[11,"fmt","ethcore::mode","",187,null],[11,"clone","","",187,null],[11,"size","","",187,null],[11,"to_bytes","","",187,null],[11,"from_bytes","","",187,null],[11,"len_params","","",187,{"inputs":[],"output":{"name":"usize"}}],[11,"from","","",187,{"inputs":[{"name":"clientmode"}],"output":{"name":"self"}}]],"paths":[[4,"Error"],[3,"AccountProvider"],[3,"NullEngine"],[3,"InstantSeal"],[3,"BasicAuthority"],[3,"AuthorityRound"],[8,"Engine"],[3,"Block"],[3,"BlockRefMut"],[3,"BlockRef"],[8,"IsBlock"],[8,"Drain"],[3,"ExecutedBlock"],[3,"ClosedBlock"],[3,"LockedBlock"],[3,"OpenBlock"],[3,"SealedBlock"],[3,"BlockChainInfo"],[3,"BlockChainCacheSize"],[3,"BlockQueueInfo"],[3,"ClientReport"],[3,"ClientConfig"],[3,"Config"],[3,"TraceId"],[3,"UncleID"],[3,"TestBlockChainClient"],[3,"TraceFilter"],[3,"Executed"],[3,"TransactOptions"],[3,"EnvInfo"],[3,"CallAnalytics"],[4,"BlockStatus"],[4,"Mode"],[4,"DatabaseCompactionProfile"],[4,"Error"],[4,"BlockID"],[4,"TransactionID"],[4,"EachBlockWith"],[4,"BlockImportError"],[4,"TransactionImportResult"],[4,"TransactionImportError"],[3,"Client"],[8,"ChainNotify"],[8,"BlockChainClient"],[8,"MiningBlockChainClient"],[4,"ExecutionError"],[4,"CallError"],[4,"TransactionError"],[4,"BlockError"],[4,"ImportError"],[4,"Error"],[3,"EthashParams"],[3,"Ethash"],[3,"Header"],[4,"ClientIoMessage"],[3,"ClientService"],[3,"Config"],[3,"VMTrace"],[3,"VMOperation"],[3,"VMExecutedOperation"],[3,"MemoryDiff"],[3,"StorageDiff"],[3,"FlatTrace"],[3,"Filter"],[3,"ImportRequest"],[3,"LocalizedTrace"],[4,"TraceError"],[4,"Error"],[3,"TraceDB"],[3,"ExecutiveTracer"],[3,"ExecutiveVMTracer"],[3,"NoopTracer"],[3,"NoopVMTracer"],[3,"AddressesFilter"],[3,"FlatTransactionTraces"],[3,"FlatBlockTraces"],[3,"CallResult"],[3,"CreateResult"],[3,"Call"],[3,"Create"],[3,"Suicide"],[4,"Action"],[4,"Res"],[8,"Tracer"],[8,"VMTracer"],[8,"DatabaseExtras"],[8,"Database"],[3,"Genesis"],[3,"CommonParams"],[3,"Spec"],[3,"BlockView"],[3,"HeaderView"],[3,"TransactionView"],[3,"BodyView"],[3,"PodState"],[4,"Extract"],[3,"ArchiveV7"],[3,"OverlayRecentV7"],[3,"V8"],[3,"ToV6"],[3,"ToV9"],[3,"ToV10"],[3,"Miner"],[3,"MinerOptions"],[3,"GasPriceCalibratorOptions"],[3,"AccountDetails"],[3,"MinerStatus"],[4,"Banning"],[4,"PendingSet"],[4,"GasPricer"],[4,"GasLimit"],[4,"PrioritizationStrategy"],[4,"TransactionOrigin"],[4,"LocalTransactionStatus"],[3,"ExternalMiner"],[3,"TransactionQueue"],[8,"ExternalMinerService"],[8,"MinerService"],[3,"ManifestData"],[4,"Error"],[4,"RestorationStatus"],[8,"SnapshotWriter"],[8,"SnapshotReader"],[3,"PackedWriter"],[3,"LooseWriter"],[3,"PackedReader"],[3,"LooseReader"],[3,"ServiceParams"],[8,"DatabaseRestore"],[3,"Service"],[3,"Watcher"],[8,"SnapshotService"],[3,"Progress"],[3,"StateRebuilder"],[3,"BlockRebuilder"],[3,"ActionParams"],[4,"ActionValue"],[4,"CacheUpdatePolicy"],[8,"Cache"],[8,"Key"],[8,"Writable"],[8,"Readable"],[4,"VerifierType"],[3,"PreverifiedBlock"],[8,"Verifier"],[3,"Config"],[4,"Status"],[3,"Blocks"],[3,"Unverified"],[3,"Headers"],[8,"HasHash"],[8,"Kind"],[3,"Verifying"],[3,"VerificationQueue"],[3,"CanonVerifier"],[3,"NoopVerifier"],[4,"CallType"],[4,"ContractCreateResult"],[4,"MessageCallResult"],[8,"Ext"],[4,"Error"],[4,"GasLeft"],[8,"Finalize"],[8,"CostType"],[8,"Evm"],[6,"Result"],[3,"SharedCache"],[3,"Interpreter"],[4,"VMType"],[3,"Factory"],[3,"Schedule"],[3,"Executive"],[6,"BlockNumber"],[3,"Transaction"],[3,"LocalizedTransaction"],[4,"Action"],[3,"Receipt"],[3,"RichReceipt"],[3,"LocalizedReceipt"],[3,"TreeRoute"],[3,"LogEntry"],[3,"LocalizedLogEntry"],[3,"AccountDiff"],[4,"Diff"],[4,"Existance"],[3,"StateDiff"],[3,"Filter"],[4,"Mode"],[3,"Signature"],[3,"Duration"],[3,"SignedTransaction"]]};
searchIndex["ethcore_ipc_tests"] = {"doc":"","items":[[0,"service","ethcore_ipc_tests","",null,null],[3,"Service","ethcore_ipc_tests::service","",null,null],[12,"commits","","",0,null],[12,"rollbacks","","",0,null],[3,"CustomData","","",null,null],[12,"a","","",1,null],[12,"b","","",1,null],[3,"ServiceClient","","",null,null],[11,"size","","",1,null],[11,"to_bytes","","",1,null],[11,"from_bytes","","",1,null],[11,"len_params","","",1,{"inputs":[],"output":{"name":"usize"}}],[11,"rollback","","",0,null],[11,"push_custom","","",0,null],[11,"void","","",0,null],[11,"commit","","",2,null],[11,"rollback","","",2,null],[11,"push_custom","","",2,null],[11,"void","","",2,null],[11,"handshake","","",2,null],[11,"init","","",2,{"inputs":[{"name":"s"}],"output":{"name":"serviceclient"}}],[11,"dispatch","","",0,null],[11,"dispatch_buf","","",0,null],[11,"new","","",0,{"inputs":[],"output":{"name":"service"}}]],"paths":[[3,"Service"],[3,"CustomData"],[3,"ServiceClient"]]};
searchIndex["ethcore_ipc"] = {"doc":"IPC RPC interface","items":[[0,"interface","ethcore_ipc","IPC RPC interface",null,null],[3,"Handshake","ethcore_ipc::interface","Handshake for client and server to negotiate api/protocol version",null,null],[12,"protocol_version","","",0,null],[12,"api_version","","",0,null],[4,"Error","","Error in dispatching or invoking methods via IPC",null,null],[13,"UnkownSystemCall","","",1,null],[13,"ClientUnsupported","","",1,null],[13,"RemoteServiceUnsupported","","",1,null],[13,"HandshakeFailed","","",1,null],[5,"invoke","","serializes method invocation (method_num and parameters) to the stream specified by `w`",null,{"inputs":[{"name":"u16"},{"name":"option"},{"name":"w"}],"output":null}],[8,"IpcConfig","","Allows to configure custom version and custom handshake response for\nipc host",null,null],[11,"api_version","","Current service api version\nShould be increased if any of the methods changes signature",2,{"inputs":[],"output":{"name":"version"}}],[11,"protocol_version","","Current ipc protocol version\nShould be increased only if signature of system methods changes",2,{"inputs":[],"output":{"name":"version"}}],[11,"handshake","","Default handshake requires exact versions match",2,{"inputs":[{"name":"handshake"}],"output":{"name":"bool"}}],[8,"IpcInterface","","Allows implementor to be attached to generic worker and dispatch rpc requests\nover IPC",null,null],[10,"dispatch","","reads the message from io, dispatches the call and returns serialized result",3,null],[10,"dispatch_buf","","deserializes the payload from buffer, dispatches invoke and returns serialized result\n(for non-blocking io)",3,null],[8,"IpcSocket","","IpcSocket, read/write generalization",null,null],[8,"WithSocket","","Basically something that needs only socket to be spawned",null,null],[10,"init","","",4,{"inputs":[{"name":"s"}],"output":{"name":"self"}}],[11,"fmt","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"clone","","",0,null],[11,"fmt","","",1,null],[0,"binary","ethcore_ipc","Binary representation of types",null,null],[3,"BinaryConvertError","ethcore_ipc::binary","",null,null],[3,"BinHandshake","","Fixed-sized version of Handshake struct",null,null],[3,"BinVersion","","Shorten version of semver Version without `pre` and `build` information",null,null],[12,"major","","",5,null],[12,"minor","","",5,null],[12,"patch","","",5,null],[4,"BinaryConvertErrorKind","","",null,null],[13,"SizeMismatch","","",6,null],[12,"expected","ethcore_ipc::binary::BinaryConvertErrorKind","",6,null],[12,"found","","",6,null],[13,"TargetPayloadEmpty","ethcore_ipc::binary","",6,null],[13,"UnexpectedVariant","","",6,null],[13,"MissingLengthValue","","",6,null],[13,"InconsistentBoundaries","","",6,null],[13,"NotSupported","","",6,null],[4,"BinaryError","","",null,null],[13,"Serialization","","",7,null],[13,"Io","","",7,null],[5,"deserialize_from","","",null,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[5,"deserialize","","",null,null],[5,"serialize_into","","",null,{"inputs":[{"name":"t"},{"name":"w"}],"output":{"name":"result"}}],[5,"serialize","","",null,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[8,"BinaryConvertable","","",null,null],[11,"size","","",8,null],[10,"to_bytes","","",8,null],[10,"from_bytes","","",8,null],[11,"from_empty_bytes","","",8,{"inputs":[],"output":{"name":"result"}}],[11,"len_params","","",8,{"inputs":[],"output":{"name":"usize"}}],[11,"fmt","","",6,null],[11,"fmt","","",9,null],[11,"size","","",9,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"binaryconverterror"}}],[11,"empty","","",9,{"inputs":[],"output":{"name":"binaryconverterror"}}],[11,"variant","","",9,{"inputs":[{"name":"u8"}],"output":{"name":"binaryconverterror"}}],[11,"length","","",9,{"inputs":[],"output":{"name":"binaryconverterror"}}],[11,"boundaries","","",9,{"inputs":[],"output":{"name":"binaryconverterror"}}],[11,"not_supported","","",9,{"inputs":[],"output":{"name":"binaryconverterror"}}],[11,"named","","",9,null],[11,"fmt","","",7,null],[11,"from","","",7,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",7,{"inputs":[{"name":"binaryconverterror"}],"output":{"name":"self"}}],[11,"clone","","",10,null],[11,"fmt","","",10,null],[11,"eq","","",10,null],[11,"ne","","",10,null],[11,"clone","","",5,null],[11,"fmt","","",5,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"from","","",10,{"inputs":[{"name":"handshake"}],"output":{"name":"self"}}],[11,"to_semver","","",10,null],[11,"to_semver","","",5,null],[11,"from","","",5,{"inputs":[{"name":"version"}],"output":{"name":"self"}}],[11,"from_bytes","","",10,null],[11,"to_bytes","","",10,null],[14,"binary_fixed_size","ethcore_ipc","",null,null]],"paths":[[3,"Handshake"],[4,"Error"],[8,"IpcConfig"],[8,"IpcInterface"],[8,"WithSocket"],[3,"BinVersion"],[4,"BinaryConvertErrorKind"],[4,"BinaryError"],[8,"BinaryConvertable"],[3,"BinaryConvertError"],[3,"BinHandshake"]]};
searchIndex["ethcore_util"] = {"doc":"Ethcore-util library","items":[[3,"PerfTimer","ethcore_util","Performance timer with logging. Starts measuring time in the constructor, prints\nelapsed time in the destructor or when `stop` is called.",null,null],[0,"bloom","","Bloom operations.",null,null],[5,"log2","ethcore_util::bloom","Returns log2.",null,{"inputs":[{"name":"usize"}],"output":{"name":"u32"}}],[8,"Bloomable","","Bloom operations.",null,null],[10,"shift_bloomed","","When interpreting self as a bloom output, augment (bit-wise OR) with the a bloomed version of `b`.",0,null],[11,"with_bloomed","","Same as `shift_bloomed` except that `self` is consumed and a new value returned.",0,null],[10,"from_bloomed","","Construct new instance equal to the bloomed value of `b`.",0,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[10,"bloom_part","","Bloom the current value using the bloom parameter `m`.",0,null],[10,"contains_bloomed","","Check to see whether this hash, interpreted as a bloom, contains the value `b` when bloomed.",0,null],[0,"standard","ethcore_util","Std lib global reexports.",null,null],[0,"io","ethcore_util::standard","Traits, helpers, and type definitions for core I/O functionality.",null,null],[0,"prelude","ethcore_util::standard::io","The I/O Prelude",null,null],[8,"Write","ethcore_util::standard::io::prelude","A trait for objects which are byte-oriented sinks.",null,null],[10,"write","","Write a buffer into this object, returning how many bytes were written.",1,null],[10,"flush","","Flush this output stream, ensuring that all intermediately buffered\ncontents reach their destination.",1,null],[11,"write_all","","Attempts to write an entire buffer into this write.",1,null],[11,"write_fmt","","Writes a formatted string into this writer, returning any error\nencountered.",1,null],[11,"by_ref","","Creates a &quot;by reference&quot; adaptor for this instance of `Write`.",1,null],[8,"Read","","The `Read` trait allows for reading bytes from a source.",null,null],[10,"read","","Pull some bytes from this source into the specified buffer, returning\nhow many bytes were read.",2,null],[11,"read_to_end","","Read all bytes until EOF in this source, placing them into `buf`.",2,null],[11,"read_to_string","","Read all bytes until EOF in this source, placing them into `buf`.",2,null],[11,"read_exact","","Read the exact number of bytes required to fill `buf`.",2,null],[11,"by_ref","","Creates a &quot;by reference&quot; adaptor for this instance of `Read`.",2,null],[11,"bytes","","Transforms this `Read` instance to an `Iterator` over its bytes.",2,null],[11,"chars","","Transforms this `Read` instance to an `Iterator` over `char`s.",2,null],[11,"chain","","Creates an adaptor which will chain this stream with another.",2,null],[11,"take","","Creates an adaptor which will read at most `limit` bytes from it.",2,null],[8,"Seek","","The `Seek` trait provides a cursor which can be moved within a stream of\nbytes.",null,null],[10,"seek","","Seek to an offset, in bytes, in a stream.",3,null],[8,"BufRead","","A `BufRead` is a type of `Read`er which has an internal buffer, allowing it\nto perform extra ways of reading.",null,null],[10,"fill_buf","","Fills the internal buffer of this object, returning the buffer contents.",4,null],[10,"consume","","Tells this buffer that `amt` bytes have been consumed from the buffer,\nso they should no longer be returned in calls to `read`.",4,null],[11,"read_until","","Read all bytes into `buf` until the delimiter `byte` is reached.",4,null],[11,"read_line","","Read all bytes until a newline (the 0xA byte) is reached, and append\nthem to the provided buffer.",4,null],[11,"split","","Returns an iterator over the contents of this reader split on the byte\n`byte`.",4,null],[11,"lines","","Returns an iterator over the lines of this reader.",4,null],[8,"Read","ethcore_util::standard::io","The `Read` trait allows for reading bytes from a source.",null,null],[10,"read","","Pull some bytes from this source into the specified buffer, returning\nhow many bytes were read.",2,null],[11,"read_to_end","","Read all bytes until EOF in this source, placing them into `buf`.",2,null],[11,"read_to_string","","Read all bytes until EOF in this source, placing them into `buf`.",2,null],[11,"read_exact","","Read the exact number of bytes required to fill `buf`.",2,null],[11,"by_ref","","Creates a &quot;by reference&quot; adaptor for this instance of `Read`.",2,null],[11,"bytes","","Transforms this `Read` instance to an `Iterator` over its bytes.",2,null],[11,"chars","","Transforms this `Read` instance to an `Iterator` over `char`s.",2,null],[11,"chain","","Creates an adaptor which will chain this stream with another.",2,null],[11,"take","","Creates an adaptor which will read at most `limit` bytes from it.",2,null],[8,"Write","","A trait for objects which are byte-oriented sinks.",null,null],[10,"write","","Write a buffer into this object, returning how many bytes were written.",1,null],[10,"flush","","Flush this output stream, ensuring that all intermediately buffered\ncontents reach their destination.",1,null],[11,"write_all","","Attempts to write an entire buffer into this write.",1,null],[11,"write_fmt","","Writes a formatted string into this writer, returning any error\nencountered.",1,null],[11,"by_ref","","Creates a &quot;by reference&quot; adaptor for this instance of `Write`.",1,null],[8,"Seek","","The `Seek` trait provides a cursor which can be moved within a stream of\nbytes.",null,null],[10,"seek","","Seek to an offset, in bytes, in a stream.",3,null],[4,"SeekFrom","","Enumeration of possible methods to seek within an I/O object.",null,null],[13,"Start","","Set the offset to the provided number of bytes.",5,null],[13,"End","","Set the offset to the size of this object plus the specified number of\nbytes.",5,null],[13,"Current","","Set the offset to the current position plus the specified number of\nbytes.",5,null],[8,"BufRead","","A `BufRead` is a type of `Read`er which has an internal buffer, allowing it\nto perform extra ways of reading.",null,null],[10,"fill_buf","","Fills the internal buffer of this object, returning the buffer contents.",4,null],[10,"consume","","Tells this buffer that `amt` bytes have been consumed from the buffer,\nso they should no longer be returned in calls to `read`.",4,null],[11,"read_until","","Read all bytes into `buf` until the delimiter `byte` is reached.",4,null],[11,"read_line","","Read all bytes until a newline (the 0xA byte) is reached, and append\nthem to the provided buffer.",4,null],[11,"split","","Returns an iterator over the contents of this reader split on the byte\n`byte`.",4,null],[11,"lines","","Returns an iterator over the lines of this reader.",4,null],[3,"Chain","","Adaptor to chain together two readers.",null,null],[3,"Take","","Reader adaptor which limits the bytes read from an underlying reader.",null,null],[3,"Bytes","","An iterator over `u8` values of a reader.",null,null],[3,"Chars","","An iterator over the `char`s of a reader.",null,null],[4,"CharsError","","An enumeration of possible errors that can be generated from the `Chars`\nadapter.",null,null],[13,"NotUtf8","","Variant representing that the underlying stream was read successfully\nbut it did not contain valid utf8 data.",6,null],[13,"Other","","Variant representing that an I/O error occurred.",6,null],[3,"Split","","An iterator over the contents of an instance of `BufRead` split on a\nparticular byte.",null,null],[3,"Lines","","An iterator over the lines of an instance of `BufRead`.",null,null],[3,"IntoInnerError","","An error returned by `into_inner` which combines an error that\nhappened while writing out the buffer, and the buffered writer object\nwhich may be used to recover from the condition.",null,null],[3,"Cursor","","A `Cursor` wraps another type and provides it with a\n[`Seek`](trait.Seek.html) implementation.",null,null],[6,"Result","","A specialized [`Result`](../result/enum.Result.html) type for I/O\noperations.",null,null],[4,"ErrorKind","","A list specifying general categories of I/O error.",null,null],[13,"NotFound","","An entity was not found, often a file.",7,null],[13,"PermissionDenied","","The operation lacked the necessary privileges to complete.",7,null],[13,"ConnectionRefused","","The connection was refused by the remote server.",7,null],[13,"ConnectionReset","","The connection was reset by the remote server.",7,null],[13,"ConnectionAborted","","The connection was aborted (terminated) by the remote server.",7,null],[13,"NotConnected","","The network operation failed because it was not connected yet.",7,null],[13,"AddrInUse","","A socket address could not be bound because the address is already in\nuse elsewhere.",7,null],[13,"AddrNotAvailable","","A nonexistent interface was requested or the requested address was not\nlocal.",7,null],[13,"BrokenPipe","","The operation failed because a pipe was closed.",7,null],[13,"AlreadyExists","","An entity already exists, often a file.",7,null],[13,"WouldBlock","","The operation needs to block to complete, but the blocking operation was\nrequested to not occur.",7,null],[13,"InvalidInput","","A parameter was incorrect.",7,null],[13,"InvalidData","","Data not valid for the operation were encountered.",7,null],[13,"TimedOut","","The I/O operation&#39;s timeout expired, causing it to be canceled.",7,null],[13,"WriteZero","","An error returned when an operation could not be completed because a\ncall to `write` returned `Ok(0)`.",7,null],[13,"Interrupted","","This operation was interrupted.",7,null],[13,"Other","","Any I/O error not part of this list.",7,null],[13,"UnexpectedEof","","An error returned when an operation could not be completed because an\n&quot;end of file&quot; was reached prematurely.",7,null],[3,"Empty","","A reader which is always at EOF.",null,null],[3,"StdinLock","","A locked reference to the `Stdin` handle.",null,null],[3,"Stdin","","A handle to the standard input stream of a process.",null,null],[5,"stderr","","Constructs a new handle to the standard error of the current process.",null,{"inputs":[],"output":{"name":"stderr"}}],[3,"StderrLock","","A locked reference to the `Stderr` handle.",null,null],[3,"Stdout","","A handle to the global standard output stream of the current process.",null,null],[3,"LineWriter","","Wraps a writer and buffers output to it, flushing whenever a newline\n(`0x0a`, `&#39;\\n&#39;`) is detected.",null,null],[3,"StdoutLock","","A locked reference to the `Stdout` handle.",null,null],[3,"Sink","","A writer which will move data into the void.",null,null],[5,"copy","","Copies the entire contents of a reader into a writer.",null,{"inputs":[{"name":"r"},{"name":"w"}],"output":{"name":"result"}}],[3,"Stderr","","A handle to the standard error stream of a process.",null,null],[3,"BufReader","","The `BufReader` struct adds buffering to any reader.",null,null],[3,"Repeat","","A reader which yields one byte over and over and over and over and over and...",null,null],[5,"stdout","","Constructs a new handle to the standard output of the current process.",null,{"inputs":[],"output":{"name":"stdout"}}],[5,"repeat","","Creates an instance of a reader that infinitely repeats one byte.",null,{"inputs":[{"name":"u8"}],"output":{"name":"repeat"}}],[5,"empty","","Constructs a new handle to an empty reader.",null,{"inputs":[],"output":{"name":"empty"}}],[3,"Error","","The error type for I/O operations of the `Read`, `Write`, `Seek`, and\nassociated traits.",null,null],[3,"BufWriter","","Wraps a writer and buffers its output.",null,null],[5,"stdin","","Constructs a new handle to the standard input of the current process.",null,{"inputs":[],"output":{"name":"stdin"}}],[5,"sink","","Creates an instance of a writer which will successfully consume all data.",null,{"inputs":[],"output":{"name":"sink"}}],[0,"fs","ethcore_util::standard","Filesystem manipulation operations.",null,null],[3,"File","ethcore_util::standard::fs","A reference to an open file on the filesystem.",null,null],[3,"Metadata","","Metadata information about a file.",null,null],[3,"ReadDir","","Iterator over the entries in a directory.",null,null],[3,"DirEntry","","Entries returned by the [`ReadDir`] iterator.",null,null],[3,"OpenOptions","","Options and flags which can be used to configure how a file is opened.",null,null],[3,"Permissions","","Representation of the various permissions on a file.",null,null],[3,"FileType","","A structure representing a type of file with accessors for each file type.\nIt is returned by [`Metadata::file_type`] method.",null,null],[3,"DirBuilder","","A builder used to create directories in various manners.",null,null],[5,"remove_file","","Removes a file from the filesystem.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"metadata","","Given a path, query the file system to get information about a file,\ndirectory, etc.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"symlink_metadata","","Query the metadata about a file without following symlinks.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"rename","","Rename a file or directory to a new name, replacing the original file if\n`to` already exists.",null,{"inputs":[{"name":"p"},{"name":"q"}],"output":{"name":"result"}}],[5,"copy","","Copies the contents of one file to another. This function will also\ncopy the permission bits of the original file to the destination file.",null,{"inputs":[{"name":"p"},{"name":"q"}],"output":{"name":"result"}}],[5,"hard_link","","Creates a new hard link on the filesystem.",null,{"inputs":[{"name":"p"},{"name":"q"}],"output":{"name":"result"}}],[5,"soft_link","","Creates a new symbolic link on the filesystem.",null,{"inputs":[{"name":"p"},{"name":"q"}],"output":{"name":"result"}}],[5,"read_link","","Reads a symbolic link, returning the file that the link points to.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"canonicalize","","Returns the canonical form of a path with all intermediate components\nnormalized and symbolic links resolved.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"create_dir","","Creates a new, empty directory at the provided path",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"create_dir_all","","Recursively create a directory and all of its parent components if they\nare missing.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"remove_dir","","Removes an existing, empty directory.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"remove_dir_all","","Removes a directory at this path, after removing all its contents. Use\ncarefully!",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"read_dir","","Returns an iterator over the entries within a directory.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"set_permissions","","Changes the permissions found on a file or a directory.",null,{"inputs":[{"name":"p"},{"name":"permissions"}],"output":{"name":"result"}}],[0,"str","ethcore_util::standard","Unicode string slices.",null,null],[3,"EncodeUtf16","ethcore_util::standard::str","External iterator for a string&#39;s UTF-16 code units.",null,null],[3,"SplitTerminator","","Created with the method [`split_terminator()`].",null,null],[3,"ParseBoolError","","An error returned when parsing a `bool` from a string fails.",null,null],[3,"Lines","","Created with the method [`lines()`].",null,null],[3,"RSplitN","","Created with the method [`rsplitn()`].",null,null],[3,"RSplit","","Created with the method [`rsplit()`].",null,null],[3,"Split","","Created with the method [`split()`].",null,null],[3,"LinesAny","","Created with the method [`lines_any()`].",null,null],[3,"Bytes","","External iterator for a string&#39;s bytes.\nUse with the `std::iter` module.",null,null],[8,"FromStr","","A trait to abstract the idea of creating a new instance of a type from a\nstring.",null,null],[16,"Err","","The associated error which can be returned from parsing.",8,null],[10,"from_str","","Parses a string `s` to return a value of this type.",8,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[0,"pattern","","The string Pattern API.",null,null],[8,"Pattern","ethcore_util::standard::str::pattern","A string pattern.",null,null],[16,"Searcher","","Associated searcher for this pattern",9,null],[10,"into_searcher","","Constructs the associated searcher from\n`self` and the `haystack` to search in.",9,null],[11,"is_contained_in","","Checks whether the pattern matches anywhere in the haystack",9,null],[11,"is_prefix_of","","Checks whether the pattern matches at the front of the haystack",9,null],[11,"is_suffix_of","","Checks whether the pattern matches at the back of the haystack",9,null],[4,"SearchStep","","Result of calling `Searcher::next()` or `ReverseSearcher::next_back()`.",null,null],[13,"Match","","Expresses that a match of the pattern has been found at\n`haystack[a..b]`.",10,null],[13,"Reject","","Expresses that `haystack[a..b]` has been rejected as a possible match\nof the pattern.",10,null],[13,"Done","","Expresses that every byte of the haystack has been visted, ending\nthe iteration.",10,null],[8,"Searcher","","A searcher for a string pattern.",null,null],[10,"haystack","","Getter for the underlaying string to be searched in",11,null],[10,"next","","Performs the next search step starting from the front.",11,null],[11,"next_match","","Find the next `Match` result. See `next()`",11,null],[11,"next_reject","","Find the next `Reject` result. See `next()`",11,null],[8,"ReverseSearcher","","A reverse searcher for a string pattern.",null,null],[10,"next_back","","Performs the next search step starting from the back.",12,null],[11,"next_match_back","","Find the next `Match` result. See `next_back()`",12,null],[11,"next_reject_back","","Find the next `Reject` result. See `next_back()`",12,null],[8,"DoubleEndedSearcher","","A marker trait to express that a `ReverseSearcher`\ncan be used for a `DoubleEndedIterator` implementation.",null,null],[3,"CharSearcher","","Associated type for `&lt;char as Pattern&lt;&#39;a&gt;&gt;::Searcher`.",null,null],[3,"CharSliceSearcher","","Associated type for `&lt;&amp;[char] as Pattern&lt;&#39;a&gt;&gt;::Searcher`.",null,null],[3,"CharPredicateSearcher","","Associated type for `&lt;F as Pattern&lt;&#39;a&gt;&gt;::Searcher`.",null,null],[3,"StrSearcher","","Associated type for `&lt;&amp;str as Pattern&lt;&#39;a&gt;&gt;::Searcher`.",null,null],[3,"CharIndices","ethcore_util::standard::str","Iterator for a string&#39;s characters and their byte offsets.",null,null],[3,"SplitWhitespace","","An iterator over the non-whitespace substrings of a string,\nseparated by any amount of whitespace.",null,null],[3,"MatchIndices","","Created with the method [`match_indices()`].",null,null],[3,"SplitN","","Created with the method [`splitn()`].",null,null],[3,"RSplitTerminator","","Created with the method [`rsplit_terminator()`].",null,null],[5,"from_utf8","","Converts a slice of bytes to a string slice.",null,null],[5,"from_utf8_unchecked","","Converts a slice of bytes to a string slice without checking\nthat the string contains valid UTF-8.",null,null],[3,"RMatches","","Created with the method [`rmatches()`].",null,null],[3,"Matches","","Created with the method [`matches()`].",null,null],[3,"RMatchIndices","","Created with the method [`rmatch_indices()`].",null,null],[3,"Utf8Error","","Errors which can occur when attempting to interpret a sequence of `u8`\nas a string.",null,null],[3,"Chars","","Iterator for the char (representing *Unicode Scalar Values*) of a string",null,null],[0,"fmt","ethcore_util::standard","Utilities for formatting and printing `String`s",null,null],[5,"format","ethcore_util::standard::fmt","The format function takes a precompiled format string and a list of\narguments, to return the resulting formatted string.",null,{"inputs":[{"name":"arguments"}],"output":{"name":"string"}}],[8,"LowerExp","","Format trait for the `e` character.",null,null],[10,"fmt","","Formats the value using the given formatter.",13,null],[5,"write","","The `write` function takes an output stream, a precompiled format string,\nand a list of arguments. The arguments will be formatted according to the\nspecified format string into the output stream provided.",null,{"inputs":[{"name":"write"},{"name":"arguments"}],"output":{"name":"result"}}],[3,"DebugSet","","A struct to help with `fmt::Debug` implementations.",null,null],[8,"Write","","A collection of methods that are required to format a message into a stream.",null,null],[10,"write_str","","Writes a slice of bytes into this writer, returning whether the write\nsucceeded.",14,null],[11,"write_char","","Writes a `char` into this writer, returning whether the write succeeded.",14,null],[11,"write_fmt","","Glue for usage of the `write!` macro with implementors of this trait.",14,null],[3,"DebugStruct","","A struct to help with `fmt::Debug` implementations.",null,null],[6,"Result","","The type returned by formatter methods.",null,null],[8,"Binary","","Format trait for the `b` character.",null,null],[10,"fmt","","Formats the value using the given formatter.",15,null],[3,"Error","","The error type which is returned from formatting a message into a stream.",null,null],[3,"Formatter","","A struct to represent both where to emit formatting strings to and how they\nshould be formatted. A mutable version of this is passed to all formatting\ntraits.",null,null],[8,"UpperExp","","Format trait for the `E` character.",null,null],[10,"fmt","","Formats the value using the given formatter.",16,null],[8,"Display","","Format trait for an empty format, `{}`.",null,null],[10,"fmt","","Formats the value using the given formatter.",17,null],[8,"Debug","","Format trait for the `?` character.",null,null],[10,"fmt","","Formats the value using the given formatter.",18,null],[3,"Arguments","","This structure represents a safely precompiled version of a format string\nand its arguments. This cannot be generated at runtime because it cannot\nsafely be done so, so no constructors are given and the fields are private\nto prevent modification.",null,null],[8,"Octal","","Format trait for the `o` character.",null,null],[10,"fmt","","Formats the value using the given formatter.",19,null],[3,"DebugTuple","","A struct to help with `fmt::Debug` implementations.",null,null],[8,"UpperHex","","Format trait for the `X` character.",null,null],[10,"fmt","","Formats the value using the given formatter.",20,null],[8,"LowerHex","","Format trait for the `x` character.",null,null],[10,"fmt","","Formats the value using the given formatter.",21,null],[3,"DebugMap","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"DebugList","","A struct to help with `fmt::Debug` implementations.",null,null],[8,"Pointer","","Format trait for the `p` character.",null,null],[10,"fmt","","Formats the value using the given formatter.",22,null],[0,"cmp","ethcore_util::standard","Functionality for ordering and comparison.",null,null],[8,"PartialEq","ethcore_util::standard::cmp","Trait for equality comparisons which are [partial equivalence\nrelations](http://en.wikipedia.org/wiki/Partial_equivalence_relation).",null,null],[10,"eq","","This method tests for `self` and `other` values to be equal, and is used\nby `==`.",23,null],[11,"ne","","This method tests for `!=`.",23,null],[8,"Eq","","Trait for equality comparisons which are [equivalence relations](\nhttps://en.wikipedia.org/wiki/Equivalence_relation).",null,null],[4,"Ordering","","An `Ordering` is the result of a comparison between two values.",null,null],[13,"Less","","An ordering where a compared value is less [than another].",24,null],[13,"Equal","","An ordering where a compared value is equal [to another].",24,null],[13,"Greater","","An ordering where a compared value is greater [than another].",24,null],[8,"Ord","","Trait for types that form a [total order](https://en.wikipedia.org/wiki/Total_order).",null,null],[10,"cmp","","This method returns an `Ordering` between `self` and `other`.",25,null],[8,"PartialOrd","","Trait for values that can be compared for a sort-order.",null,null],[10,"partial_cmp","","This method returns an ordering between `self` and `other` values if one exists.",26,null],[11,"lt","","This method tests less than (for `self` and `other`) and is used by the `&lt;` operator.",26,null],[11,"le","","This method tests less than or equal to (for `self` and `other`) and is used by the `&lt;=`\noperator.",26,null],[11,"gt","","This method tests greater than (for `self` and `other`) and is used by the `&gt;` operator.",26,null],[11,"ge","","This method tests greater than or equal to (for `self` and `other`) and is used by the `&gt;=`\noperator.",26,null],[5,"min","","Compare and return the minimum of two values.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"max","","Compare and return the maximum of two values.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[0,"ptr","ethcore_util::standard","Raw, unsafe pointers, `*const T`, and `*mut T`.",null,null],[5,"null","ethcore_util::standard::ptr","Creates a null raw pointer.",null,null],[5,"null_mut","","Creates a null mutable raw pointer.",null,null],[5,"swap","","Swaps the values at two mutable locations of the same type, without\ndeinitializing either. They may overlap, unlike `mem::swap` which is\notherwise equivalent.",null,null],[5,"replace","","Replaces the value at `dest` with `src`, returning the old\nvalue, without dropping either.",null,null],[5,"read","","Reads the value from `src` without moving it. This leaves the\nmemory in `src` unchanged.",null,null],[5,"write","","Overwrites a memory location with the given value without reading or\ndropping the old value.",null,null],[5,"read_volatile","","Performs a volatile read of the value from `src` without moving it. This\nleaves the memory in `src` unchanged.",null,null],[5,"write_volatile","","Performs a volatile write of a memory location with the given value without\nreading or dropping the old value.",null,null],[5,"eq","","Compare raw pointers for equality.",null,null],[3,"Unique","","A wrapper around a raw non-null `*mut T` that indicates that the possessor\nof this wrapper owns the referent. This in turn implies that the\n`Unique&lt;T&gt;` is `Send`/`Sync` if `T` is `Send`/`Sync`, unlike a raw\n`*mut T` (which conveys no particular ownership semantics).  It\nalso implies that the referent of the pointer should not be\nmodified without a unique path to the `Unique` reference. Useful\nfor building abstractions like `Vec&lt;T&gt;` or `Box&lt;T&gt;`, which\ninternally use raw pointers to manage the memory that they own.",null,null],[3,"Shared","","A wrapper around a raw non-null `*mut T` that indicates that the possessor\nof this wrapper has shared ownership of the referent. Useful for\nbuilding abstractions like `Rc&lt;T&gt;` or `Arc&lt;T&gt;`, which internally\nuse raw pointers to manage the memory that they own.",null,null],[5,"write_bytes","","Invokes memset on the specified pointer, setting `count * size_of::&lt;T&gt;()`\nbytes of memory starting at `dst` to `val`.",null,null],[5,"drop_in_place","","Executes the destructor (if any) of the pointed-to value.",null,null],[5,"copy","","Copies `count * size_of&lt;T&gt;` bytes from `src` to `dst`. The source\nand destination may overlap.",null,null],[5,"copy_nonoverlapping","","Copies `count * size_of&lt;T&gt;` bytes from `src` to `dst`. The source\nand destination may *not* overlap.",null,null],[0,"mem","ethcore_util::standard","Basic functions for dealing with memory.",null,null],[5,"forget","ethcore_util::standard::mem","Leaks a value: takes ownership and &quot;forgets&quot; about the value **without running\nits destructor**.",null,null],[5,"size_of","","Returns the size of a type in bytes.",null,{"inputs":[],"output":{"name":"usize"}}],[5,"size_of_val","","Returns the size of the pointed-to value in bytes.",null,{"inputs":[{"name":"t"}],"output":{"name":"usize"}}],[5,"min_align_of","","Returns the [ABI]-required minimum alignment of a type.",null,{"inputs":[],"output":{"name":"usize"}}],[5,"min_align_of_val","","Returns the [ABI]-required minimum alignment of the type of the value that `val` points to.",null,{"inputs":[{"name":"t"}],"output":{"name":"usize"}}],[5,"align_of","","Returns the [ABI]-required minimum alignment of a type.",null,{"inputs":[],"output":{"name":"usize"}}],[5,"align_of_val","","Returns the [ABI]-required minimum alignment of the type of the value that `val` points to.",null,{"inputs":[{"name":"t"}],"output":{"name":"usize"}}],[5,"zeroed","","Creates a value whose bytes are all zero.",null,{"inputs":[],"output":{"name":"t"}}],[5,"uninitialized","","Bypasses Rust&#39;s normal memory-initialization checks by pretending to\nproduce a value of type `T`, while doing nothing at all.",null,{"inputs":[],"output":{"name":"t"}}],[5,"swap","","Swaps the values at two mutable locations, without deinitializing either one.",null,null],[5,"replace","","Replaces the value at a mutable location with a new one, returning the old value, without\ndeinitializing either one.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"drop","","Disposes of a value.",null,null],[5,"transmute_copy","","Interprets `src` as having type `&amp;U`, and then reads `src` without moving\nthe contained value.",null,{"inputs":[{"name":"t"}],"output":{"name":"u"}}],[5,"transmute","","Reinterprets the bits of a value of one type as another type.",null,{"inputs":[{"name":"t"}],"output":{"name":"u"}}],[0,"ops","ethcore_util::standard","Overloadable operators.",null,null],[8,"Drop","ethcore_util::standard::ops","The `Drop` trait is used to run some code when a value goes out of scope.\nThis is sometimes called a &#39;destructor&#39;.",null,null],[10,"drop","","A method called when the value goes out of scope.",27,null],[8,"Add","","The `Add` trait is used to specify the functionality of `+`.",null,null],[16,"Output","","The resulting type after applying the `+` operator",28,null],[10,"add","","The method for the `+` operator",28,null],[8,"Sub","","The `Sub` trait is used to specify the functionality of `-`.",null,null],[16,"Output","","The resulting type after applying the `-` operator",29,null],[10,"sub","","The method for the `-` operator",29,null],[8,"Mul","","The `Mul` trait is used to specify the functionality of `*`.",null,null],[16,"Output","","The resulting type after applying the `*` operator",30,null],[10,"mul","","The method for the `*` operator",30,null],[8,"Div","","The `Div` trait is used to specify the functionality of `/`.",null,null],[16,"Output","","The resulting type after applying the `/` operator",31,null],[10,"div","","The method for the `/` operator",31,null],[8,"Rem","","The `Rem` trait is used to specify the functionality of `%`.",null,null],[16,"Output","","The resulting type after applying the `%` operator",32,null],[10,"rem","","The method for the `%` operator",32,null],[8,"Neg","","The `Neg` trait is used to specify the functionality of unary `-`.",null,null],[16,"Output","","The resulting type after applying the `-` operator",33,null],[10,"neg","","The method for the unary `-` operator",33,null],[8,"Not","","The `Not` trait is used to specify the functionality of unary `!`.",null,null],[16,"Output","","The resulting type after applying the `!` operator",34,null],[10,"not","","The method for the unary `!` operator",34,null],[8,"BitAnd","","The `BitAnd` trait is used to specify the functionality of `&amp;`.",null,null],[16,"Output","","The resulting type after applying the `&amp;` operator",35,null],[10,"bitand","","The method for the `&amp;` operator",35,null],[8,"BitOr","","The `BitOr` trait is used to specify the functionality of `|`.",null,null],[16,"Output","","The resulting type after applying the `|` operator",36,null],[10,"bitor","","The method for the `|` operator",36,null],[8,"BitXor","","The `BitXor` trait is used to specify the functionality of `^`.",null,null],[16,"Output","","The resulting type after applying the `^` operator",37,null],[10,"bitxor","","The method for the `^` operator",37,null],[8,"Shl","","The `Shl` trait is used to specify the functionality of `&lt;&lt;`.",null,null],[16,"Output","","The resulting type after applying the `&lt;&lt;` operator",38,null],[10,"shl","","The method for the `&lt;&lt;` operator",38,null],[8,"Shr","","The `Shr` trait is used to specify the functionality of `&gt;&gt;`.",null,null],[16,"Output","","The resulting type after applying the `&gt;&gt;` operator",39,null],[10,"shr","","The method for the `&gt;&gt;` operator",39,null],[8,"AddAssign","","The `AddAssign` trait is used to specify the functionality of `+=`.",null,null],[10,"add_assign","","The method for the `+=` operator",40,null],[8,"SubAssign","","The `SubAssign` trait is used to specify the functionality of `-=`.",null,null],[10,"sub_assign","","The method for the `-=` operator",41,null],[8,"MulAssign","","The `MulAssign` trait is used to specify the functionality of `*=`.",null,null],[10,"mul_assign","","The method for the `*=` operator",42,null],[8,"DivAssign","","The `DivAssign` trait is used to specify the functionality of `/=`.",null,null],[10,"div_assign","","The method for the `/=` operator",43,null],[8,"RemAssign","","The `RemAssign` trait is used to specify the functionality of `%=`.",null,null],[10,"rem_assign","","The method for the `%=` operator",44,null],[8,"BitAndAssign","","The `BitAndAssign` trait is used to specify the functionality of `&amp;=`.",null,null],[10,"bitand_assign","","The method for the `&amp;` operator",45,null],[8,"BitOrAssign","","The `BitOrAssign` trait is used to specify the functionality of `|=`.",null,null],[10,"bitor_assign","","The method for the `|=` operator",46,null],[8,"BitXorAssign","","The `BitXorAssign` trait is used to specify the functionality of `^=`.",null,null],[10,"bitxor_assign","","The method for the `^=` operator",47,null],[8,"ShlAssign","","The `ShlAssign` trait is used to specify the functionality of `&lt;&lt;=`.",null,null],[10,"shl_assign","","The method for the `&lt;&lt;=` operator",48,null],[8,"ShrAssign","","The `ShrAssign` trait is used to specify the functionality of `&gt;&gt;=`.",null,null],[10,"shr_assign","","The method for the `&gt;&gt;=` operator",49,null],[8,"Index","","The `Index` trait is used to specify the functionality of indexing operations\nlike `arr[idx]` when used in an immutable context.",null,null],[16,"Output","","The returned type after indexing",50,null],[10,"index","","The method for the indexing (`Foo[Bar]`) operation",50,null],[8,"IndexMut","","The `IndexMut` trait is used to specify the functionality of indexing\noperations like `arr[idx]`, when used in a mutable context.",null,null],[10,"index_mut","","The method for the indexing (`Foo[Bar]`) operation",51,null],[3,"RangeFull","","An unbounded range. Use `..` (two dots) for its shorthand.",null,null],[3,"Range","","A (half-open) range which is bounded at both ends: { x | start &lt;= x &lt; end }.\nUse `start..end` (two dots) for its shorthand.",null,null],[12,"start","","The lower bound of the range (inclusive).",52,null],[12,"end","","The upper bound of the range (exclusive).",52,null],[3,"RangeFrom","","A range which is only bounded below: { x | start &lt;= x }.\nUse `start..` for its shorthand.",null,null],[12,"start","","The lower bound of the range (inclusive).",53,null],[3,"RangeTo","","A range which is only bounded above: { x | x &lt; end }.\nUse `..end` (two dots) for its shorthand.",null,null],[12,"end","","The upper bound of the range (exclusive).",54,null],[4,"RangeInclusive","","An inclusive range which is bounded at both ends: { x | start &lt;= x &lt;= end }.\nUse `start...end` (three dots) for its shorthand.",null,null],[13,"Empty","","Empty range (iteration has finished)",55,null],[12,"at","ethcore_util::standard::ops::RangeInclusive","The point at which iteration finished",55,null],[13,"NonEmpty","ethcore_util::standard::ops","Non-empty range (iteration will yield value(s))",55,null],[12,"start","ethcore_util::standard::ops::RangeInclusive","The lower bound of the range (inclusive).",55,null],[12,"end","","The upper bound of the range (inclusive).",55,null],[3,"RangeToInclusive","ethcore_util::standard::ops","An inclusive range which is only bounded above: { x | x &lt;= end }.\nUse `...end` (three dots) for its shorthand.",null,null],[12,"end","","The upper bound of the range (inclusive)",56,null],[8,"Deref","","The `Deref` trait is used to specify the functionality of dereferencing\noperations, like `*v`.",null,null],[16,"Target","","The resulting type after dereferencing",57,null],[10,"deref","","The method called to dereference a value",57,null],[8,"DerefMut","","The `DerefMut` trait is used to specify the functionality of dereferencing\nmutably like `*v = 1;`",null,null],[10,"deref_mut","","The method called to mutably dereference a value",58,null],[8,"Fn","","A version of the call operator that takes an immutable receiver.",null,null],[10,"call","","This is called when the call operator is used.",59,null],[8,"FnMut","","A version of the call operator that takes a mutable receiver.",null,null],[10,"call_mut","","This is called when the call operator is used.",60,null],[8,"FnOnce","","A version of the call operator that takes a by-value receiver.",null,null],[16,"Output","","The returned type after the call operator is used.",61,null],[10,"call_once","","This is called when the call operator is used.",61,null],[8,"CoerceUnsized","","Trait that indicates that this is a pointer or a wrapper for one,\nwhere unsizing can be performed on the pointee.",null,null],[8,"Place","","Both `in (PLACE) EXPR` and `box EXPR` desugar into expressions\nthat allocate an intermediate &quot;place&quot; that holds uninitialized\nstate.  The desugaring evaluates EXPR, and writes the result at\nthe address returned by the `pointer` method of this trait.",null,null],[10,"pointer","","Returns the address where the input value will be written.\nNote that the data at this address is generally uninitialized,\nand thus one should use `ptr::write` for initializing it.",62,null],[8,"Placer","","Interface to implementations of  `in (PLACE) EXPR`.",null,null],[16,"Place","","`Place` is the intermedate agent guarding the\nuninitialized state for `Data`.",63,null],[10,"make_place","","Creates a fresh place from `self`.",63,null],[8,"InPlace","","Specialization of `Place` trait supporting `in (PLACE) EXPR`.",null,null],[16,"Owner","","`Owner` is the type of the end value of `in (PLACE) EXPR`",64,null],[10,"finalize","","Converts self into the final value, shifting\ndeallocation/cleanup responsibilities (if any remain), over to\nthe returned instance of `Owner` and forgetting self.",64,null],[8,"Boxed","","Core trait for the `box EXPR` form.",null,null],[16,"Data","","The kind of data that is stored in this kind of box.",65,null],[16,"Place","","The place that will negotiate the storage of the data.",65,null],[10,"finalize","","Converts filled place into final owning value, shifting\ndeallocation/cleanup responsibilities (if any remain), over to\nreturned instance of `Self` and forgetting `filled`.",65,null],[8,"BoxPlace","","Specialization of `Place` trait supporting `box EXPR`.",null,null],[10,"make_place","","Creates a globally fresh place.",66,{"inputs":[],"output":{"name":"self"}}],[8,"Carrier","","A trait for types which have success and error states and are meant to work\nwith the question mark operator.\nWhen the `?` operator is used with a value, whether the value is in the\nsuccess or error state is determined by calling `translate`.",null,null],[16,"Success","","The type of the value when computation succeeds.",67,null],[16,"Error","","The type of the value when computation errors out.",67,null],[10,"from_success","","Create a `Carrier` from a success value.",67,null],[10,"from_error","","Create a `Carrier` from an error value.",67,null],[10,"translate","","Translate this `Carrier` to another implementation of `Carrier` with the\nsame associated types.",67,null],[0,"slice","ethcore_util::standard","A dynamically-sized view into a contiguous sequence, `[T]`.",null,null],[8,"SliceConcatExt","ethcore_util::standard::slice","An extension trait for concatenating slices",null,null],[16,"Output","","The resulting type after concatenation",68,null],[10,"concat","","Flattens a slice of `T` into a single value `Self::Output`.",68,null],[10,"join","","Flattens a slice of `T` into a single value `Self::Output`, placing a\ngiven separator between each.",68,null],[10,"connect","","",68,null],[3,"SplitNMut","","An iterator over subslices separated by elements that match a predicate\nfunction, limited to a given number of splits.",null,null],[3,"Chunks","","An iterator over a slice in (non-overlapping) chunks (`size` elements at a\ntime).",null,null],[5,"from_raw_parts_mut","","Performs the same functionality as `from_raw_parts`, except that a mutable\nslice is returned.",null,null],[5,"from_raw_parts","","Forms a slice from a pointer and a length.",null,null],[3,"SplitN","","An iterator over subslices separated by elements that match a predicate\nfunction, limited to a given number of splits.",null,null],[3,"Windows","","An iterator over overlapping subslices of length `size`.",null,null],[3,"Iter","","Immutable slice iterator",null,null],[3,"IterMut","","Mutable slice iterator.",null,null],[3,"RSplitN","","An iterator over subslices separated by elements that match a\npredicate function, limited to a given number of splits, starting\nfrom the end of the slice.",null,null],[3,"Split","","An iterator over subslices separated by elements that match a predicate\nfunction.",null,null],[3,"SplitMut","","An iterator over the subslices of the vector which are separated\nby elements that match `pred`.",null,null],[3,"ChunksMut","","An iterator over a slice in (non-overlapping) mutable chunks (`size`\nelements at a time). When the slice len is not evenly divided by the chunk\nsize, the last slice of the iteration will be the remainder.",null,null],[3,"RSplitNMut","","An iterator over subslices separated by elements that match a\npredicate function, limited to a given number of splits, starting\nfrom the end of the slice.",null,null],[0,"result","ethcore_util::standard","Error handling with the `Result` type.",null,null],[4,"Result","ethcore_util::standard::result","`Result` is a type that represents either success (`Ok`) or failure (`Err`).",null,null],[13,"Ok","","Contains the success value",69,null],[13,"Err","","Contains the error value",69,null],[3,"Iter","","An iterator over a reference to the [`Ok`] variant of a [`Result`].",null,null],[3,"IterMut","","An iterator over a mutable reference to the [`Ok`] variant of a [`Result`].",null,null],[3,"IntoIter","","An iterator over the value in a [`Ok`] variant of a [`Result`]. This struct is\ncreated by the [`into_iter`] method on [`Result`][`Result`] (provided by\nthe [`IntoIterator`] trait).",null,null],[0,"option","ethcore_util::standard","Optional values.",null,null],[4,"Option","ethcore_util::standard::option","The `Option` type. See [the module level documentation](index.html) for more.",null,null],[13,"None","","No value",70,null],[13,"Some","","Some value `T`",70,null],[3,"Iter","","An iterator over a reference of the contained item in an [`Option`].",null,null],[3,"IterMut","","An iterator over a mutable reference of the contained item in an [`Option`].",null,null],[3,"IntoIter","","An iterator over the item contained inside an [`Option`].",null,null],[3,"Path","ethcore_util::standard","A slice of a path (akin to [`str`]).",null,null],[8,"FromStr","","A trait to abstract the idea of creating a new instance of a type from a\nstring.",null,null],[16,"Err","","The associated error which can be returned from parsing.",8,null],[10,"from_str","","Parses a string `s` to return a value of this type.",8,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[8,"Read","","The `Read` trait allows for reading bytes from a source.",null,null],[10,"read","","Pull some bytes from this source into the specified buffer, returning\nhow many bytes were read.",2,null],[11,"read_to_end","","Read all bytes until EOF in this source, placing them into `buf`.",2,null],[11,"read_to_string","","Read all bytes until EOF in this source, placing them into `buf`.",2,null],[11,"read_exact","","Read the exact number of bytes required to fill `buf`.",2,null],[11,"by_ref","","Creates a &quot;by reference&quot; adaptor for this instance of `Read`.",2,null],[11,"bytes","","Transforms this `Read` instance to an `Iterator` over its bytes.",2,null],[11,"chars","","Transforms this `Read` instance to an `Iterator` over `char`s.",2,null],[11,"chain","","Creates an adaptor which will chain this stream with another.",2,null],[11,"take","","Creates an adaptor which will read at most `limit` bytes from it.",2,null],[8,"Write","","A trait for objects which are byte-oriented sinks.",null,null],[10,"write","","Write a buffer into this object, returning how many bytes were written.",1,null],[10,"flush","","Flush this output stream, ensuring that all intermediately buffered\ncontents reach their destination.",1,null],[11,"write_all","","Attempts to write an entire buffer into this write.",1,null],[11,"write_fmt","","Writes a formatted string into this writer, returning any error\nencountered.",1,null],[11,"by_ref","","Creates a &quot;by reference&quot; adaptor for this instance of `Write`.",1,null],[8,"Hash","","A hashable type.",null,null],[10,"hash","","Feeds this value into the state given, updating the hasher as necessary.",71,null],[11,"hash_slice","","Feeds a slice of this type into the state provided.",71,null],[8,"Hasher","","A trait which represents the ability to hash an arbitrary stream of bytes.",null,null],[10,"finish","","Completes a round of hashing, producing the output hash generated.",72,null],[10,"write","","Writes some data into this `Hasher`",72,null],[11,"write_u8","","Write a single `u8` into this hasher",72,null],[11,"write_u16","","Write a single `u16` into this hasher.",72,null],[11,"write_u32","","Write a single `u32` into this hasher.",72,null],[11,"write_u64","","Write a single `u64` into this hasher.",72,null],[11,"write_usize","","Write a single `usize` into this hasher.",72,null],[11,"write_i8","","Write a single `i8` into this hasher.",72,null],[11,"write_i16","","Write a single `i16` into this hasher.",72,null],[11,"write_i32","","Write a single `i32` into this hasher.",72,null],[11,"write_i64","","Write a single `i64` into this hasher.",72,null],[11,"write_isize","","Write a single `isize` into this hasher.",72,null],[8,"StdError","","Base functionality for all errors in Rust.",null,null],[10,"description","","A short description of the error.",73,null],[11,"cause","","The lower-level cause of this error, if any.",73,null],[3,"Arc","","An atomically reference counted wrapper for shared state.\nDestruction is deterministic, and will occur as soon as the last owner is\ngone. It is marked as `Send` because it uses atomic reference counting.",null,null],[4,"Json","","Represents a json value",null,null],[13,"I64","","",74,null],[13,"U64","","",74,null],[13,"F64","","",74,null],[13,"String","","",74,null],[13,"Boolean","","",74,null],[13,"Array","","",74,null],[13,"Object","","",74,null],[13,"Null","","",74,null],[8,"FromBase64","","A trait for converting from base64 encoded values.",null,null],[10,"from_base64","","Converts the value of `self`, interpreted as base64 encoded data, into\nan owned vector of bytes, returning the vector.",75,null],[8,"FromHex","","A trait for converting hexadecimal encoded values",null,null],[10,"from_hex","","Converts the value of `self`, interpreted as hexadecimal encoded data,\ninto an owned vector of bytes, returning the vector.",76,null],[4,"FromHexError","","Errors that can occur when decoding a hex encoded string",null,null],[13,"InvalidHexCharacter","","The input contained a character not part of the hex format",77,null],[13,"InvalidHexLength","","The input had an invalid length",77,null],[8,"HeapSizeOf","","",null,null],[10,"heap_size_of_children","","Measure the size of any heap-allocated structures that hang off this value, but not the\nspace taken up by the value itself (i.e. what size_of::&lt;T&gt; measures, more or less); that\nspace is handled by the implementation of HeapSizeOf for Box&lt;T&gt; below.",78,null],[8,"Itertools","","The trait `Itertools`: extra iterator adaptors and methods for iterators.",null,null],[11,"interleave","","Alternate elements from two iterators until both\nrun out.",79,null],[11,"interleave_shortest","","Alternate elements from two iterators until one of them runs out.",79,null],[11,"intersperse","","An iterator adaptor to insert a particular value\nbetween each element of the adapted iterator.",79,null],[11,"zip_longest","","Create an iterator which iterates over both this and the specified\niterator simultaneously, yielding pairs of two optional elements.",79,null],[11,"zip_eq","","Create an iterator which iterates over both this and the specified\niterator simultaneously, yielding pairs of elements.",79,null],[11,"batching","","A “meta iterator adaptor”. Its closure recives a reference to the iterator\nand may pick off as many elements as it likes, to produce the next iterator element.",79,null],[11,"group_by","","Group iterator elements. Consecutive elements that map to the same key (“runs”),\nare returned as the iterator elements of `GroupBy`.",79,null],[11,"group_by_lazy","","Return an iterable that can group iterator elements.\nConsecutive elements that map to the same key (“runs”), are assigned\nto the same group.",79,null],[11,"chunks_lazy","","Return an iterable that can chunk the iterator.",79,null],[11,"tee","","Split into an iterator pair that both yield all elements from\nthe original iterator.",79,null],[11,"slice","","Return a sliced iterator.",79,null],[11,"into_rc","","Return an iterator inside a `Rc&lt;RefCell&lt;_&gt;&gt;` wrapper.",79,null],[11,"step","","Return an iterator adaptor that steps `n` elements in the base iterator\nfor each iteration.",79,null],[11,"merge","","Return an iterator adaptor that merges the two base iterators in ascending order.\nIf both base iterators are sorted (ascending), the result is sorted.",79,null],[11,"merge_by","","Return an iterator adaptor that merges the two base iterators in order.\nThis is much like `.merge()` but allows for a custom ordering.",79,null],[11,"kmerge","","Return an iterator adaptor that flattens an iterator of iterators by\nmerging them in ascending order.",79,null],[11,"cartesian_product","","Return an iterator adaptor that iterates over the cartesian product of\nthe element sets of two iterators `self` and `J`.",79,null],[11,"multipeek","","Return an iterator adapter that allows peeking multiple values.",79,null],[11,"coalesce","","Return an iterator adaptor that uses the passed-in closure to\noptionally merge together consecutive elements.",79,null],[11,"dedup","","Remove duplicates from sections of consecutive identical elements.\nIf the iterator is sorted, all elements will be unique.",79,null],[11,"unique","","Return an iterator adaptor that filters out elements that have\nalready been produced once during the iteration. Duplicates\nare detected using hash and equality.",79,null],[11,"unique_by","","Return an iterator adaptor that filters out elements that have\nalready been produced once during the iteration.",79,null],[11,"mend_slices","","Return an iterator adaptor that joins together adjacent slices if possible.",79,null],[11,"take_while_ref","","Return an iterator adaptor that borrows from a `Clone`-able iterator\nto only pick off elements while the predicate `f` returns `true`.",79,null],[11,"while_some","","Return an iterator adaptor that filters `Option&lt;A&gt;` iterator elements\nand produces `A`. Stops on the first `None` encountered.",79,null],[11,"combinations","","Return an iterator adaptor that iterates over the combinations of\nthe elements from an iterator.",79,null],[11,"combinations_n","","Return an iterator adaptor that iterates over the `n`-length combinations of\nthe elements from an iterator.",79,null],[11,"pad_using","","Return an iterator adaptor that pads the sequence to a minimum length of\n`min` by filling missing elements using a closure `f`.",79,null],[11,"flatten","","Unravel a nested iterator.",79,null],[11,"map_fn","","Like regular `.map()`, specialized to using a simple function pointer instead,\nso that the resulting `Map` iterator value can be cloned.",79,null],[11,"find_position","","Find the position and value of the first element satisfying a predicate.",79,null],[11,"dropn","","Consume the first `n` elements of the iterator eagerly.",79,null],[11,"dropping","","Consume the first `n` elements from the iterator eagerly,\nand return the same iterator again.",79,null],[11,"dropping_back","","Consume the last `n` elements from the iterator eagerly,\nand return the same iterator again.",79,null],[11,"foreach","","Run the closure `f` eagerly on each element of the iterator.",79,null],[11,"collect_vec","","`.collect_vec()` is simply a type specialization of `.collect()`,\nfor convenience.",79,null],[11,"set_from","","Assign to each reference in `self` from the `from` iterator,\nstopping at the shortest of the two iterators.",79,null],[11,"join","","Combine all iterator elements into one String, seperated by `sep`.",79,null],[11,"format_default","","Format all iterator elements, separated by `sep`.",79,null],[11,"format","","Format all iterator elements, separated by `sep`.",79,null],[11,"fold_results","","Fold `Result` values from an iterator.",79,null],[11,"fold_options","","Fold `Option` values from an iterator.",79,null],[11,"fold1","","Accumulator of the elements in the iterator.",79,null],[11,"fold_while","","An iterator adaptor that applies a function, producing a single, final value.",79,null],[11,"is_empty_hint","","Tell if the iterator is empty or not according to its size hint.\nReturn `None` if the size hint does not tell, or return a `Some`\nvalue with the emptiness if it&#39;s possible to tell.",79,null],[11,"sorted","","Collect all iterator elements into a sorted vector in ascending order.",79,null],[11,"sorted_by","","Collect all iterator elements into a sorted vector.",79,null],[11,"sort_by","","**Deprecated:** renamed to `.sorted_by()`",79,null],[11,"partition_map","","Collect all iterator elements into one of two\npartitions. Unlike `Iterator::partition`, each partition may\nhave a distinct type.",79,null],[11,"minmax","","Return the minimum and maximum elements in the iterator.",79,null],[11,"minmax_by_key","","Return the minimum and maximum element of an iterator, as determined by\nthe specified function.",79,null],[3,"Condvar","","A Condition Variable",null,null],[3,"Mutex","","A mutual exclusion primitive useful for protecting shared data",null,null],[3,"MutexGuard","","An RAII implementation of a &quot;scoped lock&quot; of a mutex. When this structure is\ndropped (falls out of scope), the lock will be unlocked.",null,null],[3,"RwLock","","A reader-writer lock",null,null],[3,"RwLockReadGuard","","RAII structure used to release the shared read access of a lock when\ndropped.",null,null],[3,"RwLockWriteGuard","","RAII structure used to release the exclusive write access of a lock when\ndropped.",null,null],[0,"from_json","ethcore_util","Coversion from json.",null,null],[8,"FromJson","ethcore_util::from_json","Trait allowing conversion from a JSON value.",null,null],[10,"from_json","","Convert a JSON value to an instance of this type.",80,{"inputs":[{"name":"json"}],"output":{"name":"self"}}],[0,"common","ethcore_util","Utils common types and macros global reexport.",null,null],[0,"hash","ethcore_util::common","General hash types, a fixed-size raw-data type used as the output of hash functions.",null,null],[8,"FixedHash","ethcore_util::common::hash","Trait for a fixed-size byte array to be used as the output of hash functions.",null,null],[10,"new","","Create a new, zero-initialised, instance.",81,{"inputs":[],"output":{"name":"self"}}],[10,"zero","","Synonym for `new()`. Prefer to new as it&#39;s more readable.",81,{"inputs":[],"output":{"name":"self"}}],[10,"random","","Create a new, cryptographically random, instance.",81,{"inputs":[],"output":{"name":"self"}}],[10,"randomize","","Assign self have a cryptographically random value.",81,null],[10,"len","","Get the size of this object in bytes.",81,{"inputs":[],"output":{"name":"usize"}}],[10,"from_slice","","Convert a slice of bytes of length `len()` to an instance of this type.",81,null],[10,"clone_from_slice","","Assign self to be of the same value as a slice of bytes of length `len()`.",81,null],[10,"copy_to","","Copy the data of this object into some mutable slice of length `len()`.",81,null],[10,"contains","","Returns `true` if all bits set in `b` are also set in `self`.",81,null],[10,"is_zero","","Returns `true` if no bits are set.",81,null],[10,"low_u64","","Returns the lowest 8 bytes interpreted as a BigEndian integer.",81,null],[5,"clean_0x","","Return `s` without the `0x` at the beginning of it, if any.",null,{"inputs":[{"name":"str"}],"output":{"name":"str"}}],[3,"H32","","Unformatted binary data of fixed length.",null,null],[12,"0","","",82,null],[3,"H64","","Unformatted binary data of fixed length.",null,null],[12,"0","","",83,null],[3,"H128","","Unformatted binary data of fixed length.",null,null],[12,"0","","",84,null],[3,"H160","","Unformatted binary data of fixed length.",null,null],[12,"0","","",85,null],[3,"H256","","Unformatted binary data of fixed length.",null,null],[12,"0","","",86,null],[3,"H264","","Unformatted binary data of fixed length.",null,null],[12,"0","","",87,null],[3,"H512","","Unformatted binary data of fixed length.",null,null],[12,"0","","",88,null],[3,"H520","","Unformatted binary data of fixed length.",null,null],[12,"0","","",89,null],[3,"H1024","","Unformatted binary data of fixed length.",null,null],[12,"0","","",90,null],[3,"H2048","","Unformatted binary data of fixed length.",null,null],[12,"0","","",91,null],[3,"PlainHasher","","Hasher that just takes 8 bytes of the provided value.\nMay only be used for keys which are 32 bytes.",null,null],[6,"H256FastMap","","Specialized version of `HashMap` with H256 keys and fast hashing function.",null,null],[6,"H256FastSet","","Specialized version of `HashSet` with H256 keys and fast hashing function.",null,null],[0,"error","ethcore_util","General error types for use in ethcore.",null,null],[3,"Mismatch","ethcore_util::error","Error indicating an expected value was not found.",null,null],[12,"expected","","Value expected.",92,null],[12,"found","","Value found.",92,null],[3,"OutOfBounds","","Error indicating value found is outside of a valid range.",null,null],[12,"min","","Minimum allowed value.",93,null],[12,"max","","Maximum allowed value.",93,null],[12,"found","","Value found.",93,null],[4,"BaseDataError","","Error in database subsystem.",null,null],[13,"NegativelyReferencedHash","","An entry was removed more times than inserted.",94,null],[13,"AlreadyExists","","A committed value was inserted more than once.",94,null],[4,"UtilError","","General error type which should be capable of representing all errors in ethcore.",null,null],[13,"StdIo","","Error concerning the Rust standard library&#39;s IO subsystem.",95,null],[13,"FromHex","","Error concerning the hex conversion logic.",95,null],[13,"BaseData","","Error concerning the database abstraction logic.",95,null],[13,"Decoder","","Error concerning the RLP decoder.",95,null],[13,"SimpleString","","Miscellaneous error described by a string.",95,null],[13,"BadSize","","Error from a bad input size being given for the needed output.",95,null],[13,"Snappy","","Error from snappy.",95,null],[11,"fmt","","",94,null],[11,"fmt","","",94,null],[11,"fmt","","",95,null],[11,"fmt","","",95,null],[11,"fmt","","",92,null],[11,"eq","","",92,null],[11,"ne","","",92,null],[11,"clone","","",92,null],[11,"fmt","","",92,null],[11,"fmt","","",93,null],[11,"eq","","",93,null],[11,"ne","","",93,null],[11,"clone","","",93,null],[11,"fmt","","",93,null],[11,"from","","",95,{"inputs":[{"name":"fromhexerror"}],"output":{"name":"utilerror"}}],[11,"from","","",95,{"inputs":[{"name":"basedataerror"}],"output":{"name":"utilerror"}}],[11,"from","","",95,{"inputs":[{"name":"error"}],"output":{"name":"utilerror"}}],[11,"from","","",95,{"inputs":[{"name":"decodererror"}],"output":{"name":"utilerror"}}],[11,"from","","",95,{"inputs":[{"name":"string"}],"output":{"name":"utilerror"}}],[11,"from","","",95,{"inputs":[{"name":"invalidinput"}],"output":{"name":"utilerror"}}],[0,"bytes","ethcore_util","General bytes-related utilities.",null,null],[3,"PrettySlice","ethcore_util::bytes","Slice pretty print helper",null,null],[4,"BytesRef","","A byte collection reference that can either be a slice or a vector",null,null],[13,"Flexible","","This is a reference to a vector",96,null],[13,"Fixed","","This is a reference to a slice",96,null],[6,"Bytes","","Vector of bytes.",null,null],[8,"ToPretty","","Trait to allow a type to be pretty-printed in `format!`, where unoverridable\ndefaults cannot otherwise be avoided.",null,null],[10,"pretty","","Convert a type into a derivative form in order to make `format!` print it prettily.",97,null],[11,"to_hex","","Express the object as a hex string.",97,null],[11,"fmt","","",98,null],[11,"fmt","","",98,null],[11,"write","","Writes given `input` to this `BytesRef` starting at `offset`.\nReturns number of bytes written to the ref.\nNOTE can return number greater then `input.len()` in case flexible vector had to be extended.",96,null],[11,"deref","","",96,null],[11,"deref_mut","","",96,null],[0,"misc","ethcore_util","Diff misc.",null,null],[4,"Filth","ethcore_util::misc","Boolean type for clean/dirty status.",null,null],[13,"Clean","","Data has not been changed.",99,null],[13,"Dirty","","Data has been changed.",99,null],[5,"now","","Generate a timestamp representing now (UTC) in RFC3339 format.",null,{"inputs":[],"output":{"name":"str"}}],[5,"short_now","","Generate a timstamp string representing now (UTC).",null,{"inputs":[],"output":{"name":"str"}}],[5,"sha","","Generate a SHA string",null,{"inputs":[],"output":{"name":"str"}}],[5,"short_sha","","Generate a short SHA string",null,{"inputs":[],"output":{"name":"str"}}],[5,"commit_date","","Generate the commit date string",null,{"inputs":[],"output":{"name":"str"}}],[5,"target","","Generate the target triple string",null,{"inputs":[],"output":{"name":"str"}}],[5,"semver","","Generate a semver string",null,{"inputs":[],"output":{"name":"str"}}],[5,"rustc_version","","Returns compiler version.",null,{"inputs":[],"output":{"name":"str"}}],[5,"version","","Get the standard version string for this software.",null,{"inputs":[],"output":{"name":"string"}}],[5,"version_data","","Get the standard version data for this software.",null,{"inputs":[],"output":{"name":"bytes"}}],[11,"eq","","",99,null],[11,"clone","","",99,null],[11,"fmt","","",99,null],[0,"vector","ethcore_util","Vector extensions.",null,null],[8,"SharedPrefix","ethcore_util::vector","Returns len of prefix shared with elem",null,null],[10,"shared_prefix_len","","Get common prefix length",100,null],[0,"sha3","ethcore_util","Wrapper around tiny-keccak crate as well as common hash constants.",null,null],[5,"sha3","ethcore_util::sha3","Calculate SHA3 of given stream.",null,{"inputs":[{"name":"bufread"}],"output":{"name":"result"}}],[17,"SHA3_EMPTY","","Get the SHA3 (i.e. Keccak) hash of the empty bytes string.",null,null],[17,"SHA3_NULL_RLP","","The SHA3 of the RLP encoding of empty data.",null,null],[17,"SHA3_EMPTY_LIST_RLP","","The SHA3 of the RLP encoding of empty list.",null,null],[8,"Hashable","","Types implementing this trait are sha3able.",null,null],[10,"sha3","","Calculate SHA3 of this object.",101,null],[11,"sha3_into","","Calculate SHA3 of this object and place result into dest.",101,null],[0,"hashdb","ethcore_util","Database of byte-slices keyed to their Keccak hash.",null,null],[6,"DBValue","ethcore_util::hashdb","`HashDB` value type.",null,null],[8,"HashDB","","Trait modelling datastore keyed by a 32-byte Keccak hash.",null,null],[10,"keys","","Get the keys in the database together with number of underlying references.",102,null],[10,"get","","Look up a given hash into the bytes that hash to it, returning None if the\nhash is not known.",102,null],[10,"contains","","Check for the existance of a hash-key.",102,null],[10,"insert","","Insert a datum item into the DB and return the datum&#39;s hash for a later lookup. Insertions\nare counted and the equivalent number of `remove()`s must be performed before the data\nis considered dead.",102,null],[10,"emplace","","Like `insert()` , except you provide the key and the data is all moved.",102,null],[10,"remove","","Remove a datum previously inserted. Insertions can be &quot;owed&quot; such that the same number of `insert()`s may\nhappen without the data being eventually being inserted into the DB.",102,null],[11,"insert_aux","","Insert auxiliary data into hashdb.",102,null],[11,"get_aux","","Get auxiliary data from hashdb.",102,null],[11,"remove_aux","","Removes auxiliary data from hashdb.",102,null],[8,"AsHashDB","","Upcast trait.",null,null],[10,"as_hashdb","","Perform upcast to HashDB for anything that derives from HashDB.",103,null],[10,"as_hashdb_mut","","Perform mutable upcast to HashDB for anything that derives from HashDB.",103,null],[0,"memorydb","ethcore_util","Reference-counted memory-based `HashDB` implementation.",null,null],[3,"MemoryDB","ethcore_util::memorydb","Reference-counted memory-based `HashDB` implementation.",null,null],[11,"default","","",104,{"inputs":[],"output":{"name":"memorydb"}}],[11,"clone","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"new","","Create a new instance of the memory DB.",104,{"inputs":[],"output":{"name":"memorydb"}}],[11,"clear","","Clear all data from the database.",104,null],[11,"purge","","Purge all zero-referenced data from the database.",104,null],[11,"drain","","Return the internal map of hashes to data, clearing the current state.",104,null],[11,"drain_aux","","Return the internal map of auxiliary data, clearing the current state.",104,null],[11,"raw","","Grab the raw information associated with a key. Returns None if the key\ndoesn&#39;t exist.",104,null],[11,"mem_used","","Returns the size of allocated heap memory",104,null],[11,"remove_and_purge","","Remove an element and delete it from storage if reference count reaches zero.",104,null],[11,"consolidate","","Consolidate all the entries of `other` into `self`.",104,null],[11,"get","","",104,null],[11,"keys","","",104,null],[11,"contains","","",104,null],[11,"insert","","",104,null],[11,"emplace","","",104,null],[11,"remove","","",104,null],[11,"insert_aux","","",104,null],[11,"get_aux","","",104,null],[11,"remove_aux","","",104,null],[0,"migration","ethcore_util","DB Migration module.",null,null],[3,"Config","ethcore_util::migration","Migration config.",null,null],[12,"batch_size","","Defines how many elements should be migrated at once.",105,null],[12,"compaction_profile","","Database compaction profile.",105,null],[3,"Batch","","A batch of key-value pairs to be written into the database.",null,null],[3,"Manager","","Manages database migration.",null,null],[3,"Progress","","Prints a dot every `max` ticks",null,null],[4,"Error","","Migration error.",null,null],[13,"CannotAddMigration","","Error returned when it is impossible to add new migration rules.",106,null],[13,"MigrationImpossible","","Error returned when migration from specific version can not be performed.",106,null],[13,"Io","","Io Error.",106,null],[13,"Custom","","Custom error.",106,null],[8,"Migration","","A generalized migration from the given db to a destination db.",null,null],[11,"pre_columns","","Number of columns in the database before the migration.",107,null],[10,"columns","","Number of columns in database after the migration.",107,null],[10,"version","","Version of the database after the migration.",107,null],[10,"migrate","","Migrate a source to a destination.",107,null],[8,"SimpleMigration","","A simple migration over key-value pairs.",null,null],[10,"columns","","Number of columns in database after the migration.",108,null],[10,"version","","Version of database after the migration.",108,null],[10,"simple_migrate","","Should migrate existing object to new database.\nReturns `None` if the object does not exist in new version of database.",108,null],[11,"clone","","",105,null],[11,"default","","",105,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Make a new batch with the given config.",109,{"inputs":[{"name":"config"},{"name":"option"}],"output":{"name":"self"}}],[11,"insert","","Insert a value into the batch, committing if necessary.",109,null],[11,"commit","","Commit all the items in the batch to the given database.",109,null],[11,"fmt","","",106,null],[11,"fmt","","",106,null],[11,"from","","",106,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",106,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"new","","Creates new migration manager with given configuration.",110,{"inputs":[{"name":"config"}],"output":{"name":"self"}}],[11,"add_migration","","Adds new migration rules.",110,null],[11,"execute","","Performs migration in order, starting with a source path, migrating between two temporary databases,\nand producing a path where the final migration lives.",110,null],[11,"is_needed","","Returns true if migration is needed.",110,null],[11,"default","","",111,{"inputs":[],"output":{"name":"self"}}],[11,"tick","","Tick progress meter.",111,null],[0,"overlaydb","ethcore_util","Disk-backed `HashDB` implementation.",null,null],[3,"OverlayDB","ethcore_util::overlaydb","Implementation of the `HashDB` trait for a disk-backed database with a memory overlay.",null,null],[11,"clone","","",112,null],[11,"new","","Create a new instance of OverlayDB given a `backing` database.",112,{"inputs":[{"name":"arc"},{"name":"option"}],"output":{"name":"overlaydb"}}],[11,"commit_to_batch","","Commit all operations to given batch.",112,null],[11,"revert","","Revert all operations on this object (i.e. `insert()`s and `remove()`s) since the\nlast `commit()`.",112,null],[11,"commit_refs","","Get the number of references that would be committed.",112,null],[11,"keys","","",112,null],[11,"get","","",112,null],[11,"contains","","",112,null],[11,"insert","","",112,null],[11,"emplace","","",112,null],[11,"remove","","",112,null],[0,"journaldb","ethcore_util","`JournalDB` interface and implementation.",null,null],[4,"Algorithm","ethcore_util::journaldb","A journal database algorithm.",null,null],[13,"Archive","","Keep all keys forever.",113,null],[13,"EarlyMerge","","Ancient and recent history maintained separately; recent history lasts for particular\nnumber of blocks.",113,null],[13,"OverlayRecent","","Ancient and recent history maintained separately; recent history lasts for particular\nnumber of blocks.",113,null],[13,"RefCounted","","Ancient and recent history maintained separately; recent history lasts for particular\nnumber of blocks.",113,null],[5,"new","","Create a new `JournalDB` trait object.",null,{"inputs":[{"name":"arc"},{"name":"algorithm"},{"name":"option"}],"output":{"name":"box"}}],[0,"traits","","Export the journaldb module.\nDisk-backed `HashDB` implementation.",null,null],[8,"JournalDB","ethcore_util::journaldb::traits","A `HashDB` which can manage a short-term journal potentially containing many forks of mutually\nexclusive actions.",null,null],[10,"boxed_clone","","Return a copy of ourself, in a box.",114,null],[10,"mem_used","","Returns heap memory size used",114,null],[10,"is_empty","","Check if this database has any commits",114,null],[11,"earliest_era","","Get the earliest era in the DB. None if there isn&#39;t yet any data in there.",114,null],[10,"latest_era","","Get the latest era in the DB. None if there isn&#39;t yet any data in there.",114,null],[10,"journal_under","","Journal recent database operations as being associated with a given era and id.",114,null],[10,"mark_canonical","","Mark a given block as canonical, indicating that competing blocks&#39; states may be pruned out.",114,null],[10,"inject","","Commit all queued insert and delete operations without affecting any journalling -- this requires that all insertions\nand deletions are indeed canonical and will likely lead to an invalid database if that assumption is violated.",114,null],[10,"state","","State data query",114,null],[11,"is_pruned","","Whether this database is pruned.",114,null],[10,"backing","","Get backing database.",114,null],[11,"flush","","Clear internal strucutres. This should called after changes have been written\nto the backing strage",114,null],[10,"consolidate","","Consolidate all the insertions and deletions in the given memory overlay.",114,null],[11,"fmt","ethcore_util::journaldb","",113,null],[11,"eq","","",113,null],[11,"clone","","",113,null],[11,"default","","",113,{"inputs":[],"output":{"name":"algorithm"}}],[11,"from_str","","",113,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"as_str","","Returns static str describing journal database algorithm.",113,null],[11,"as_internal_name_str","","Returns static str describing journal database algorithm.",113,null],[11,"is_stable","","Returns true if pruning strategy is stable",113,null],[11,"all_types","","Returns all algorithm types.",113,{"inputs":[],"output":{"name":"vec"}}],[11,"fmt","","",113,null],[0,"kvdb","ethcore_util","Key-Value store abstraction with `RocksDB` backend.",null,null],[3,"DBTransaction","ethcore_util::kvdb","Write transaction. Batches a sequence of put/delete operations for efficiency.",null,null],[3,"CompactionProfile","","Compaction profile for the database settings",null,null],[12,"initial_file_size","","L0-L1 target file size",115,null],[12,"file_size_multiplier","","L2-LN target file size multiplier",115,null],[12,"write_rate_limit","","rate limiter for background flushes and compactions, bytes/sec, if any",115,null],[3,"DatabaseConfig","","Database configuration",null,null],[12,"max_open_files","","Max number of open files.",116,null],[12,"cache_sizes","","Cache sizes (in MiB) for specific columns.",116,null],[12,"compaction","","Compaction profile",116,null],[12,"columns","","Set number of columns",116,null],[12,"wal","","Should we keep WAL enabled?",116,null],[3,"DatabaseIterator","","Database iterator for flushed data only",null,null],[3,"Database","","Key-Value database.",null,null],[5,"rotational_from_df_output","","Given output of df command return Linux rotational flag file path.",null,{"inputs":[{"name":"vec"}],"output":{"name":"option"}}],[11,"new","","Create new transaction.",117,{"inputs":[{"name":"database"}],"output":{"name":"dbtransaction"}}],[11,"put","","Insert a key-value pair in the transaction. Any existing value value will be overwritten upon write.",117,null],[11,"put_vec","","Insert a key-value pair in the transaction. Any existing value value will be overwritten upon write.",117,null],[11,"put_compressed","","Insert a key-value pair in the transaction. Any existing value value will be overwritten upon write.\nValue will be RLP-compressed on flush",117,null],[11,"delete","","Delete value by key.",117,null],[11,"clone","","",115,null],[11,"eq","","",115,null],[11,"ne","","",115,null],[11,"fmt","","",115,null],[11,"default","","Default profile suitable for most storage",115,{"inputs":[],"output":{"name":"compactionprofile"}}],[11,"auto","","Attempt to determine the best profile automatically, only Linux for now.",115,{"inputs":[{"name":"path"}],"output":{"name":"compactionprofile"}}],[11,"ssd","","Default profile suitable for SSD storage",115,{"inputs":[],"output":{"name":"compactionprofile"}}],[11,"hdd","","Slow HDD compaction profile",115,{"inputs":[],"output":{"name":"compactionprofile"}}],[11,"clone","","",116,null],[11,"with_columns","","Create new `DatabaseConfig` with default parameters and specified set of columns.\nNote that cache sizes must be explicitly set.",116,{"inputs":[{"name":"option"}],"output":{"name":"self"}}],[11,"set_cache","","Set the column cache size in MiB.",116,null],[11,"default","","",116,{"inputs":[],"output":{"name":"databaseconfig"}}],[11,"next","","",118,null],[11,"open_default","","Open database with default settings.",119,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"open","","Open database file. Creates if it does not exist.",119,{"inputs":[{"name":"databaseconfig"},{"name":"str"}],"output":{"name":"result"}}],[11,"transaction","","Creates new transaction for this database.",119,null],[11,"write_buffered","","Commit transaction to database.",119,null],[11,"flush","","Commit buffered changes to database.",119,null],[11,"write","","Commit transaction to database.",119,null],[11,"get","","Get value by key.",119,null],[11,"get_by_prefix","","Get value by partial key. Prefix size should match configured prefix size. Only searches flushed values.",119,null],[11,"iter","","Get database iterator for flushed data.",119,null],[11,"restore","","Restore the database from a copy at given path.",119,null],[11,"drop","","",119,null],[0,"triehash","ethcore_util","Generetes trie root.",null,null],[5,"ordered_trie_root","ethcore_util::triehash","Generates a trie root hash for a vector of values",null,{"inputs":[{"name":"i"}],"output":{"name":"h256"}}],[5,"trie_root","","Generates a trie root hash for a vector of key-values",null,{"inputs":[{"name":"vec"}],"output":{"name":"h256"}}],[5,"sec_trie_root","","Generates a key-hashed (secure) trie root hash for a vector of key-values.",null,{"inputs":[{"name":"vec"}],"output":{"name":"h256"}}],[0,"trie","ethcore_util","Trie interface and implementation.",null,null],[3,"FatDB","ethcore_util::trie","A `Trie` implementation which hashes keys and uses a generic `HashDB` backing database.\nAdditionaly it stores inserted hash-key mappings for later retrieval.",null,null],[3,"FatDBIterator","","Itarator over inserted pairs of key values.",null,null],[3,"FatDBMut","","A mutable `Trie` implementation which hashes keys and uses a generic `HashDB` backing database.\nAdditionaly it stores inserted hash-key mappings for later retrieval.",null,null],[3,"TrieFactory","","Trie factory.",null,null],[4,"TrieError","","Trie Errors.",null,null],[13,"InvalidStateRoot","","Attempted to create a trie with a state root not in the DB.",120,null],[13,"IncompleteDatabase","","Trie item not found in the database,",120,null],[4,"TrieSpec","","Trie types",null,null],[13,"Generic","","Generic trie.",121,null],[13,"Secure","","Secure trie.",121,null],[13,"Fat","","Secure trie with fat database.",121,null],[4,"TrieKinds","","All different kinds of tries.\nThis is used to prevent a heap allocation for every created trie.",null,null],[13,"Generic","","A generic trie db.",122,null],[13,"Secure","","A secure trie db.",122,null],[13,"Fat","","A fat trie db.",122,null],[0,"standardmap","","Export the standardmap module.\nKey-value datastore with a modified Merkle tree.",null,null],[3,"StandardMap","ethcore_util::trie::standardmap","Standard test map for profiling tries.",null,null],[12,"alphabet","","The alphabet to use for keys.",123,null],[12,"min_key","","Minimum size of key.",123,null],[12,"journal_key","","Delta size of key.",123,null],[12,"value_mode","","Mode of value generation.",123,null],[12,"count","","Number of keys.",123,null],[4,"Alphabet","","Alphabet to use when creating words for insertion into tries.",null,null],[13,"All","","All values are allowed in each bytes of the key.",124,null],[13,"Low","","Only a 6 values (&#39;a&#39; - &#39;f&#39;) are chosen to compose the key.",124,null],[13,"Mid","","Quite a few values (around 32) are chosen to compose the key.",124,null],[13,"Custom","","A set of bytes given is used to compose the key.",124,null],[4,"ValueMode","","Means of determining the value.",null,null],[13,"Mirror","","Same as the key.",125,null],[13,"Random","","Randomly (50:50) 1 or 32 byte randomly string.",125,null],[13,"Index","","RLP-encoded index.",125,null],[11,"make","","Create the standard map (set of keys and values) for the object&#39;s fields.",123,null],[11,"make_with","","Create the standard map (set of keys and values) for the object&#39;s fields, using the given seed.",123,null],[0,"journal","ethcore_util::trie","Export the journal module.",null,null],[3,"Score","ethcore_util::trie::journal","How many insertions and removals were done in an `apply` operation.",null,null],[12,"inserts","","Number of insertions.",126,null],[12,"removes","","Number of removals.",126,null],[3,"Journal","","A journal of operations on the backing database.",null,null],[11,"fmt","","",127,null],[11,"default","","",127,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Create a new, empty, object.",127,{"inputs":[],"output":{"name":"journal"}}],[11,"new_node","","Given the RLP that encodes a node, append a reference to that node `out` and leave `journal`\nsuch that the reference is valid, once applied.",127,null],[11,"delete_node_sha3","","Given the RLP that encodes a now-unused node, leave `journal` in such a state that it is noted.",127,null],[11,"delete_node","","Register an RLP-encoded node for deletion (given a slice), if it needs to be deleted.",127,null],[11,"apply","","Apply this journal to the HashDB `db` and return the number of insertions and removals done.",127,null],[0,"node","ethcore_util::trie","Export the node module.",null,null],[4,"Node","ethcore_util::trie::node","Type of node in the trie and essential information thereof.",null,null],[13,"Empty","","Null trie node; could be an empty root or an empty branch entry.",128,null],[13,"Leaf","","Leaf node; has key slice and value. Value may not be empty.",128,null],[13,"Extension","","Extension node; has key slice and node data. Data may not be null.",128,null],[13,"Branch","","Branch node; has array of 16 child nodes (each possibly null) and an optional immediate node data.",128,null],[6,"NodeKey","","Partial node key type.",null,null],[11,"eq","","",128,null],[11,"ne","","",128,null],[11,"fmt","","",128,null],[11,"clone","","",128,null],[11,"decoded","","Decode the `node_rlp` and return the Node.",128,null],[11,"encoded","","Encode the node into RLP.",128,null],[11,"encoded_and_added","","Encode the node, adding it to `journal` if necessary and return the RLP valid for\ninsertion into a parent node.",128,null],[0,"triedb","ethcore_util::trie","Export the triedb module.",null,null],[3,"TrieDB","ethcore_util::trie::triedb","A `Trie` implementation using a generic `HashDB` backing database.",null,null],[12,"hash_count","","The number of hashes performed so far in operations on this trie.",129,null],[3,"TrieDBIterator","","Iterator for going through all values in the trie.",null,null],[11,"new","","Create a new trie with the backing database `db` and `root`\nReturns an error if `root` does not exist",129,{"inputs":[{"name":"hashdb"},{"name":"h256"}],"output":{"name":"result"}}],[11,"db","","Get the backing database.",129,null],[11,"keys","","Determine all the keys in the backing database that belong to the trie.",129,null],[11,"to_map","","Convert a vector of hashes to a hashmap of hash to occurrences.",129,{"inputs":[{"name":"vec"}],"output":{"name":"hashmap"}}],[11,"db_items_remaining","","Determine occurrences of items in the backing database which are not related to this\ntrie.",129,null],[11,"clone","","",130,null],[11,"new","","Create a new iterator.",130,{"inputs":[{"name":"triedb"}],"output":{"name":"result"}}],[11,"next","","",130,null],[11,"iter","","",129,null],[11,"root","","",129,null],[11,"get_recorded","","",129,null],[11,"fmt","","",129,null],[0,"triedbmut","ethcore_util::trie","Export the triedbmut module.\nIn-memory trie representation.",null,null],[3,"TrieDBMut","ethcore_util::trie::triedbmut","A `Trie` implementation using a generic `HashDB` backing database.",null,null],[12,"hash_count","","The number of hash operations this trie has performed.\nNote that none are performed until changes are committed.",131,null],[11,"new","","Create a new trie with backing database `db` and empty `root`.",131,{"inputs":[{"name":"hashdb"},{"name":"h256"}],"output":{"name":"self"}}],[11,"from_existing","","Create a new trie with the backing database `db` and `root.\nReturns an error if `root` does not exist.",131,{"inputs":[{"name":"hashdb"},{"name":"h256"}],"output":{"name":"result"}}],[11,"db","","Get the backing database.",131,null],[11,"db_mut","","Get the backing database mutably.",131,null],[11,"commit","","Commit the in-memory changes to disk, freeing their storage and\nupdating the state root.",131,null],[11,"root","","",131,null],[11,"is_empty","","",131,null],[11,"get","","",131,null],[11,"insert","","",131,null],[11,"remove","","",131,null],[11,"drop","","",131,null],[0,"sectriedb","ethcore_util::trie","Export the sectriedb module.",null,null],[3,"SecTrieDB","ethcore_util::trie::sectriedb","A `Trie` implementation which hashes keys and uses a generic `HashDB` backing database.",null,null],[11,"new","","Create a new trie with the backing database `db` and empty `root`",132,{"inputs":[{"name":"hashdb"},{"name":"h256"}],"output":{"name":"result"}}],[11,"raw","","Get a reference to the underlying raw `TrieDB` struct.",132,null],[11,"raw_mut","","Get a mutable reference to the underlying raw `TrieDB` struct.",132,null],[11,"iter","","",132,null],[11,"root","","",132,null],[11,"contains","","",132,null],[11,"get_recorded","","",132,null],[0,"sectriedbmut","ethcore_util::trie","Export the sectriedbmut module.",null,null],[3,"SecTrieDBMut","ethcore_util::trie::sectriedbmut","A mutable `Trie` implementation which hashes keys and uses a generic `HashDB` backing database.",null,null],[11,"new","","Create a new trie with the backing database `db` and empty `root`\nInitialise to the state entailed by the genesis block.\nThis guarantees the trie is built correctly.",133,{"inputs":[{"name":"hashdb"},{"name":"h256"}],"output":{"name":"self"}}],[11,"from_existing","","Create a new trie with the backing database `db` and `root`.",133,{"inputs":[{"name":"hashdb"},{"name":"h256"}],"output":{"name":"result"}}],[11,"db","","Get the backing database.",133,null],[11,"db_mut","","Get the backing database.",133,null],[11,"root","","",133,null],[11,"is_empty","","",133,null],[11,"contains","","",133,null],[11,"get","","",133,null],[11,"insert","","",133,null],[11,"remove","","",133,null],[0,"recorder","ethcore_util::trie","Trie query recording.",null,null],[3,"Record","ethcore_util::trie::recorder","A record of a visited node.",null,null],[12,"depth","","The depth of this node.",134,null],[12,"data","","The raw data of the node.",134,null],[12,"hash","","The hash of the data.",134,null],[3,"NoOp","","A no-op trie recorder. This ignores everything which is thrown at it.",null,null],[3,"BasicRecorder","","A simple recorder. Does nothing fancy but fulfills the `Recorder` interface\nproperly.",null,null],[8,"Recorder","","Trie node recorder.",null,null],[10,"record","","Record that the given node has been visited.",135,null],[10,"drain","","Drain all accepted records from the recorder in ascending order by depth.",135,null],[11,"eq","","",134,null],[11,"ne","","",134,null],[11,"fmt","","",134,null],[11,"clone","","",134,null],[11,"record","","",136,null],[11,"drain","","",136,null],[11,"default","","",137,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Create a new `BasicRecorder` which records all given nodes.",137,{"inputs":[],"output":{"name":"self"}}],[11,"with_depth","","Create a `BasicRecorder` which only records nodes beyond a given depth.",137,{"inputs":[{"name":"u32"}],"output":{"name":"self"}}],[11,"record","","",137,null],[11,"drain","","",137,null],[11,"new","ethcore_util::trie","Create a new trie with the backing database `db` and empty `root`\nInitialise to the state entailed by the genesis block.\nThis guarantees the trie is built correctly.",138,{"inputs":[{"name":"hashdb"},{"name":"h256"}],"output":{"name":"result"}}],[11,"db","","Get the backing database.",138,null],[11,"iter","","",138,null],[11,"root","","",138,null],[11,"contains","","",138,null],[11,"get_recorded","","",138,null],[11,"new","","Creates new iterator.",139,{"inputs":[{"name":"triedb"}],"output":{"name":"result"}}],[11,"next","","",139,null],[11,"new","","Create a new trie with the backing database `db` and empty `root`\nInitialise to the state entailed by the genesis block.\nThis guarantees the trie is built correctly.",140,{"inputs":[{"name":"hashdb"},{"name":"h256"}],"output":{"name":"self"}}],[11,"from_existing","","Create a new trie with the backing database `db` and `root`.",140,{"inputs":[{"name":"hashdb"},{"name":"h256"}],"output":{"name":"result"}}],[11,"db","","Get the backing database.",140,null],[11,"db_mut","","Get the backing database.",140,null],[11,"root","","",140,null],[11,"is_empty","","",140,null],[11,"contains","","",140,null],[11,"get","","",140,null],[11,"insert","","",140,null],[11,"remove","","",140,null],[6,"Result","","Trie result type. Boxed to avoid copying around extra space for `H256`s on successful queries.",null,null],[6,"TrieItem","","Trie-Item type.",null,null],[8,"Trie","","A key-value datastore implemented as a database-backed modified Merkle tree.",null,null],[10,"root","","Return the root of the trie.",141,null],[11,"is_empty","","Is the trie empty?",141,null],[11,"contains","","Does the trie contain a given key?",141,null],[11,"get","","What is the value of the given key in this trie?",141,null],[10,"get_recorded","","Query the value of the given key in this trie while recording visited nodes\nto the given recorder. If the query fails, the nodes passed to the recorder are unspecified.",141,null],[10,"iter","","Returns an iterator over elements of trie.",141,null],[8,"TrieMut","","A key-value datastore implemented as a database-backed modified Merkle tree.",null,null],[10,"root","","Return the root of the trie.",142,null],[10,"is_empty","","Is the trie empty?",142,null],[11,"contains","","Does the trie contain a given key?",142,null],[10,"get","","What is the value of the given key in this trie?",142,null],[10,"insert","","Insert a `key`/`value` pair into the trie. An `empty` value is equivalent to removing\n`key` from the trie.",142,null],[10,"remove","","Remove a `key` from the trie. Equivalent to making it equal to the empty\nvalue.",142,null],[11,"fmt","","",120,null],[11,"eq","","",120,null],[11,"ne","","",120,null],[11,"clone","","",120,null],[11,"fmt","","",120,null],[11,"fmt","","",121,null],[11,"eq","","",121,null],[11,"clone","","",121,null],[11,"default","","",121,{"inputs":[],"output":{"name":"triespec"}}],[11,"default","","",143,{"inputs":[],"output":{"name":"triefactory"}}],[11,"clone","","",143,null],[11,"root","","",122,null],[11,"is_empty","","",122,null],[11,"contains","","",122,null],[11,"get_recorded","","",122,null],[11,"iter","","",122,null],[11,"new","","Creates new factory.",143,{"inputs":[{"name":"triespec"}],"output":{"name":"self"}}],[11,"readonly","","Create new immutable instance of Trie.",143,null],[11,"create","","Create new mutable instance of Trie.",143,null],[11,"from_existing","","Create new mutable instance of trie and check for errors.",143,null],[11,"is_fat","","Returns true iff the trie DB is a fat DB (allows enumeration of keys).",143,null],[0,"nibbleslice","ethcore_util","Nibble-orientated view onto byte-slice, allowing nibble-precision offsets.",null,null],[3,"NibbleSlice","ethcore_util::nibbleslice","Nibble-orientated view onto byte-slice, allowing nibble-precision offsets.",null,null],[3,"NibbleSliceIterator","","Iterator type for a nibble slice.",null,null],[11,"clone","","",144,null],[11,"cmp","","",144,null],[11,"next","","",145,null],[11,"new","","Create a new nibble slice with the given byte-slice.",144,null],[11,"new_offset","","Create a new nibble slice with the given byte-slice with a nibble offset.",144,null],[11,"new_composed","","Create a composed nibble slice; one followed by the other.",144,{"inputs":[{"name":"nibbleslice"},{"name":"nibbleslice"}],"output":{"name":"self"}}],[11,"iter","","Get an iterator for the series of nibbles.",144,null],[11,"from_encoded","","Create a new nibble slice from the given HPE encoded data (e.g. output of `encoded()`).",144,null],[11,"is_empty","","Is this an empty slice?",144,null],[11,"len","","Get the length (in nibbles, naturally) of this slice.",144,null],[11,"at","","Get the nibble at position `i`.",144,null],[11,"mid","","Return object which represents a view on to this slice (further) offset by `i` nibbles.",144,null],[11,"starts_with","","Do we start with the same nibbles as the whole of `them`?",144,null],[11,"common_prefix","","How many of the same nibbles at the beginning do we match with `them`?",144,null],[11,"encoded","","Encode while nibble slice in prefixed hex notation, noting whether it `is_leaf`.",144,null],[11,"encoded_leftmost","","Encode only the leftmost `n` bytes of the nibble slice in prefixed hex notation,\nnoting whether it `is_leaf`.",144,null],[11,"eq","","",144,null],[11,"partial_cmp","","",144,null],[11,"fmt","","",144,null],[0,"nibblevec","ethcore_util","An owning, nibble-oriented byte vector.",null,null],[3,"NibbleVec","ethcore_util::nibblevec","Owning, nibble-oriented byte vector. Counterpart to `NibbleSlice`.",null,null],[11,"default","","",146,{"inputs":[],"output":{"name":"nibblevec"}}],[11,"eq","","",146,null],[11,"ne","","",146,null],[11,"partial_cmp","","",146,null],[11,"lt","","",146,null],[11,"le","","",146,null],[11,"gt","","",146,null],[11,"ge","","",146,null],[11,"cmp","","",146,null],[11,"fmt","","",146,null],[11,"new","","Make a new `NibbleVec`",146,{"inputs":[],"output":{"name":"self"}}],[11,"with_capacity","","Make a `NibbleVec` with capacity for `n` nibbles.",146,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"len","","Length of the `NibbleVec`",146,null],[11,"is_empty","","Retrurns true if `NibbleVec` has zero length",146,null],[11,"capacity","","Capacity of the `NibbleVec`.",146,null],[11,"at","","Try to get the nibble at the given offset.",146,null],[11,"push","","Push a nibble onto the `NibbleVec`. Ignores the high 4 bits.",146,null],[11,"pop","","Try to pop a nibble off the `NibbleVec`. Fails if len == 0.",146,null],[11,"as_nibbleslice","","Try to treat this `NibbleVec` as a `NibbleSlice`. Works only if len is even.",146,null],[11,"inner","","Get the underlying byte slice.",146,null],[11,"from","","",146,{"inputs":[{"name":"nibbleslice"}],"output":{"name":"self"}}],[0,"semantic_version","ethcore_util","Semantic version formatting and comparing.",null,null],[3,"SemanticVersion","ethcore_util::semantic_version","A version value with strict meaning. Use `as_u32` to convert to a simple integer.",null,null],[12,"major","","Major version - API/feature removals &amp; breaking changes.",147,null],[12,"minor","","Minor version - API/feature additions.",147,null],[12,"tiny","","Tiny version - bug fixes.",147,null],[11,"new","","Create a new object.",147,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"semanticversion"}}],[11,"as_u32","","Convert to a `u32` representation.",147,null],[0,"log","ethcore_util","Common log helper functions",null,null],[4,"Colour","ethcore_util::log","A colour is one specific type of ANSI escape code, and can refer\nto either the foreground or background colour.",null,null],[13,"Black","","Colour #0 (foreground code `30`, background code `40`).",148,null],[13,"Red","","Colour #1 (foreground code `31`, background code `41`).",148,null],[13,"Green","","Colour #2 (foreground code `32`, background code `42`).",148,null],[13,"Yellow","","Colour #3 (foreground code `33`, background code `43`).",148,null],[13,"Blue","","Colour #4 (foreground code `34`, background code `44`).",148,null],[13,"Purple","","Colour #5 (foreground code `35`, background code `45`).",148,null],[13,"Cyan","","Colour #6 (foreground code `36`, background code `46`).",148,null],[13,"White","","Colour #7 (foreground code `37`, background code `47`).",148,null],[13,"Fixed","","A colour number from 0 to 255, for use in 256-colour terminal\nenvironments.",148,null],[3,"Style","","A style is a collection of properties that can format a string\nusing ANSI escape codes.",null,null],[3,"RotatingLogger","","Logger implementation that keeps up to `LOG_SIZE` log elements.",null,null],[5,"init_log","","Intialize log with default settings",null,{"inputs":[],"output":null}],[11,"new","","Creates new `RotatingLogger` with given levels.\nIt does not enforce levels - it&#39;s just read only.",149,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"append","","Append new log entry",149,null],[11,"levels","","Return levels",149,null],[11,"logs","","Return logs",149,null],[0,"path","ethcore_util","Path utilities",null,null],[5,"config_path","ethcore_util::path","Get the config path for application `name`.\n`name` should be capitalized, e.g. `&quot;Ethereum&quot;`, `&quot;Parity&quot;`.",null,{"inputs":[{"name":"str"}],"output":{"name":"pathbuf"}}],[5,"config_path_with","","Get the specific folder inside a config path.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"pathbuf"}}],[5,"restrict_permissions_owner","","Restricts the permissions of given path only to the owner.",null,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[0,"ethereum","","Default ethereum paths",null,null],[5,"default","ethcore_util::path::ethereum","Default path for ethereum installation on Mac Os",null,{"inputs":[],"output":{"name":"pathbuf"}}],[5,"test","","Default path for ethereum installation (testnet)",null,{"inputs":[],"output":{"name":"pathbuf"}}],[5,"with_default","","Get the specific folder inside default ethereum installation",null,{"inputs":[{"name":"str"}],"output":{"name":"pathbuf"}}],[5,"with_testnet","","Get the specific folder inside default ethereum installation configured for testnet",null,{"inputs":[{"name":"str"}],"output":{"name":"pathbuf"}}],[0,"snappy","ethcore_util","Snappy compression bindings.",null,null],[3,"InvalidInput","ethcore_util::snappy","Attempted to decompress an uncompressed buffer.",null,null],[5,"max_compressed_len","","The maximum compressed length given a size.",null,{"inputs":[{"name":"usize"}],"output":{"name":"usize"}}],[5,"decompressed_len","","How large the given data will be when decompressed.",null,null],[5,"compress","","Compress a buffer using snappy.",null,null],[5,"compress_into","","Compress a buffer using snappy, writing the result into\nthe given output buffer, growing it if necessary.\nOtherwise, returns the length of the compressed data.",null,null],[5,"decompress","","Decompress a buffer using snappy. Will return an error if the buffer is not snappy-compressed.",null,null],[5,"decompress_into","","Decompress a buffer using snappy, writing the result into\nthe given output buffer, growing it if necessary.\nWill error if the input buffer is not snappy-compressed.\nOtherwise, returns the length of the decompressed data.",null,null],[5,"validate_compressed_buffer","","Validate a compressed buffer. True if valid, false if not.",null,null],[11,"fmt","","",150,null],[11,"fmt","","",150,null],[0,"stats","ethcore_util","Statistical functions.",null,null],[3,"Histogram","ethcore_util::stats","Discretised histogram.",null,null],[12,"bucket_bounds","","Bounds of each bucket.",151,null],[12,"counts","","Count within each bucket.",151,null],[11,"fmt","","",151,null],[11,"eq","","",151,null],[11,"ne","","",151,null],[11,"new","","Histogram of a sorted corpus if it at least spans the buckets. Bounds are left closed.",151,null],[0,"cache","ethcore_util","Lru-cache related utilities as quick-and-dirty wrappers around the lru-cache\ncrate.",null,null],[3,"MemoryLruCache","ethcore_util::cache","An LRU-cache which operates on memory used.",null,null],[11,"new","","Create a new cache with a maximum size in bytes.",152,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"insert","","Insert an item.",152,null],[11,"get_mut","","Get a reference to an item in the cache. It is a logic error for its\nheap size to be altered while borrowed.",152,null],[11,"current_size","","Currently-used size of values in bytes.",152,null],[11,"new","ethcore_util","Create an instance with given name.",153,{"inputs":[{"name":"str"}],"output":{"name":"perftimer"}}],[11,"stop","","Stop the timer and print elapsed time on trace level with `perf` target.",153,null],[11,"drop","","",153,null],[6,"Address","","160-bit integer representing account address",null,null],[6,"Secret","","Secret",null,null],[14,"xjson","","",null,null],[14,"vec_into","","",null,null],[14,"hash_map","","",null,null],[14,"hash_map_into","","",null,null],[14,"map","","",null,null],[14,"map_into","","",null,null],[14,"flush","","",null,null],[14,"flushln","","",null,null],[11,"shift_bloomed","ethcore_util::common::hash","",83,null],[11,"bloom_part","","",83,null],[11,"contains_bloomed","","",83,null],[11,"from_bloomed","","",83,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"shift_bloomed","","",85,null],[11,"bloom_part","","",85,null],[11,"contains_bloomed","","",85,null],[11,"from_bloomed","","",85,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"shift_bloomed","","",86,null],[11,"bloom_part","","",86,null],[11,"contains_bloomed","","",86,null],[11,"from_bloomed","","",86,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"shift_bloomed","","",88,null],[11,"bloom_part","","",88,null],[11,"contains_bloomed","","",88,null],[11,"from_bloomed","","",88,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"shift_bloomed","","",89,null],[11,"bloom_part","","",89,null],[11,"contains_bloomed","","",89,null],[11,"from_bloomed","","",89,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"shift_bloomed","","",91,null],[11,"bloom_part","","",91,null],[11,"contains_bloomed","","",91,null],[11,"from_bloomed","","",91,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"start","ethcore_util::standard::ops","",53,null],[11,"end","","",54,null],[11,"start","","",52,null],[11,"end","","",52,null],[11,"clone","ethcore_util::standard","",77,null],[11,"clone","","",74,null],[11,"description","","",77,null],[11,"encode","ethcore_util::standard::option","",70,null],[11,"encode","ethcore_util::standard","",154,null],[11,"encode","","",155,null],[11,"encode","","",74,null],[11,"fmt","","",77,null],[11,"fmt","","Encodes a json value into a string",74,null],[11,"index","","",74,null],[11,"index","","",74,null],[11,"eq","","",74,null],[11,"ne","","",74,null],[11,"partial_cmp","","",74,null],[11,"lt","","",74,null],[11,"le","","",74,null],[11,"gt","","",74,null],[11,"ge","","",74,null],[11,"to_json","","",74,null],[11,"to_json","ethcore_util::standard::option","",70,null],[11,"from_str","ethcore_util::standard","",74,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",77,null],[11,"fmt","","",74,null],[11,"decode","ethcore_util::standard::option","",70,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"decode","ethcore_util::standard","",155,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"clone","ethcore_util::standard::str","",156,null],[11,"start","ethcore_util::standard::ops","",53,null],[11,"end","","",54,null],[11,"start","","",52,null],[11,"end","","",52,null],[11,"next","ethcore_util::standard::str","",156,null],[11,"size_hint","","",156,null],[11,"decode","ethcore_util::standard::option","",70,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"rlp_append","","",70,null],[11,"new","ethcore_util::standard","Directly wrap a string slice as a `Path` slice.",154,{"inputs":[{"name":"s"}],"output":{"name":"path"}}],[11,"as_os_str","","Yields the underlying [`OsStr`] slice.",154,null],[11,"to_str","","Yields a [`&amp;str`] slice if the `Path` is valid unicode.",154,null],[11,"to_string_lossy","","Converts a `Path` to a [`Cow&lt;str&gt;`].",154,null],[11,"to_path_buf","","Converts a `Path` to an owned [`PathBuf`].",154,null],[11,"is_absolute","","A path is *absolute* if it is independent of the current directory.",154,null],[11,"is_relative","","A path is *relative* if it is not absolute.",154,null],[11,"has_root","","A path has a root if the body of the path begins with the directory separator.",154,null],[11,"parent","","The path without its final component, if any.",154,null],[11,"file_name","","The final component of the path, if it is a normal file.",154,null],[11,"strip_prefix","","Returns a path that, when joined onto `base`, yields `self`.",154,null],[11,"starts_with","","Determines whether `base` is a prefix of `self`.",154,null],[11,"ends_with","","Determines whether `child` is a suffix of `self`.",154,null],[11,"file_stem","","Extracts the stem (non-extension) portion of [`self.file_name()`].",154,null],[11,"extension","","Extracts the extension of [`self.file_name()`], if possible.",154,null],[11,"join","","Creates an owned [`PathBuf`] with `path` adjoined to `self`.",154,null],[11,"with_file_name","","Creates an owned [`PathBuf`] like `self` but with the given file name.",154,null],[11,"with_extension","","Creates an owned [`PathBuf`] like `self` but with the given extension.",154,null],[11,"components","","Produce an iterator over the components of the path.",154,null],[11,"iter","","Produce an iterator over the path&#39;s components viewed as [`OsStr`] slices.",154,null],[11,"display","","Returns an object that implements [`Display`] for safely printing paths\nthat may contain non-Unicode data.",154,null],[11,"metadata","","Query the file system to get information about a file, directory, etc.",154,null],[11,"symlink_metadata","","Query the metadata about a file without following symlinks.",154,null],[11,"canonicalize","","Returns the canonical form of the path with all intermediate components\nnormalized and symbolic links resolved.",154,null],[11,"read_link","","Reads a symbolic link, returning the file that the link points to.",154,null],[11,"read_dir","","Returns an iterator over the entries within a directory.",154,null],[11,"exists","","Returns whether the path points at an existing entity.",154,null],[11,"is_file","","Returns whether the path is pointing at a regular file.",154,null],[11,"is_dir","","Returns whether the path is pointing at a directory.",154,null],[11,"as_ref","ethcore_util::standard::slice","",157,null],[11,"eq","ethcore_util::standard::ops","",158,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",54,null],[11,"ne","","",54,null],[11,"eq","","",55,null],[11,"ne","","",55,null],[11,"eq","","",56,null],[11,"ne","","",56,null],[11,"eq","ethcore_util::standard::cmp","",24,null],[11,"eq","ethcore_util::standard::option","",70,null],[11,"ne","","",70,null],[11,"eq","ethcore_util::standard::result","",69,null],[11,"ne","","",69,null],[11,"eq","ethcore_util::standard::str::pattern","",10,null],[11,"ne","","",10,null],[11,"eq","ethcore_util::standard::str","",159,null],[11,"ne","","",159,null],[11,"eq","","",160,null],[11,"ne","","",160,null],[11,"eq","ethcore_util::standard::fmt","",161,null],[11,"default","ethcore_util::standard::option","Returns None.",70,{"inputs":[],"output":{"name":"option"}}],[11,"default","ethcore_util::standard::fmt","",161,{"inputs":[],"output":{"name":"error"}}],[11,"clone","ethcore_util::standard::ptr","",162,null],[11,"clone","ethcore_util::standard::option","",163,null],[11,"clone","ethcore_util::standard::result","",164,null],[11,"clone","ethcore_util::standard::slice","",157,null],[11,"clone","","",165,null],[11,"clone","","",166,null],[11,"clone","","",167,null],[11,"clone","ethcore_util::standard::ops","",158,null],[11,"clone","","",52,null],[11,"clone","","",53,null],[11,"clone","","",54,null],[11,"clone","","",55,null],[11,"clone","","",56,null],[11,"clone","ethcore_util::standard::cmp","",24,null],[11,"clone","ethcore_util::standard::option","",70,null],[11,"clone","","",168,null],[11,"clone","ethcore_util::standard::result","",69,null],[11,"clone","ethcore_util::standard::str::pattern","",10,null],[11,"clone","","",169,null],[11,"clone","","",170,null],[11,"clone","","",171,null],[11,"clone","","",172,null],[11,"clone","ethcore_util::standard::str","",159,null],[11,"clone","","",160,null],[11,"clone","","",173,null],[11,"clone","","",174,null],[11,"clone","","",175,null],[11,"clone","","",176,null],[11,"clone","","",177,null],[11,"clone","","",178,null],[11,"clone","","",179,null],[11,"clone","","",180,null],[11,"clone","","",181,null],[11,"clone","","",182,null],[11,"clone","","",183,null],[11,"clone","","",184,null],[11,"clone","","",185,null],[11,"clone","","",186,null],[11,"clone","","",187,null],[11,"clone","ethcore_util::standard::fmt","",161,null],[11,"clone","","",188,null],[11,"from_success","ethcore_util::standard::result","",69,{"inputs":[{"name":"u"}],"output":{"name":"result"}}],[11,"from_error","","",69,{"inputs":[{"name":"v"}],"output":{"name":"result"}}],[11,"translate","","",69,null],[11,"into_iter","ethcore_util::standard::option","Returns a consuming iterator over the possibly contained value.",70,null],[11,"into_iter","ethcore_util::standard::result","Returns a consuming iterator over the possibly contained value.",69,null],[11,"fmt","ethcore_util::standard::str","",159,null],[11,"fmt","","",160,null],[11,"fmt","ethcore_util::standard::fmt","",188,null],[11,"fmt","","",161,null],[11,"next_back","ethcore_util::standard::ops","",52,null],[11,"next_back","","",55,null],[11,"next_back","ethcore_util::standard::option","",163,null],[11,"next_back","","",189,null],[11,"next_back","","",168,null],[11,"next_back","ethcore_util::standard::result","",164,null],[11,"next_back","","",190,null],[11,"next_back","","",191,null],[11,"next_back","ethcore_util::standard::slice","",165,null],[11,"next_back","","",192,null],[11,"next_back","","",166,null],[11,"next_back","","",167,null],[11,"next_back","","",193,null],[11,"next_back","ethcore_util::standard::str","",173,null],[11,"next_back","","",174,null],[11,"next_back","","",175,null],[11,"next_back","","",186,null],[11,"next_back","","",187,null],[11,"next_back","ethcore_util::standard::slice","",157,null],[11,"next_back","","",194,null],[11,"next_back","ethcore_util::standard::str","",176,null],[11,"next_back","","",177,null],[11,"next_back","","",178,null],[11,"next_back","","",179,null],[11,"next_back","","",182,null],[11,"next_back","","",183,null],[11,"next_back","","",184,null],[11,"next_back","","",185,null],[11,"from_iter","ethcore_util::standard::option","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",70,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"from_iter","ethcore_util::standard::result","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",69,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"next","ethcore_util::standard::ops","",52,null],[11,"size_hint","","",52,null],[11,"next","","",53,null],[11,"next","","",55,null],[11,"size_hint","","",55,null],[11,"next","ethcore_util::standard::option","",163,null],[11,"size_hint","","",163,null],[11,"next","","",189,null],[11,"size_hint","","",189,null],[11,"next","","",168,null],[11,"size_hint","","",168,null],[11,"next","ethcore_util::standard::result","",164,null],[11,"size_hint","","",164,null],[11,"next","","",190,null],[11,"size_hint","","",190,null],[11,"next","","",191,null],[11,"size_hint","","",191,null],[11,"next","ethcore_util::standard::slice","",165,null],[11,"size_hint","","",165,null],[11,"next","","",192,null],[11,"size_hint","","",192,null],[11,"next","","",166,null],[11,"size_hint","","",166,null],[11,"count","","",166,null],[11,"nth","","",166,null],[11,"last","","",166,null],[11,"next","","",167,null],[11,"size_hint","","",167,null],[11,"count","","",167,null],[11,"nth","","",167,null],[11,"last","","",167,null],[11,"next","","",193,null],[11,"size_hint","","",193,null],[11,"count","","",193,null],[11,"nth","","",193,null],[11,"last","","",193,null],[11,"next","ethcore_util::standard::str","",173,null],[11,"size_hint","","",173,null],[11,"next","","",174,null],[11,"size_hint","","",174,null],[11,"next","","",175,null],[11,"size_hint","","",175,null],[11,"count","","",175,null],[11,"last","","",175,null],[11,"nth","","",175,null],[11,"next","","",186,null],[11,"size_hint","","",186,null],[11,"next","","",187,null],[11,"size_hint","","",187,null],[11,"next","ethcore_util::standard::slice","",157,null],[11,"size_hint","","",157,null],[11,"count","","",157,null],[11,"nth","","",157,null],[11,"last","","",157,null],[11,"next","","",194,null],[11,"size_hint","","",194,null],[11,"count","","",194,null],[11,"nth","","",194,null],[11,"last","","",194,null],[11,"next","","",195,null],[11,"size_hint","","",195,null],[11,"next","","",196,null],[11,"size_hint","","",196,null],[11,"next","","",197,null],[11,"size_hint","","",197,null],[11,"next","","",198,null],[11,"size_hint","","",198,null],[11,"next","ethcore_util::standard::str","",176,null],[11,"next","","",177,null],[11,"next","","",178,null],[11,"next","","",179,null],[11,"next","","",180,null],[11,"next","","",181,null],[11,"next","","",182,null],[11,"next","","",183,null],[11,"next","","",184,null],[11,"next","","",185,null],[11,"len","","",175,null],[11,"from","ethcore_util::standard::option","",70,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[11,"cmp","ethcore_util::standard::cmp","",24,null],[11,"cmp","ethcore_util::standard::option","",70,null],[11,"cmp","ethcore_util::standard::result","",69,null],[11,"cmp","ethcore_util::standard::fmt","",161,null],[11,"fmt","ethcore_util::standard::ops","",158,null],[11,"fmt","","",52,null],[11,"fmt","","",53,null],[11,"fmt","","",54,null],[11,"fmt","","",55,null],[11,"fmt","","",56,null],[11,"fmt","ethcore_util::standard::slice","",157,null],[11,"fmt","","",194,null],[11,"fmt","","",165,null],[11,"fmt","","",192,null],[11,"fmt","","",195,null],[11,"fmt","","",196,null],[11,"fmt","","",197,null],[11,"fmt","","",198,null],[11,"fmt","ethcore_util::standard::str::pattern","",171,null],[11,"fmt","ethcore_util::standard::fmt","",188,null],[11,"fmt","ethcore_util::standard::cmp","",24,null],[11,"fmt","ethcore_util::standard::option","",70,null],[11,"fmt","","",163,null],[11,"fmt","","",189,null],[11,"fmt","","",168,null],[11,"fmt","ethcore_util::standard::result","",69,null],[11,"fmt","","",164,null],[11,"fmt","","",190,null],[11,"fmt","","",191,null],[11,"fmt","ethcore_util::standard::slice","",166,null],[11,"fmt","","",167,null],[11,"fmt","","",193,null],[11,"fmt","ethcore_util::standard::str::pattern","",10,null],[11,"fmt","","",169,null],[11,"fmt","","",170,null],[11,"fmt","","",172,null],[11,"fmt","ethcore_util::standard::str","",159,null],[11,"fmt","","",160,null],[11,"fmt","","",173,null],[11,"fmt","","",174,null],[11,"fmt","","",175,null],[11,"fmt","","",176,null],[11,"fmt","","",177,null],[11,"fmt","","",178,null],[11,"fmt","","",179,null],[11,"fmt","","",180,null],[11,"fmt","","",181,null],[11,"fmt","","",182,null],[11,"fmt","","",183,null],[11,"fmt","","",184,null],[11,"fmt","","",185,null],[11,"fmt","","",186,null],[11,"fmt","","",187,null],[11,"fmt","ethcore_util::standard::fmt","",161,null],[11,"next_back","ethcore_util::standard::str::pattern","",169,null],[11,"next_match_back","","",169,null],[11,"next_reject_back","","",169,null],[11,"next_back","","",170,null],[11,"next_match_back","","",170,null],[11,"next_reject_back","","",170,null],[11,"next_back","","",171,null],[11,"next_match_back","","",171,null],[11,"next_reject_back","","",171,null],[11,"next_back","","",172,null],[11,"next_match_back","","",172,null],[11,"fmt","ethcore_util::standard::ptr","",199,null],[11,"fmt","","",162,null],[11,"hash","ethcore_util::standard::ops","",158,null],[11,"hash","","",52,null],[11,"hash","","",53,null],[11,"hash","","",54,null],[11,"hash","","",55,null],[11,"hash","","",56,null],[11,"hash","ethcore_util::standard::cmp","",24,null],[11,"hash","ethcore_util::standard::option","",70,null],[11,"hash","ethcore_util::standard::result","",69,null],[11,"hash","ethcore_util::standard::fmt","",161,null],[11,"deref","ethcore_util::standard::ptr","",199,null],[11,"deref","","",162,null],[11,"partial_cmp","ethcore_util::standard::cmp","",24,null],[11,"partial_cmp","ethcore_util::standard::option","",70,null],[11,"lt","","",70,null],[11,"le","","",70,null],[11,"gt","","",70,null],[11,"ge","","",70,null],[11,"partial_cmp","ethcore_util::standard::result","",69,null],[11,"lt","","",69,null],[11,"le","","",69,null],[11,"gt","","",69,null],[11,"ge","","",69,null],[11,"partial_cmp","ethcore_util::standard::fmt","",161,null],[11,"haystack","ethcore_util::standard::str::pattern","",169,null],[11,"next","","",169,null],[11,"next_match","","",169,null],[11,"next_reject","","",169,null],[11,"haystack","","",170,null],[11,"next","","",170,null],[11,"next_match","","",170,null],[11,"next_reject","","",170,null],[11,"haystack","","",171,null],[11,"next","","",171,null],[11,"next_match","","",171,null],[11,"next_reject","","",171,null],[11,"haystack","","",172,null],[11,"next","","",172,null],[11,"next_match","","",172,null],[11,"write_str","ethcore_util::standard::fmt","",200,null],[11,"write_char","","",200,null],[11,"write_fmt","","",200,null],[11,"start","ethcore_util::standard::ops","",53,null],[11,"end","","",54,null],[11,"start","","",52,null],[11,"end","","",52,null],[11,"into_erased","ethcore_util::standard","",155,null],[11,"partial_cmp","","Partial comparison for two `Arc&lt;T&gt;`s.",155,null],[11,"lt","","Less-than comparison for two `Arc&lt;T&gt;`s.",155,null],[11,"le","","&#39;Less-than or equal to&#39; comparison for two `Arc&lt;T&gt;`s.",155,null],[11,"gt","","Greater-than comparison for two `Arc&lt;T&gt;`s.",155,null],[11,"ge","","&#39;Greater-than or equal to&#39; comparison for two `Arc&lt;T&gt;`s.",155,null],[11,"clone","","Makes a clone of the `Arc&lt;T&gt;`.",155,null],[11,"default","","Creates a new `Arc&lt;T&gt;`, with the `Default` value for T.",155,{"inputs":[],"output":{"name":"arc"}}],[11,"fmt","","",155,null],[11,"eq","","Equality for two `Arc&lt;T&gt;`s.",155,null],[11,"ne","","Inequality for two `Arc&lt;T&gt;`s.",155,null],[11,"cmp","","",155,null],[11,"drop","","Drops the `Arc&lt;T&gt;`.",155,null],[11,"hash","","",155,null],[11,"from","","",155,{"inputs":[{"name":"t"}],"output":{"name":"arc"}}],[11,"fmt","","",155,null],[11,"as_ref","","",155,null],[11,"deref","","",155,null],[11,"borrow","","",155,null],[11,"fmt","","",155,null],[11,"deref","","",201,null],[11,"deref","","",202,null],[11,"deref","","",203,null],[11,"default","","",204,{"inputs":[],"output":{"name":"condvar"}}],[11,"default","","",205,{"inputs":[],"output":{"name":"mutex"}}],[11,"default","","",206,{"inputs":[],"output":{"name":"rwlock"}}],[11,"fmt","","",205,null],[11,"fmt","","",206,null],[11,"drop","","",201,null],[11,"drop","","",202,null],[11,"drop","","",203,null],[11,"deref_mut","","",201,null],[11,"deref_mut","","",203,null],[11,"description","ethcore_util::standard::str","",159,null],[11,"description","","",160,null],[11,"description","ethcore_util::standard::fmt","",161,null],[11,"description","ethcore_util::standard::io","",207,null],[11,"description","","",208,null],[11,"cause","","",208,null],[11,"description","","",6,null],[11,"cause","","",6,null],[11,"as_raw_stat","ethcore_util::standard::fs","",209,null],[11,"st_dev","","",209,null],[11,"st_ino","","",209,null],[11,"st_mode","","",209,null],[11,"st_nlink","","",209,null],[11,"st_uid","","",209,null],[11,"st_gid","","",209,null],[11,"st_rdev","","",209,null],[11,"st_size","","",209,null],[11,"st_atime","","",209,null],[11,"st_atime_nsec","","",209,null],[11,"st_mtime","","",209,null],[11,"st_mtime_nsec","","",209,null],[11,"st_ctime","","",209,null],[11,"st_ctime_nsec","","",209,null],[11,"st_blksize","","",209,null],[11,"st_blocks","","",209,null],[11,"eq","ethcore_util::standard","",154,null],[11,"eq","ethcore_util::standard::fs","",210,null],[11,"ne","","",210,null],[11,"eq","","",211,null],[11,"ne","","",211,null],[11,"eq","ethcore_util::standard::io","",7,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"eq","ethcore_util::standard","",154,null],[11,"eq","","",154,null],[11,"eq","","",154,null],[11,"eq","","",154,null],[11,"eq","","",154,null],[11,"eq","","",154,null],[11,"into_raw_fd","ethcore_util::standard::fs","",212,null],[11,"drop","ethcore_util::standard::io","",213,null],[11,"hash","ethcore_util::standard","",154,null],[11,"hash","ethcore_util::standard::fs","",211,null],[11,"hash","ethcore_util::standard::io","",7,null],[11,"write","ethcore_util::standard::fs","",212,null],[11,"flush","","",212,null],[11,"write","ethcore_util::standard::io","",213,null],[11,"flush","","",213,null],[11,"write","","",214,null],[11,"flush","","",214,null],[11,"write","","",215,null],[11,"flush","","",215,null],[11,"write","","",215,null],[11,"flush","","",215,null],[11,"write","","",215,null],[11,"flush","","",215,null],[11,"write","","",216,null],[11,"flush","","",216,null],[11,"write","","",217,null],[11,"flush","","",217,null],[11,"write_all","","",217,null],[11,"write_fmt","","",217,null],[11,"write","","",218,null],[11,"flush","","",218,null],[11,"write","","",219,null],[11,"flush","","",219,null],[11,"write_all","","",219,null],[11,"write_fmt","","",219,null],[11,"write","","",220,null],[11,"flush","","",220,null],[11,"from_raw_fd","ethcore_util::standard::fs","",212,{"inputs":[{"name":"i32"}],"output":{"name":"file"}}],[11,"mode","","",221,null],[11,"from","ethcore_util::standard::io","",208,{"inputs":[{"name":"nulerror"}],"output":{"name":"error"}}],[11,"from","","",208,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"seek","ethcore_util::standard::fs","",212,null],[11,"seek","ethcore_util::standard::io","Seek to an offset, in bytes, in the underlying reader.",222,null],[11,"seek","","Seek to the offset, in bytes, in the underlying writer.",213,null],[11,"seek","","",215,null],[11,"fmt","","",207,null],[11,"fmt","","",208,null],[11,"fmt","","",6,null],[11,"dev","ethcore_util::standard::fs","",209,null],[11,"ino","","",209,null],[11,"mode","","",209,null],[11,"nlink","","",209,null],[11,"uid","","",209,null],[11,"gid","","",209,null],[11,"rdev","","",209,null],[11,"size","","",209,null],[11,"atime","","",209,null],[11,"atime_nsec","","",209,null],[11,"mtime","","",209,null],[11,"mtime_nsec","","",209,null],[11,"ctime","","",209,null],[11,"ctime_nsec","","",209,null],[11,"blksize","","",209,null],[11,"blocks","","",209,null],[11,"as_ref","ethcore_util::standard","",154,null],[11,"as_ref","","",154,null],[11,"ino","ethcore_util::standard::fs","",223,null],[11,"mode","","",210,null],[11,"set_mode","","",210,null],[11,"from_mode","","",210,{"inputs":[{"name":"u32"}],"output":{"name":"permissions"}}],[11,"next","","",224,null],[11,"next","ethcore_util::standard::io","",225,null],[11,"next","","",226,null],[11,"next","","",227,null],[11,"next","","",228,null],[11,"read","ethcore_util::standard::fs","",212,null],[11,"read_to_end","","",212,null],[11,"read","ethcore_util::standard::io","",222,null],[11,"read","","",215,null],[11,"read","","",229,null],[11,"read","","",230,null],[11,"read","","",231,null],[11,"read_to_end","","",231,null],[11,"read_to_string","","",231,null],[11,"read_exact","","",231,null],[11,"read","","",232,null],[11,"read_to_end","","",232,null],[11,"read","","",233,null],[11,"read","","",234,null],[11,"partial_cmp","ethcore_util::standard","",154,null],[11,"partial_cmp","ethcore_util::standard::io","",7,null],[11,"partial_cmp","ethcore_util::standard","",154,null],[11,"partial_cmp","","",154,null],[11,"partial_cmp","","",154,null],[11,"partial_cmp","","",154,null],[11,"partial_cmp","","",154,null],[11,"partial_cmp","","",154,null],[11,"mode","ethcore_util::standard::fs","",235,null],[11,"custom_flags","","",235,null],[11,"clone","","",209,null],[11,"clone","","",235,null],[11,"clone","","",210,null],[11,"clone","","",211,null],[11,"clone","ethcore_util::standard::io","",215,null],[11,"clone","","",7,null],[11,"clone","","",5,null],[11,"to_owned","ethcore_util::standard","",154,null],[11,"cmp","","",154,null],[11,"cmp","ethcore_util::standard::io","",7,null],[11,"fill_buf","","",222,null],[11,"consume","","",222,null],[11,"fill_buf","","",215,null],[11,"consume","","",215,null],[11,"fill_buf","","",229,null],[11,"consume","","",229,null],[11,"fill_buf","","",232,null],[11,"consume","","",232,null],[11,"fill_buf","","",233,null],[11,"consume","","",233,null],[11,"fill_buf","","",234,null],[11,"consume","","",234,null],[11,"is_block_device","ethcore_util::standard::fs","",211,null],[11,"is_char_device","","",211,null],[11,"is_fifo","","",211,null],[11,"is_socket","","",211,null],[11,"fmt","","",212,null],[11,"fmt","","",223,null],[11,"fmt","ethcore_util::standard::io","",222,null],[11,"fmt","","",213,null],[11,"fmt","","",214,null],[11,"fmt","ethcore_util::standard","",154,null],[11,"fmt","ethcore_util::standard::fs","",210,null],[11,"fmt","","",211,null],[11,"fmt","ethcore_util::standard::io","",207,null],[11,"fmt","","",215,null],[11,"fmt","","",208,null],[11,"fmt","","",7,null],[11,"fmt","","",5,null],[11,"fmt","","",6,null],[11,"as_raw_fd","ethcore_util::standard::fs","",212,null],[11,"default","ethcore_util::log","",236,{"inputs":[],"output":{"name":"style"}}],[11,"eq","","",148,null],[11,"ne","","",148,null],[11,"eq","","",236,null],[11,"ne","","",236,null],[11,"fmt","","",148,null],[11,"fmt","","",236,null],[11,"clone","","",148,null],[11,"clone","","",236,null],[11,"next_back","ethcore_util::standard::str","",237,null],[11,"next","","",237,null],[11,"deref","ethcore_util::common::hash","",82,null],[11,"deref","","",83,null],[11,"deref","","",84,null],[11,"deref","","",85,null],[11,"deref","","",86,null],[11,"deref","","",87,null],[11,"deref","","",88,null],[11,"deref","","",89,null],[11,"deref","","",90,null],[11,"deref","","",91,null],[11,"heap_size_of_children","","",82,null],[11,"heap_size_of_children","","",83,null],[11,"heap_size_of_children","","",84,null],[11,"heap_size_of_children","","",85,null],[11,"heap_size_of_children","","",86,null],[11,"heap_size_of_children","","",87,null],[11,"heap_size_of_children","","",88,null],[11,"heap_size_of_children","","",89,null],[11,"heap_size_of_children","","",90,null],[11,"heap_size_of_children","","",91,null],[11,"index_mut","","",82,null],[11,"index_mut","","",82,null],[11,"index_mut","","",82,null],[11,"index_mut","","",83,null],[11,"index_mut","","",83,null],[11,"index_mut","","",83,null],[11,"index_mut","","",84,null],[11,"index_mut","","",84,null],[11,"index_mut","","",84,null],[11,"index_mut","","",85,null],[11,"index_mut","","",85,null],[11,"index_mut","","",85,null],[11,"index_mut","","",86,null],[11,"index_mut","","",86,null],[11,"index_mut","","",86,null],[11,"index_mut","","",87,null],[11,"index_mut","","",87,null],[11,"index_mut","","",87,null],[11,"index_mut","","",88,null],[11,"index_mut","","",88,null],[11,"index_mut","","",88,null],[11,"index_mut","","",89,null],[11,"index_mut","","",89,null],[11,"index_mut","","",89,null],[11,"index_mut","","",90,null],[11,"index_mut","","",90,null],[11,"index_mut","","",90,null],[11,"index_mut","","",91,null],[11,"index_mut","","",91,null],[11,"index_mut","","",91,null],[11,"index","","",82,null],[11,"index","","",82,null],[11,"index","","",82,null],[11,"index","","",83,null],[11,"index","","",83,null],[11,"index","","",83,null],[11,"index","","",84,null],[11,"index","","",84,null],[11,"index","","",84,null],[11,"index","","",85,null],[11,"index","","",85,null],[11,"index","","",85,null],[11,"index","","",86,null],[11,"index","","",86,null],[11,"index","","",86,null],[11,"index","","",87,null],[11,"index","","",87,null],[11,"index","","",87,null],[11,"index","","",88,null],[11,"index","","",88,null],[11,"index","","",88,null],[11,"index","","",89,null],[11,"index","","",89,null],[11,"index","","",89,null],[11,"index","","",90,null],[11,"index","","",90,null],[11,"index","","",90,null],[11,"index","","",91,null],[11,"index","","",91,null],[11,"index","","",91,null],[11,"eq","","",82,null],[11,"eq","","",83,null],[11,"eq","","",84,null],[11,"eq","","",85,null],[11,"eq","","",86,null],[11,"eq","","",87,null],[11,"eq","","",88,null],[11,"eq","","",89,null],[11,"eq","","",90,null],[11,"eq","","",91,null],[11,"bitand","","",82,null],[11,"bitand","","",83,null],[11,"bitand","","",84,null],[11,"bitand","","",85,null],[11,"bitand","","",86,null],[11,"bitand","","",87,null],[11,"bitand","","",88,null],[11,"bitand","","",89,null],[11,"bitand","","",90,null],[11,"bitand","","",91,null],[11,"fmt","","",82,null],[11,"fmt","","",83,null],[11,"fmt","","",84,null],[11,"fmt","","",85,null],[11,"fmt","","",86,null],[11,"fmt","","",87,null],[11,"fmt","","",88,null],[11,"fmt","","",89,null],[11,"fmt","","",90,null],[11,"fmt","","",91,null],[11,"finish","","",238,null],[11,"write","","",238,null],[11,"from","","",86,{"inputs":[{"name":"u256"}],"output":{"name":"h256"}}],[11,"from","","",86,{"inputs":[{"name":"u256"}],"output":{"name":"h256"}}],[11,"from","","",85,{"inputs":[{"name":"h256"}],"output":{"name":"h160"}}],[11,"from","","",83,{"inputs":[{"name":"h256"}],"output":{"name":"h64"}}],[11,"from","","",86,{"inputs":[{"name":"h160"}],"output":{"name":"h256"}}],[11,"from","","",86,{"inputs":[{"name":"h160"}],"output":{"name":"h256"}}],[11,"from","","",82,null],[11,"from","","",82,{"inputs":[{"name":"u64"}],"output":{"name":"h32"}}],[11,"from","","",82,{"inputs":[{"name":"str"}],"output":{"name":"h32"}}],[11,"from","","",82,null],[11,"from","","",83,null],[11,"from","","",83,{"inputs":[{"name":"u64"}],"output":{"name":"h64"}}],[11,"from","","",83,{"inputs":[{"name":"str"}],"output":{"name":"h64"}}],[11,"from","","",83,null],[11,"from","","",84,null],[11,"from","","",84,{"inputs":[{"name":"u64"}],"output":{"name":"h128"}}],[11,"from","","",84,{"inputs":[{"name":"str"}],"output":{"name":"h128"}}],[11,"from","","",84,null],[11,"from","","",85,null],[11,"from","","",85,{"inputs":[{"name":"u64"}],"output":{"name":"h160"}}],[11,"from","","",85,{"inputs":[{"name":"str"}],"output":{"name":"h160"}}],[11,"from","","",85,null],[11,"from","","",86,null],[11,"from","","",86,{"inputs":[{"name":"u64"}],"output":{"name":"h256"}}],[11,"from","","",86,{"inputs":[{"name":"str"}],"output":{"name":"h256"}}],[11,"from","","",86,null],[11,"from","","",87,null],[11,"from","","",87,{"inputs":[{"name":"u64"}],"output":{"name":"h264"}}],[11,"from","","",87,{"inputs":[{"name":"str"}],"output":{"name":"h264"}}],[11,"from","","",87,null],[11,"from","","",88,null],[11,"from","","",88,{"inputs":[{"name":"u64"}],"output":{"name":"h512"}}],[11,"from","","",88,{"inputs":[{"name":"str"}],"output":{"name":"h512"}}],[11,"from","","",88,null],[11,"from","","",89,null],[11,"from","","",89,{"inputs":[{"name":"u64"}],"output":{"name":"h520"}}],[11,"from","","",89,{"inputs":[{"name":"str"}],"output":{"name":"h520"}}],[11,"from","","",89,null],[11,"from","","",90,null],[11,"from","","",90,{"inputs":[{"name":"u64"}],"output":{"name":"h1024"}}],[11,"from","","",90,{"inputs":[{"name":"str"}],"output":{"name":"h1024"}}],[11,"from","","",90,null],[11,"from","","",91,null],[11,"from","","",91,{"inputs":[{"name":"u64"}],"output":{"name":"h2048"}}],[11,"from","","",91,{"inputs":[{"name":"str"}],"output":{"name":"h2048"}}],[11,"from","","",91,null],[11,"new","","",82,{"inputs":[],"output":{"name":"h32"}}],[11,"zero","","",82,{"inputs":[],"output":{"name":"h32"}}],[11,"random","","",82,{"inputs":[],"output":{"name":"h32"}}],[11,"randomize","","",82,null],[11,"len","","",82,{"inputs":[],"output":{"name":"usize"}}],[11,"clone_from_slice","","",82,null],[11,"from_slice","","",82,null],[11,"copy_to","","",82,null],[11,"contains","","",82,null],[11,"is_zero","","",82,null],[11,"low_u64","","",82,null],[11,"new","","",83,{"inputs":[],"output":{"name":"h64"}}],[11,"zero","","",83,{"inputs":[],"output":{"name":"h64"}}],[11,"random","","",83,{"inputs":[],"output":{"name":"h64"}}],[11,"randomize","","",83,null],[11,"len","","",83,{"inputs":[],"output":{"name":"usize"}}],[11,"clone_from_slice","","",83,null],[11,"from_slice","","",83,null],[11,"copy_to","","",83,null],[11,"contains","","",83,null],[11,"is_zero","","",83,null],[11,"low_u64","","",83,null],[11,"new","","",84,{"inputs":[],"output":{"name":"h128"}}],[11,"zero","","",84,{"inputs":[],"output":{"name":"h128"}}],[11,"random","","",84,{"inputs":[],"output":{"name":"h128"}}],[11,"randomize","","",84,null],[11,"len","","",84,{"inputs":[],"output":{"name":"usize"}}],[11,"clone_from_slice","","",84,null],[11,"from_slice","","",84,null],[11,"copy_to","","",84,null],[11,"contains","","",84,null],[11,"is_zero","","",84,null],[11,"low_u64","","",84,null],[11,"new","","",85,{"inputs":[],"output":{"name":"h160"}}],[11,"zero","","",85,{"inputs":[],"output":{"name":"h160"}}],[11,"random","","",85,{"inputs":[],"output":{"name":"h160"}}],[11,"randomize","","",85,null],[11,"len","","",85,{"inputs":[],"output":{"name":"usize"}}],[11,"clone_from_slice","","",85,null],[11,"from_slice","","",85,null],[11,"copy_to","","",85,null],[11,"contains","","",85,null],[11,"is_zero","","",85,null],[11,"low_u64","","",85,null],[11,"new","","",86,{"inputs":[],"output":{"name":"h256"}}],[11,"zero","","",86,{"inputs":[],"output":{"name":"h256"}}],[11,"random","","",86,{"inputs":[],"output":{"name":"h256"}}],[11,"randomize","","",86,null],[11,"len","","",86,{"inputs":[],"output":{"name":"usize"}}],[11,"clone_from_slice","","",86,null],[11,"from_slice","","",86,null],[11,"copy_to","","",86,null],[11,"contains","","",86,null],[11,"is_zero","","",86,null],[11,"low_u64","","",86,null],[11,"new","","",87,{"inputs":[],"output":{"name":"h264"}}],[11,"zero","","",87,{"inputs":[],"output":{"name":"h264"}}],[11,"random","","",87,{"inputs":[],"output":{"name":"h264"}}],[11,"randomize","","",87,null],[11,"len","","",87,{"inputs":[],"output":{"name":"usize"}}],[11,"clone_from_slice","","",87,null],[11,"from_slice","","",87,null],[11,"copy_to","","",87,null],[11,"contains","","",87,null],[11,"is_zero","","",87,null],[11,"low_u64","","",87,null],[11,"new","","",88,{"inputs":[],"output":{"name":"h512"}}],[11,"zero","","",88,{"inputs":[],"output":{"name":"h512"}}],[11,"random","","",88,{"inputs":[],"output":{"name":"h512"}}],[11,"randomize","","",88,null],[11,"len","","",88,{"inputs":[],"output":{"name":"usize"}}],[11,"clone_from_slice","","",88,null],[11,"from_slice","","",88,null],[11,"copy_to","","",88,null],[11,"contains","","",88,null],[11,"is_zero","","",88,null],[11,"low_u64","","",88,null],[11,"new","","",89,{"inputs":[],"output":{"name":"h520"}}],[11,"zero","","",89,{"inputs":[],"output":{"name":"h520"}}],[11,"random","","",89,{"inputs":[],"output":{"name":"h520"}}],[11,"randomize","","",89,null],[11,"len","","",89,{"inputs":[],"output":{"name":"usize"}}],[11,"clone_from_slice","","",89,null],[11,"from_slice","","",89,null],[11,"copy_to","","",89,null],[11,"contains","","",89,null],[11,"is_zero","","",89,null],[11,"low_u64","","",89,null],[11,"new","","",90,{"inputs":[],"output":{"name":"h1024"}}],[11,"zero","","",90,{"inputs":[],"output":{"name":"h1024"}}],[11,"random","","",90,{"inputs":[],"output":{"name":"h1024"}}],[11,"randomize","","",90,null],[11,"len","","",90,{"inputs":[],"output":{"name":"usize"}}],[11,"clone_from_slice","","",90,null],[11,"from_slice","","",90,null],[11,"copy_to","","",90,null],[11,"contains","","",90,null],[11,"is_zero","","",90,null],[11,"low_u64","","",90,null],[11,"new","","",91,{"inputs":[],"output":{"name":"h2048"}}],[11,"zero","","",91,{"inputs":[],"output":{"name":"h2048"}}],[11,"random","","",91,{"inputs":[],"output":{"name":"h2048"}}],[11,"randomize","","",91,null],[11,"len","","",91,{"inputs":[],"output":{"name":"usize"}}],[11,"clone_from_slice","","",91,null],[11,"from_slice","","",91,null],[11,"copy_to","","",91,null],[11,"contains","","",91,null],[11,"is_zero","","",91,null],[11,"low_u64","","",91,null],[11,"clone","","",82,null],[11,"clone","","",83,null],[11,"clone","","",84,null],[11,"clone","","",85,null],[11,"clone","","",86,null],[11,"clone","","",87,null],[11,"clone","","",88,null],[11,"clone","","",89,null],[11,"clone","","",90,null],[11,"clone","","",91,null],[11,"bitor","","",82,null],[11,"bitor","","",83,null],[11,"bitor","","",84,null],[11,"bitor","","",85,null],[11,"bitor","","",86,null],[11,"bitor","","",87,null],[11,"bitor","","",88,null],[11,"bitor","","",89,null],[11,"bitor","","",90,null],[11,"bitor","","",91,null],[11,"cmp","","",82,null],[11,"cmp","","",83,null],[11,"cmp","","",84,null],[11,"cmp","","",85,null],[11,"cmp","","",86,null],[11,"cmp","","",87,null],[11,"cmp","","",88,null],[11,"cmp","","",89,null],[11,"cmp","","",90,null],[11,"cmp","","",91,null],[11,"fmt","","",82,null],[11,"fmt","","",83,null],[11,"fmt","","",84,null],[11,"fmt","","",85,null],[11,"fmt","","",86,null],[11,"fmt","","",87,null],[11,"fmt","","",88,null],[11,"fmt","","",89,null],[11,"fmt","","",90,null],[11,"fmt","","",91,null],[11,"default","","",238,{"inputs":[],"output":{"name":"plainhasher"}}],[11,"default","","",82,{"inputs":[],"output":{"name":"h32"}}],[11,"default","","",83,{"inputs":[],"output":{"name":"h64"}}],[11,"default","","",84,{"inputs":[],"output":{"name":"h128"}}],[11,"default","","",85,{"inputs":[],"output":{"name":"h160"}}],[11,"default","","",86,{"inputs":[],"output":{"name":"h256"}}],[11,"default","","",87,{"inputs":[],"output":{"name":"h264"}}],[11,"default","","",88,{"inputs":[],"output":{"name":"h512"}}],[11,"default","","",89,{"inputs":[],"output":{"name":"h520"}}],[11,"default","","",90,{"inputs":[],"output":{"name":"h1024"}}],[11,"default","","",91,{"inputs":[],"output":{"name":"h2048"}}],[11,"hash","","",82,null],[11,"hash","","",83,null],[11,"hash","","",84,null],[11,"hash","","",85,null],[11,"hash","","",86,null],[11,"hash","","",87,null],[11,"hash","","",88,null],[11,"hash","","",89,null],[11,"hash","","",90,null],[11,"hash","","",91,null],[11,"partial_cmp","","",82,null],[11,"partial_cmp","","",83,null],[11,"partial_cmp","","",84,null],[11,"partial_cmp","","",85,null],[11,"partial_cmp","","",86,null],[11,"partial_cmp","","",87,null],[11,"partial_cmp","","",88,null],[11,"partial_cmp","","",89,null],[11,"partial_cmp","","",90,null],[11,"partial_cmp","","",91,null],[11,"from_str","","",82,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",83,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",84,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",85,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",86,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",87,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",88,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",89,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",90,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",91,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"deref_mut","","",82,null],[11,"deref_mut","","",83,null],[11,"deref_mut","","",84,null],[11,"deref_mut","","",85,null],[11,"deref_mut","","",86,null],[11,"deref_mut","","",87,null],[11,"deref_mut","","",88,null],[11,"deref_mut","","",89,null],[11,"deref_mut","","",90,null],[11,"deref_mut","","",91,null],[11,"as_ref","","",82,null],[11,"as_ref","","",83,null],[11,"as_ref","","",84,null],[11,"as_ref","","",85,null],[11,"as_ref","","",86,null],[11,"as_ref","","",87,null],[11,"as_ref","","",88,null],[11,"as_ref","","",89,null],[11,"as_ref","","",90,null],[11,"as_ref","","",91,null],[11,"bitxor","","",82,null],[11,"bitxor","","",83,null],[11,"bitxor","","",84,null],[11,"bitxor","","",85,null],[11,"bitxor","","",86,null],[11,"bitxor","","",87,null],[11,"bitxor","","",88,null],[11,"bitxor","","",89,null],[11,"bitxor","","",90,null],[11,"bitxor","","",91,null],[11,"rand","ethcore_util::standard::option","",70,{"inputs":[{"name":"r"}],"output":{"name":"option"}}],[11,"heap_size_of_children","","",70,null],[11,"heap_size_of_children","ethcore_util::standard::result","",69,null],[11,"heap_size_of_children","ethcore_util::standard","",155,null],[11,"limit","ethcore_util::standard::io","Returns the number of bytes that can be read before this instance will\nreturn EOF.",234,null],[11,"into_inner","","Consumes the `Take`, returning the wrapped reader.",234,null],[11,"error","","Returns the error which caused the call to `into_inner()` to fail.",207,null],[11,"into_inner","","Returns the buffered writer instance which generated the error.",207,null],[11,"new","","Creates a new cursor wrapping the provided underlying I/O object.",215,{"inputs":[{"name":"t"}],"output":{"name":"cursor"}}],[11,"into_inner","","Consumes this cursor, returning the underlying value.",215,null],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",215,null],[11,"get_mut","","Gets a mutable reference to the underlying value in this cursor.",215,null],[11,"position","","Returns the current position of this cursor.",215,null],[11,"set_position","","Sets the position of this cursor.",215,null],[11,"lock","","Locks this handle to the standard input stream, returning a readable\nguard.",231,null],[11,"read_line","","Locks this handle and reads a line of input into the specified buffer.",231,null],[11,"lock","","Locks this handle to the standard output stream, returning a writable\nguard.",217,null],[11,"new","","Creates a new `LineWriter`.",214,{"inputs":[{"name":"w"}],"output":{"name":"linewriter"}}],[11,"with_capacity","","Creates a new `LineWriter` with a specified capacity for the internal\nbuffer.",214,{"inputs":[{"name":"usize"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",214,null],[11,"get_mut","","Gets a mutable reference to the underlying writer.",214,null],[11,"into_inner","","Unwraps this `LineWriter`, returning the underlying writer.",214,null],[11,"lock","","Locks this handle to the standard error stream, returning a writable\nguard.",219,null],[11,"new","","Creates a new `BufReader` with a default buffer capacity.",222,{"inputs":[{"name":"r"}],"output":{"name":"bufreader"}}],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer capacity.",222,{"inputs":[{"name":"usize"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"get_ref","","Gets a reference to the underlying reader.",222,null],[11,"get_mut","","Gets a mutable reference to the underlying reader.",222,null],[11,"into_inner","","Unwraps this `BufReader`, returning the underlying reader.",222,null],[11,"new","","Creates a new I/O error from a known kind of error as well as an\narbitrary error payload.",208,{"inputs":[{"name":"errorkind"},{"name":"e"}],"output":{"name":"error"}}],[11,"last_os_error","","Returns an error representing the last OS error which occurred.",208,{"inputs":[],"output":{"name":"error"}}],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS error code.",208,{"inputs":[{"name":"i32"}],"output":{"name":"error"}}],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",208,null],[11,"get_ref","","Returns a reference to the inner error wrapped by this error (if any).",208,null],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by this error\n(if any).",208,null],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",208,null],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",208,null],[11,"new","","Creates a new `BufWriter` with a default buffer capacity.",213,{"inputs":[{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer capacity.",213,{"inputs":[{"name":"usize"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",213,null],[11,"get_mut","","Gets a mutable reference to the underlying writer.",213,null],[11,"into_inner","","Unwraps this `BufWriter`, returning the underlying writer.",213,null],[11,"open","ethcore_util::standard::fs","Attempts to open a file in read-only mode.",212,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"create","","Opens a file in write-only mode.",212,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",212,null],[11,"sync_data","","This function is similar to [`sync_all`], except that it may not\nsynchronize file metadata to the filesystem.",212,null],[11,"set_len","","Truncates or extends the underlying file, updating the size of\nthis file to become `size`.",212,null],[11,"metadata","","Queries metadata about the underlying file.",212,null],[11,"try_clone","","Creates a new independently owned handle to the underlying file.",212,null],[11,"file_type","","Returns the file type for this metadata.",209,null],[11,"is_dir","","Returns whether this metadata is for a directory.",209,null],[11,"is_file","","Returns whether this metadata is for a regular file.",209,null],[11,"len","","Returns the size of the file, in bytes, this metadata is for.",209,null],[11,"permissions","","Returns the permissions of the file this metadata is for.",209,null],[11,"modified","","Returns the last modification time listed in this metadata.",209,null],[11,"accessed","","Returns the last access time of this metadata.",209,null],[11,"created","","Returns the creation time listed in the this metadata.",209,null],[11,"path","","Returns the full path to the file that this entry represents.",223,null],[11,"metadata","","Return the metadata for the file that this entry points at.",223,null],[11,"file_type","","Return the file type for the file that this entry points at.",223,null],[11,"file_name","","Returns the bare file name of this directory entry without any other\nleading path component.",223,null],[11,"new","","Creates a blank new set of options ready for configuration.",235,{"inputs":[],"output":{"name":"openoptions"}}],[11,"read","","Sets the option for read access.",235,null],[11,"write","","Sets the option for write access.",235,null],[11,"append","","Sets the option for the append mode.",235,null],[11,"truncate","","Sets the option for truncating a previous file.",235,null],[11,"create","","Sets the option for creating a new file.",235,null],[11,"create_new","","Sets the option to always create a new file.",235,null],[11,"open","","Opens a file at `path` with the options specified by `self`.",235,null],[11,"readonly","","Returns whether these permissions describe a readonly file.",210,null],[11,"set_readonly","","Modifies the readonly flag for this set of permissions.",210,null],[11,"is_dir","","Test whether this file type represents a directory.",211,null],[11,"is_file","","Test whether this file type represents a regular file.",211,null],[11,"is_symlink","","Test whether this file type represents a symbolic link.",211,null],[11,"new","","Creates a new set of options with default mode/security settings for all\nplatforms and also non-recursive.",221,{"inputs":[],"output":{"name":"dirbuilder"}}],[11,"recursive","","Indicate that directories create should be created recursively, creating\nall parent directories if they do not exist with the same security and\npermissions settings.",221,null],[11,"create","","Create the specified directory with the options configured in this\nbuilder.",221,null],[11,"as_str","ethcore_util::standard::str","View the underlying data as a subslice of the original data.",174,null],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",160,null],[11,"as_str","","View the underlying data as a subslice of the original data.",173,null],[11,"entry","ethcore_util::standard::fmt","Adds a new entry to the set output.",239,null],[11,"entries","","Adds the contents of an iterator of entries to the set output.",239,null],[11,"finish","","Finishes output and returns any error encountered.",239,null],[11,"field","","Adds a new field to the generated struct output.",240,null],[11,"finish","","Finishes output and returns any error encountered.",240,null],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",200,null],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",200,null],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",200,null],[11,"write_fmt","","Writes some formatted information into this instance",200,null],[11,"flags","","Flags for formatting (packed version of rt::Flag)",200,null],[11,"fill","","Character used as &#39;fill&#39; whenever there is alignment",200,null],[11,"align","","Flag indicating what form of alignment was requested",200,null],[11,"width","","Optionally specified integer width that the output should be",200,null],[11,"precision","","Optionally specified precision for numeric types",200,null],[11,"sign_plus","","Determines if the `+` flag was specified.",200,null],[11,"sign_minus","","Determines if the `-` flag was specified.",200,null],[11,"alternate","","Determines if the `#` flag was specified.",200,null],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",200,null],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",200,null],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",200,null],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",200,null],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",200,null],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",200,null],[11,"field","","Adds a new field to the generated tuple struct output.",241,null],[11,"finish","","Finishes output and returns any error encountered.",241,null],[11,"entry","","Adds a new entry to the map output.",242,null],[11,"entries","","Adds the contents of an iterator of entries to the map output.",242,null],[11,"finish","","Finishes output and returns any error encountered.",242,null],[11,"entry","","Adds a new entry to the list output.",243,null],[11,"entries","","Adds the contents of an iterator of entries to the list output.",243,null],[11,"finish","","Finishes output and returns any error encountered.",243,null],[11,"reverse","ethcore_util::standard::cmp","Reverse the `Ordering`.",24,null],[11,"new","ethcore_util::standard::ptr","Creates a new `Unique`.",199,null],[11,"get","","Dereferences the content.",199,null],[11,"get_mut","","Mutably dereferences the content.",199,null],[11,"new","","Creates a new `Shared`.",162,null],[11,"contains","ethcore_util::standard::ops","# Examples",52,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",52,null],[11,"contains","","# Examples",53,null],[11,"step_by","","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",53,null],[11,"contains","","# Examples",54,null],[11,"contains","","# Examples",55,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",55,null],[11,"contains","","# Examples",56,null],[11,"as_slice","ethcore_util::standard::slice","View the underlying data as a subslice of the original data.",157,null],[11,"into_slice","","View the underlying data as a subslice of the original data.",194,null],[11,"is_ok","ethcore_util::standard::result","Returns true if the result is `Ok`.",69,null],[11,"is_err","","Returns true if the result is `Err`.",69,null],[11,"ok","","Converts from `Result&lt;T, E&gt;` to [`Option&lt;T&gt;`].",69,null],[11,"err","","Converts from `Result&lt;T, E&gt;` to [`Option&lt;E&gt;`].",69,null],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`.",69,null],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`.",69,null],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",69,null],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",69,null],[11,"iter","","Returns an iterator over the possibly contained value.",69,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",69,null],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",69,null],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",69,null],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",69,null],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",69,null],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse, it returns `optb`.",69,null],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",69,null],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",69,null],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",69,null],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",69,null],[11,"is_some","ethcore_util::standard::option","Returns `true` if the option is a `Some` value.",70,null],[11,"is_none","","Returns `true` if the option is a `None` value.",70,null],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`.",70,null],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`.",70,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",70,null],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",70,null],[11,"unwrap_or","","Returns the contained value or a default.",70,null],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",70,null],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value.",70,null],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",70,null],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",70,null],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a [`Result&lt;T, E&gt;`], mapping `Some(v)` to\n[`Ok(v)`] and `None` to [`Err(err)`][Err].",70,null],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a [`Result&lt;T, E&gt;`], mapping `Some(v)` to\n[`Ok(v)`] and `None` to [`Err(err())`][Err].",70,null],[11,"iter","","Returns an iterator over the possibly contained value.",70,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",70,null],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",70,null],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",70,null],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",70,null],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",70,null],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",70,null],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",70,null],[11,"unwrap_or_default","","Returns the contained value or a default",70,null],[11,"is","ethcore_util::standard","Returns true if the boxed type is the same as `T`",73,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",73,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",73,null],[11,"is","","Forwards to the method defined on the type `Any`.",73,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",73,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",73,null],[11,"is","","Forwards to the method defined on the type `Any`.",73,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",73,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",73,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",73,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",73,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",73,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"new","","Constructs a new `Arc&lt;T&gt;`.",155,{"inputs":[{"name":"t"}],"output":{"name":"arc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Arc&lt;T&gt;` has exactly one strong reference.",155,{"inputs":[{"name":"arc"}],"output":{"name":"result"}}],[11,"downgrade","","Downgrades the `Arc&lt;T&gt;` to a `Weak&lt;T&gt;` reference.",155,{"inputs":[{"name":"arc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",155,{"inputs":[{"name":"arc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",155,{"inputs":[{"name":"arc"}],"output":{"name":"usize"}}],[11,"ptr_eq","","Return whether two `Arc` references point to the same value\n(not just values that compare equal).",155,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"bool"}}],[11,"make_mut","","Make a mutable reference into the given `Arc&lt;T&gt;`.\nIf the `Arc&lt;T&gt;` has more than one strong reference, or any weak\nreferences, the inner data is cloned.",155,{"inputs":[{"name":"arc"}],"output":{"name":"t"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Arc&lt;T&gt;` has\none strong reference and no weak references.",155,{"inputs":[{"name":"arc"}],"output":{"name":"option"}}],[11,"from_reader","","Decodes a json value from an `&amp;mut io::Read`",74,{"inputs":[{"name":"read"}],"output":{"name":"result"}}],[11,"from_str","","Decodes a json value from a string",74,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"pretty","","Borrow this json object as a pretty object to generate a pretty\nrepresentation for it via `Display`.",74,null],[11,"find","","If the Json value is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",74,null],[11,"find_path","","Attempts to get a nested Json Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the Json value associated with the final key.",74,null],[11,"search","","If the Json value is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the Json value is not an Object, returns None.",74,null],[11,"is_object","","Returns true if the Json value is an Object. Returns false otherwise.",74,null],[11,"as_object","","If the Json value is an Object, returns the associated BTreeMap.\nReturns None otherwise.",74,null],[11,"as_object_mut","","If the Json value is an Object, returns the associated mutable BTreeMap.\nReturns None otherwise.",74,null],[11,"is_array","","Returns true if the Json value is an Array. Returns false otherwise.",74,null],[11,"as_array","","If the Json value is an Array, returns the associated vector.\nReturns None otherwise.",74,null],[11,"as_array_mut","","If the Json value is an Array, returns the associated mutable vector.\nReturns None otherwise.",74,null],[11,"is_string","","Returns true if the Json value is a String. Returns false otherwise.",74,null],[11,"as_string","","If the Json value is a String, returns the associated str.\nReturns None otherwise.",74,null],[11,"is_number","","Returns true if the Json value is a Number. Returns false otherwise.",74,null],[11,"is_i64","","Returns true if the Json value is a i64. Returns false otherwise.",74,null],[11,"is_u64","","Returns true if the Json value is a u64. Returns false otherwise.",74,null],[11,"is_f64","","Returns true if the Json value is a f64. Returns false otherwise.",74,null],[11,"as_i64","","If the Json value is a number, return or cast it to a i64.\nReturns None otherwise.",74,null],[11,"as_u64","","If the Json value is a number, return or cast it to a u64.\nReturns None otherwise.",74,null],[11,"as_f64","","If the Json value is a number, return or cast it to a f64.\nReturns None otherwise.",74,null],[11,"is_boolean","","Returns true if the Json value is a Boolean. Returns false otherwise.",74,null],[11,"as_boolean","","If the Json value is a Boolean, returns the associated bool.\nReturns None otherwise.",74,null],[11,"is_null","","Returns true if the Json value is a Null. Returns false otherwise.",74,null],[11,"as_null","","If the Json value is a Null, returns ().\nReturns None otherwise.",74,null],[11,"new","","Creates a new condition variable which is ready to be waited on and\nnotified.",204,{"inputs":[],"output":{"name":"condvar"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",204,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",204,null],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",204,null],[11,"wait_until","","Waits on this condition variable for a notification, timing out after\nthe specified time instant.",204,null],[11,"wait_for","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",204,null],[11,"new","","Creates a new mutex in an unlocked state ready for use.",205,{"inputs":[{"name":"t"}],"output":{"name":"mutex"}}],[11,"into_inner","","Consumes this mutex, returning the underlying data.",205,null],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",205,null],[11,"try_lock","","Attempts to acquire this lock.",205,null],[11,"try_lock_for","","Attempts to acquire this lock until a timeout is reached.",205,null],[11,"try_lock_until","","Attempts to acquire this lock until a timeout is reached.",205,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",205,null],[11,"raw_unlock","","Releases the mutex.",205,null],[11,"raw_unlock_fair","","Releases the mutex using a fair unlock protocol.",205,null],[11,"raw_lock","","Acquires a mutex, blocking the current thread until it is able to do so.",205,null],[11,"raw_try_lock","","Attempts to acquire this lock.",205,null],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",201,null],[11,"new","","Creates a new instance of an `RwLock&lt;T&gt;` which is unlocked.",206,{"inputs":[{"name":"t"}],"output":{"name":"rwlock"}}],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",206,null],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",206,null],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",206,null],[11,"try_read_for","","Attempts to acquire this rwlock with shared read access until a timeout\nis reached.",206,null],[11,"try_read_until","","Attempts to acquire this rwlock with shared read access until a timeout\nis reached.",206,null],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",206,null],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",206,null],[11,"try_write_for","","Attempts to acquire this rwlock with exclusive write access until a\ntimeout is reached.",206,null],[11,"try_write_until","","Attempts to acquire this rwlock with exclusive write access until a\ntimeout is reached.",206,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",206,null],[11,"raw_unlock_read","","Releases shared read access of the rwlock.",206,null],[11,"raw_unlock_write","","Releases exclusive write access of the rwlock.",206,null],[11,"raw_unlock_read_fair","","Releases shared read access of the rwlock using a fair unlock protocol.",206,null],[11,"raw_unlock_write_fair","","Releases exclusive write access of the rwlock using a fair unlock\nprotocol.",206,null],[11,"raw_read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",206,null],[11,"raw_try_read","","Attempts to acquire this rwlock with shared read access.",206,null],[11,"raw_write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",206,null],[11,"raw_try_write","","Attempts to lock this rwlock with exclusive write access.",206,null],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",202,null],[11,"downgrade","","Atomically downgrades a write lock into a read lock without allowing any\nwriters to take exclusive access of the lock in the meantime.",203,null],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",203,null],[11,"hex","ethcore_util::common::hash","Get a hex representation.",82,null],[11,"hex","","Get a hex representation.",83,null],[11,"hex","","Get a hex representation.",84,null],[11,"hex","","Get a hex representation.",85,null],[11,"hex","","Get a hex representation.",86,null],[11,"hex","","Get a hex representation.",87,null],[11,"hex","","Get a hex representation.",88,null],[11,"hex","","Get a hex representation.",89,null],[11,"hex","","Get a hex representation.",90,null],[11,"hex","","Get a hex representation.",91,null],[11,"normal","ethcore_util::log","Return a Style with the foreground colour set to this colour.",148,null],[11,"paint","","Paints the given text with this colour, returning an ANSI string.\nThis is a short-cut so you don&#39;t have to use Blue.normal() just\nto get blue text.",148,null],[11,"bold","","Returns a Style with the bold property set.",148,null],[11,"dimmed","","Returns a Style with the dimmed property set.",148,null],[11,"italic","","Returns a Style with the italic property set.",148,null],[11,"underline","","Returns a Style with the underline property set.",148,null],[11,"blink","","Returns a Style with the blink property set.",148,null],[11,"reverse","","Returns a Style with the reverse property set.",148,null],[11,"hidden","","Returns a Style with the hidden property set.",148,null],[11,"on","","Returns a Style with the background colour property set.",148,null],[11,"new","","Creates a new Style with no differences.",236,{"inputs":[],"output":{"name":"style"}}],[11,"paint","","Paints the given text with this colour, returning an ANSI string.",236,null],[11,"bold","","Returns a Style with the bold property set.",236,null],[11,"dimmed","","Returns a Style with the dimmed property set.",236,null],[11,"italic","","Returns a Style with the italic property set.",236,null],[11,"underline","","Returns a Style with the underline property set.",236,null],[11,"blink","","Returns a Style with the blink property set.",236,null],[11,"reverse","","Returns a Style with the reverse property set.",236,null],[11,"hidden","","Returns a Style with the hidden property set.",236,null],[11,"on","","Returns a Style with the background colour property set.",236,null]],"paths":[[8,"Bloomable"],[8,"Write"],[8,"Read"],[8,"Seek"],[8,"BufRead"],[4,"SeekFrom"],[4,"CharsError"],[4,"ErrorKind"],[8,"FromStr"],[8,"Pattern"],[4,"SearchStep"],[8,"Searcher"],[8,"ReverseSearcher"],[8,"LowerExp"],[8,"Write"],[8,"Binary"],[8,"UpperExp"],[8,"Display"],[8,"Debug"],[8,"Octal"],[8,"UpperHex"],[8,"LowerHex"],[8,"Pointer"],[8,"PartialEq"],[4,"Ordering"],[8,"Ord"],[8,"PartialOrd"],[8,"Drop"],[8,"Add"],[8,"Sub"],[8,"Mul"],[8,"Div"],[8,"Rem"],[8,"Neg"],[8,"Not"],[8,"BitAnd"],[8,"BitOr"],[8,"BitXor"],[8,"Shl"],[8,"Shr"],[8,"AddAssign"],[8,"SubAssign"],[8,"MulAssign"],[8,"DivAssign"],[8,"RemAssign"],[8,"BitAndAssign"],[8,"BitOrAssign"],[8,"BitXorAssign"],[8,"ShlAssign"],[8,"ShrAssign"],[8,"Index"],[8,"IndexMut"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"RangeInclusive"],[3,"RangeToInclusive"],[8,"Deref"],[8,"DerefMut"],[8,"Fn"],[8,"FnMut"],[8,"FnOnce"],[8,"Place"],[8,"Placer"],[8,"InPlace"],[8,"Boxed"],[8,"BoxPlace"],[8,"Carrier"],[8,"SliceConcatExt"],[4,"Result"],[4,"Option"],[8,"Hash"],[8,"Hasher"],[8,"StdError"],[4,"Json"],[8,"FromBase64"],[8,"FromHex"],[4,"FromHexError"],[8,"HeapSizeOf"],[8,"Itertools"],[8,"FromJson"],[8,"FixedHash"],[3,"H32"],[3,"H64"],[3,"H128"],[3,"H160"],[3,"H256"],[3,"H264"],[3,"H512"],[3,"H520"],[3,"H1024"],[3,"H2048"],[3,"Mismatch"],[3,"OutOfBounds"],[4,"BaseDataError"],[4,"UtilError"],[4,"BytesRef"],[8,"ToPretty"],[3,"PrettySlice"],[4,"Filth"],[8,"SharedPrefix"],[8,"Hashable"],[8,"HashDB"],[8,"AsHashDB"],[3,"MemoryDB"],[3,"Config"],[4,"Error"],[8,"Migration"],[8,"SimpleMigration"],[3,"Batch"],[3,"Manager"],[3,"Progress"],[3,"OverlayDB"],[4,"Algorithm"],[8,"JournalDB"],[3,"CompactionProfile"],[3,"DatabaseConfig"],[3,"DBTransaction"],[3,"DatabaseIterator"],[3,"Database"],[4,"TrieError"],[4,"TrieSpec"],[4,"TrieKinds"],[3,"StandardMap"],[4,"Alphabet"],[4,"ValueMode"],[3,"Score"],[3,"Journal"],[4,"Node"],[3,"TrieDB"],[3,"TrieDBIterator"],[3,"TrieDBMut"],[3,"SecTrieDB"],[3,"SecTrieDBMut"],[3,"Record"],[8,"Recorder"],[3,"NoOp"],[3,"BasicRecorder"],[3,"FatDB"],[3,"FatDBIterator"],[3,"FatDBMut"],[8,"Trie"],[8,"TrieMut"],[3,"TrieFactory"],[3,"NibbleSlice"],[3,"NibbleSliceIterator"],[3,"NibbleVec"],[3,"SemanticVersion"],[4,"Colour"],[3,"RotatingLogger"],[3,"InvalidInput"],[3,"Histogram"],[3,"MemoryLruCache"],[3,"PerfTimer"],[3,"Path"],[3,"Arc"],[3,"EncodeUtf16"],[3,"Iter"],[3,"RangeFull"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Error"],[3,"Shared"],[3,"Iter"],[3,"Iter"],[3,"Split"],[3,"Windows"],[3,"Chunks"],[3,"IntoIter"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"Arguments"],[3,"IterMut"],[3,"IterMut"],[3,"IntoIter"],[3,"SplitMut"],[3,"ChunksMut"],[3,"IterMut"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Unique"],[3,"Formatter"],[3,"MutexGuard"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"Condvar"],[3,"Mutex"],[3,"RwLock"],[3,"IntoInnerError"],[3,"Error"],[3,"Metadata"],[3,"Permissions"],[3,"FileType"],[3,"File"],[3,"BufWriter"],[3,"LineWriter"],[3,"Cursor"],[3,"Sink"],[3,"Stdout"],[3,"StdoutLock"],[3,"Stderr"],[3,"StderrLock"],[3,"DirBuilder"],[3,"BufReader"],[3,"DirEntry"],[3,"ReadDir"],[3,"Bytes"],[3,"Chars"],[3,"Split"],[3,"Lines"],[3,"Empty"],[3,"Repeat"],[3,"Stdin"],[3,"StdinLock"],[3,"Chain"],[3,"Take"],[3,"OpenOptions"],[3,"Style"],[3,"SplitWhitespace"],[3,"PlainHasher"],[3,"DebugSet"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugMap"],[3,"DebugList"]]};
searchIndex["ethstore"] = {"doc":"","items":[[3,"SafeAccount","ethstore","",null,null],[12,"id","","",0,null],[12,"version","","",0,null],[12,"address","","",0,null],[12,"crypto","","",0,null],[12,"filename","","",0,null],[12,"name","","",0,null],[12,"meta","","",0,null],[3,"EthStore","","",null,null],[3,"PresaleWallet","","",null,null],[4,"Error","","",null,null],[13,"Io","","",1,null],[13,"InvalidPassword","","",1,null],[13,"InvalidSecret","","",1,null],[13,"InvalidAccount","","",1,null],[13,"InvalidMessage","","",1,null],[13,"InvalidKeyFile","","",1,null],[13,"CreationFailed","","",1,null],[13,"EthKey","","",1,null],[13,"EthCrypto","","",1,null],[13,"Custom","","",1,null],[5,"import_accounts","","",null,{"inputs":[{"name":"keydirectory"},{"name":"keydirectory"}],"output":{"name":"result"}}],[5,"read_geth_accounts","","Provide a `HashSet` of all accounts available for import from the Geth keystore.",null,{"inputs":[{"name":"bool"}],"output":{"name":"vec"}}],[5,"random_phrase","","Generate a string which is a random phrase of a number of lowercase words.",null,{"inputs":[{"name":"usize"}],"output":{"name":"string"}}],[0,"dir","","",null,null],[3,"DiskDirectory","ethstore::dir","",null,null],[3,"GethDirectory","","",null,null],[3,"ParityDirectory","","",null,null],[4,"DirectoryType","","",null,null],[13,"Testnet","","",2,null],[13,"Main","","",2,null],[11,"create","","",3,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"at","","",3,{"inputs":[{"name":"p"}],"output":{"name":"self"}}],[11,"load","","",3,null],[11,"insert","","",3,null],[11,"remove","","",3,null],[11,"path","","",3,null],[11,"create","","",4,{"inputs":[{"name":"directorytype"}],"output":{"name":"result"}}],[11,"open","","",4,{"inputs":[{"name":"directorytype"}],"output":{"name":"self"}}],[11,"load","","",4,null],[11,"insert","","",4,null],[11,"remove","","",4,null],[11,"create","","",5,{"inputs":[{"name":"directorytype"}],"output":{"name":"result"}}],[11,"open","","",5,{"inputs":[{"name":"directorytype"}],"output":{"name":"self"}}],[11,"load","","",5,null],[11,"insert","","",5,null],[11,"remove","","",5,null],[8,"KeyDirectory","","",null,null],[10,"load","","",6,null],[10,"insert","","",6,null],[10,"remove","","",6,null],[11,"path","","",6,null],[0,"ethkey","ethstore","ethkey reexport to make documentation look pretty.",null,null],[11,"fmt","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"clone","","",0,null],[11,"into","","",0,null],[11,"create","","",0,null],[11,"from_file","","Create a new `SafeAccount` from the given `json`; if it was read from a\nfile, the `filename` should be `Some` name. If it is as yet anonymous, then it\ncan be left `None`.",0,{"inputs":[{"name":"keyfile"},{"name":"option"}],"output":{"name":"self"}}],[11,"sign","","",0,null],[11,"decrypt","","",0,null],[11,"public","","",0,null],[11,"change_password","","",0,null],[11,"check_password","","",0,null],[11,"fmt","","",1,null],[11,"fmt","","",1,null],[11,"from","","",1,{"inputs":[{"name":"ioerror"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"ethkeyerror"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"ethcryptoerror"}],"output":{"name":"self"}}],[11,"open","","",7,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"open_with_iterations","","",7,{"inputs":[{"name":"box"},{"name":"u32"}],"output":{"name":"result"}}],[11,"insert_account","","",7,null],[11,"import_presale","","",7,null],[11,"import_wallet","","",7,null],[11,"accounts","","",7,null],[11,"change_password","","",7,null],[11,"remove_account","","",7,null],[11,"sign","","",7,null],[11,"decrypt","","",7,null],[11,"public","","",7,null],[11,"uuid","","",7,null],[11,"name","","",7,null],[11,"meta","","",7,null],[11,"set_name","","",7,null],[11,"set_meta","","",7,null],[11,"local_path","","",7,null],[11,"list_geth_accounts","","",7,null],[11,"import_geth_accounts","","",7,null],[11,"from","","",8,{"inputs":[{"name":"presalewallet"}],"output":{"name":"self"}}],[11,"open","","",8,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"decrypt","","",8,null],[8,"SecretStore","","",null,null],[10,"insert_account","","",9,null],[10,"import_presale","","",9,null],[10,"import_wallet","","",9,null],[10,"change_password","","",9,null],[10,"remove_account","","",9,null],[10,"sign","","",9,null],[10,"decrypt","","",9,null],[10,"public","","",9,null],[10,"accounts","","",9,null],[10,"uuid","","",9,null],[10,"name","","",9,null],[10,"meta","","",9,null],[10,"set_name","","",9,null],[10,"set_meta","","",9,null],[10,"local_path","","",9,null],[10,"list_geth_accounts","","",9,null],[10,"import_geth_accounts","","",9,null]],"paths":[[3,"SafeAccount"],[4,"Error"],[4,"DirectoryType"],[3,"DiskDirectory"],[3,"GethDirectory"],[3,"ParityDirectory"],[8,"KeyDirectory"],[3,"EthStore"],[3,"PresaleWallet"],[8,"SecretStore"]]};
searchIndex["ethash"] = {"doc":"Ethash implementation\nSee https://github.com/ethereum/wiki/wiki/Ethash","items":[[3,"ProofOfWork","ethash","Computation result",null,null],[12,"value","","Difficulty boundary",0,null],[12,"mix_hash","","Mix",0,null],[3,"SeedHashCompute","","",null,null],[3,"EthashManager","","Light/Full cache manager.",null,null],[5,"quick_get_difficulty","","Difficulty quick check for POW preverification",null,{"inputs":[{"name":"h256"},{"name":"u64"},{"name":"h256"}],"output":{"name":"h256"}}],[5,"slow_get_seedhash","","",null,{"inputs":[{"name":"u64"}],"output":{"name":"h256"}}],[11,"new","","",1,{"inputs":[],"output":{"name":"seedhashcompute"}}],[11,"get_seedhash","","",1,null],[11,"resume_compute_seedhash","","",1,{"inputs":[{"name":"h256"},{"name":"u64"},{"name":"u64"}],"output":{"name":"h256"}}],[6,"H256","","",null,null],[17,"ETHASH_EPOCH_LENGTH","","",null,null],[11,"new","","Create a new new instance of ethash manager",2,{"inputs":[],"output":{"name":"ethashmanager"}}],[11,"compute_light","","Calculate the light client data\n`block_number` - Block number to check\n`light` - The light client handler\n`header_hash` - The header hash to pack into the mix\n`nonce` - The nonce to pack into the mix",2,null]],"paths":[[3,"ProofOfWork"],[3,"SeedHashCompute"],[3,"EthashManager"]]};
searchIndex["ethkey"] = {"doc":"","items":[[3,"SECP256K1","ethkey","",null,null],[3,"Brain","","Simple brainwallet.",null,null],[3,"KeyPair","","secp256k1 key pair",null,null],[3,"Prefix","","Tries to find keypair with address starting with given prefix.",null,null],[3,"Random","","Randomly generates new keypair.",null,null],[3,"Signature","","",null,null],[4,"Error","","Crypto error",null,null],[13,"InvalidSecret","","Invalid secret key",0,null],[13,"InvalidPublic","","Invalid public key",0,null],[13,"InvalidAddress","","Invalid address",0,null],[13,"InvalidSignature","","Invalid EC signature",0,null],[13,"InvalidMessage","","Invalid AES message",0,null],[13,"Io","","IO Error",0,null],[13,"Custom","","Custom",0,null],[5,"public_to_address","","",null,{"inputs":[{"name":"public"}],"output":{"name":"address"}}],[5,"sign","","",null,{"inputs":[{"name":"secret"},{"name":"message"}],"output":{"name":"result"}}],[5,"verify_public","","",null,{"inputs":[{"name":"public"},{"name":"signature"},{"name":"message"}],"output":{"name":"result"}}],[5,"verify_address","","",null,{"inputs":[{"name":"address"},{"name":"signature"},{"name":"message"}],"output":{"name":"result"}}],[5,"recover","","",null,{"inputs":[{"name":"signature"},{"name":"message"}],"output":{"name":"result"}}],[11,"new","","",1,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"generate","","",1,null],[11,"fmt","","",0,null],[11,"fmt","","",0,null],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"fmt","","",2,null],[11,"from_secret","","Create a pair from secret key",2,{"inputs":[{"name":"secret"}],"output":{"name":"result"}}],[11,"from_keypair","","",2,{"inputs":[{"name":"secretkey"},{"name":"publickey"}],"output":{"name":"self"}}],[11,"secret","","",2,null],[11,"public","","",2,null],[11,"address","","",2,null],[11,"new","","",3,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"self"}}],[11,"generate","","",3,null],[11,"generate","","",4,null],[11,"r","","Get a slice into the &#39;r&#39; portion of the data.",5,null],[11,"s","","Get a slice into the &#39;s&#39; portion of the data.",5,null],[11,"v","","Get the recovery byte.",5,null],[11,"from_rsv","","Create a signature object from the sig.",5,{"inputs":[{"name":"h256"},{"name":"h256"},{"name":"u8"}],"output":{"name":"signature"}}],[11,"is_low_s","","Check if this is a &quot;low&quot; signature.",5,null],[11,"is_valid","","Check if each component of the signature is in range.",5,null],[11,"eq","","",5,null],[11,"fmt","","",5,null],[11,"fmt","","",5,null],[11,"from_str","","",5,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"default","","",5,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",5,null],[11,"into","","",5,null],[11,"from","","",5,{"inputs":[{"name":"h520"}],"output":{"name":"self"}}],[11,"deref","","",5,null],[11,"deref_mut","","",5,null],[6,"Address","","",null,null],[6,"Secret","","",null,null],[6,"Message","","",null,null],[6,"Public","","",null,null],[8,"Generator","","Generates new keypair.",null,null],[10,"generate","","Should be called to generate new keypair.",6,null],[11,"deref","","",7,null]],"paths":[[4,"Error"],[3,"Brain"],[3,"KeyPair"],[3,"Prefix"],[3,"Random"],[3,"Signature"],[8,"Generator"],[3,"SECP256K1"]]};
searchIndex["ethcore_io"] = {"doc":"General IO module.","items":[[3,"IoContext","ethcore_io","IO access point. This is passed to all IO handlers and provides an interface to the IO subsystem.",null,null],[3,"IoService","","General IO Service. Starts an event loop and dispatches IO requests.\n&#39;Message&#39; is a notification message type",null,null],[3,"IoChannel","","Allows sending messages into the event loop. All the IO handlers will get the message\nin the `message` callback.",null,null],[3,"IoManager","","Root IO handler. Manages user handlers, messages and IO timers.",null,null],[3,"PanicHandler","","Structure that allows to catch panics and notify listeners",null,null],[4,"IoError","","IO Error",null,null],[13,"Mio","","Low level error from mio crate",0,null],[13,"StdIo","","Error concerning the Rust standard library&#39;s IO subsystem.",0,null],[11,"new","","Create a new IO access point. Takes references to all the data that can be updated within the IO handler.",1,{"inputs":[{"name":"iochannel"},{"name":"usize"}],"output":{"name":"iocontext"}}],[11,"register_timer","","Register a new recurring IO timer. &#39;IoHandler::timeout&#39; will be called with the token.",1,null],[11,"register_timer_once","","Register a new IO timer once. &#39;IoHandler::timeout&#39; will be called with the token.",1,null],[11,"clear_timer","","Delete a timer.",1,null],[11,"register_stream","","Register a new IO stream.",1,null],[11,"deregister_stream","","Deregister an IO stream.",1,null],[11,"update_registration","","Reregister an IO stream.",1,null],[11,"message","","Broadcast a message to other IO clients",1,null],[11,"channel","","Get message channel",1,null],[11,"unregister_handler","","Unregister current IO handler.",1,null],[11,"start","","Creates a new instance and registers it with the event loop.",2,{"inputs":[{"name":"arc"},{"name":"eventloop"},{"name":"arc"}],"output":{"name":"result"}}],[11,"ready","","",2,null],[11,"timeout","","",2,null],[11,"notify","","",2,null],[11,"clone","","",3,null],[11,"send","","Send a message through the channel",3,null],[11,"send_sync","","Send a message through the channel and handle it synchronously",3,null],[11,"send_io","","Send low level io message",3,null],[11,"disconnected","","Create a new channel to connected to event loop.",3,{"inputs":[],"output":{"name":"iochannel"}}],[11,"on_panic","","",4,null],[11,"start","","Starts IO event loop",4,{"inputs":[],"output":{"name":"result"}}],[11,"register_handler","","Regiter an IO handler with the event loop.",4,null],[11,"send_message","","Send a message over the network. Normaly `HostIo::send` should be used. This can be used from non-io threads.",4,null],[11,"channel","","Create a new message channel",4,null],[11,"drop","","",4,null],[11,"default","","",5,{"inputs":[],"output":{"name":"self"}}],[11,"new_in_arc","","Creates new `PanicHandler` wrapped in `Arc`",5,{"inputs":[],"output":{"name":"arc"}}],[11,"new","","Creates new `PanicHandler`",5,{"inputs":[],"output":{"name":"self"}}],[11,"catch_panic","","Invoke closure and catch any possible panics.\nIn case of panic notifies all listeners about it.",5,null],[11,"notify_all","","Notifies all listeners in case there is a panic.\nYou should use `catch_panic` instead of calling this method explicitly.",5,null],[11,"on_panic","","",5,null],[6,"TimerToken","","Timer ID",null,null],[6,"StreamToken","","Timer ID",null,null],[7,"LOCAL_STACK_SIZE","","Stack size\nShould be modified if it is changed in Rust since it is no way\nto know or get it",null,null],[17,"TOKENS_PER_HANDLER","","Maximum number of tokens a handler can use",null,null],[8,"IoHandler","","Generic IO handler.\nAll the handler function are called from within IO event loop.\n`Message` type is used as notification data",null,null],[11,"initialize","","Initialize the handler",6,null],[11,"timeout","","Timer function called after a timeout created with `HandlerIo::timeout`.",6,null],[11,"message","","Called when a broadcasted message is received. The message can only be sent from a different IO handler.",6,null],[11,"stream_hup","","Called when an IO stream gets closed",6,null],[11,"stream_readable","","Called when an IO stream can be read from",6,null],[11,"stream_writable","","Called when an IO stream can be written to",6,null],[11,"register_stream","","Register a new stream with the event loop",6,null],[11,"update_stream","","Re-register a stream with the event loop",6,null],[11,"deregister_stream","","Deregister a stream. Called whenstream is removed from event loop",6,null],[8,"MayPanic","","Trait indicating that the structure catches some of the panics (most probably from spawned threads)\nand it&#39;s possbile to be notified when one of the threads panics.",null,null],[10,"on_panic","","`closure` will be invoked whenever panic in thread is caught",7,null],[8,"OnPanicListener","","Thread-safe closure for handling possible panics",null,null],[10,"call","","Invoke listener",8,null],[8,"ForwardPanic","","Forwards panics from child",null,null],[10,"forward_from","","Attach `on_panic` listener to `child` and rethrow all panics",9,null],[11,"fmt","","",0,null],[11,"fmt","","",0,null],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"ioerror"}}],[11,"from","","",0,{"inputs":[{"name":"notifyerror"}],"output":{"name":"ioerror"}}]],"paths":[[4,"IoError"],[3,"IoContext"],[3,"IoManager"],[3,"IoChannel"],[3,"IoService"],[3,"PanicHandler"],[8,"IoHandler"],[8,"MayPanic"],[8,"OnPanicListener"],[8,"ForwardPanic"]]};
searchIndex["rlp"] = {"doc":"Recursive Length Prefix serialization crate.","items":[[3,"UntrustedRlp","rlp","Data-oriented view onto rlp-slice.",null,null],[3,"UntrustedRlpIterator","","Iterator over rlp-slice list elements.",null,null],[3,"PayloadInfo","","Stores basic information about item",null,null],[12,"header_len","","Header length in bytes",0,null],[12,"value_len","","Value length in bytes",0,null],[3,"Rlp","","Data-oriented view onto trusted rlp-slice.",null,null],[3,"RlpIterator","","Iterator over trusted rlp-slice list elements.",null,null],[3,"RlpStream","","Appendable rlp encoder.",null,null],[4,"DecoderError","","Error concerning the RLP decoder.",null,null],[13,"FromBytesError","","Couldn&#39;t convert given bytes to an instance of required type.",1,null],[13,"RlpIsTooBig","","Data has additional bytes at the end of the valid RLP fragment.",1,null],[13,"RlpIsTooShort","","Data has too few bytes for valid RLP.",1,null],[13,"RlpExpectedToBeList","","Expect an encoded list, RLP was something else.",1,null],[13,"RlpExpectedToBeData","","Expect encoded data, RLP was something else.",1,null],[13,"RlpIncorrectListLen","","Expected a different size list.",1,null],[13,"RlpDataLenWithZeroPrefix","","Data length number has a prefixed zero byte, invalid for numbers.",1,null],[13,"RlpListLenWithZeroPrefix","","List length number has a prefixed zero byte, invalid for numbers.",1,null],[13,"RlpInvalidIndirection","","Non-canonical (longer than necessary) representation used for data or list.",1,null],[13,"RlpInconsistentLengthAndData","","Declared length is inconsistent with data specified after.",1,null],[13,"Custom","","Custom rlp decoding error.",1,null],[4,"Prototype","","RLP prototype",null,null],[13,"Null","","Empty",2,null],[13,"Data","","Value",2,null],[13,"List","","List",2,null],[4,"RlpType","","Type of RLP indicating its origin database.",null,null],[13,"Blocks","","RLP used in blocks database.",3,null],[13,"Snapshot","","RLP used in snapshots.",3,null],[5,"decode","","Shortcut function to decode trusted rlp",null,null],[5,"encode","","Shortcut function to encode structure into rlp.",null,{"inputs":[{"name":"e"}],"output":{"name":"elasticarray1024"}}],[0,"rlptraits","","Common RLP traits",null,null],[8,"Decoder","rlp::rlptraits","Type is able to decode RLP.",null,null],[10,"read_value","","Read a value from the RLP into a given type.",4,null],[10,"as_rlp","","Get underlying `UntrustedRLP` object.",4,null],[10,"as_raw","","Get underlying raw bytes slice.",4,null],[8,"Decodable","","RLP decodable trait",null,null],[10,"decode","","Decode a value from RLP bytes",5,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[8,"RlpDecodable","","Internal helper trait. Implement `Decodable` for custom types.",null,null],[10,"decode","","Decode a value from RLP bytes",6,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[8,"View","","A view into RLP encoded data",null,null],[16,"Prototype","","RLP prototype type",7,null],[16,"PayloadInfo","","Payload info type",7,null],[16,"Data","","Data type",7,null],[16,"Item","","Item type",7,null],[16,"Iter","","Iterator type",7,null],[10,"new","","Creates a new instance of `Rlp` reader",7,null],[10,"as_raw","","The raw data of the RLP as slice.",7,null],[10,"prototype","","Get the prototype of the RLP.",7,null],[10,"payload_info","","Get payload info.",7,null],[10,"data","","Get underlieing data.",7,null],[10,"item_count","","Returns number of RLP items.",7,null],[10,"size","","Returns the number of bytes in the data, or zero if it isn&#39;t data.",7,null],[10,"at","","Get view onto RLP-slice at index.",7,null],[10,"is_null","","No value",7,null],[10,"is_empty","","Contains a zero-length string or zero-length list.",7,null],[10,"is_list","","List value",7,null],[10,"is_data","","String value",7,null],[10,"is_int","","Int value",7,null],[10,"iter","","Get iterator over rlp-slices",7,null],[10,"as_val","","Decode data into an object",7,null],[10,"val_at","","Decode data at given list index into an object",7,null],[8,"Encoder","","Raw RLP encoder",null,null],[10,"emit_value","","Write a value represented as bytes",8,null],[10,"emit_raw","","Write raw preencoded data to the output",8,null],[8,"ByteEncodable","","Primitive data type encodable to RLP",null,null],[10,"to_bytes","","Serialize this object to given byte container",9,null],[10,"bytes_len","","Get size of serialised data in bytes",9,null],[8,"Encodable","","Structure encodable to RLP. Implement this trait for",null,null],[10,"rlp_append","","Append a value to the stream",10,null],[11,"rlp_bytes","","Get rlp-encoded bytes for this instance",10,null],[8,"RlpEncodable","","Encodable wrapper trait required to handle special case of encoding a &amp;[u8] as string and not as list",null,null],[10,"rlp_append","","Append a value to the stream",11,null],[8,"Stream","","RLP encoding stream",null,null],[10,"new","","Initializes instance of empty `Stream`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"new_list","","Initializes the `Stream` as a list.",12,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[10,"append","","Apends value to the end of stream, chainable.",12,null],[10,"begin_list","","Declare appending the list of given size, chainable.",12,null],[10,"append_empty_data","","Apends null to the end of stream, chainable.",12,null],[10,"append_raw","","Appends raw (pre-serialised) RLP data. Use with caution. Chainable.",12,null],[10,"clear","","Clear the output stream so far.",12,null],[10,"is_finished","","Returns true if stream doesnt expect any more items.",12,null],[10,"as_raw","","Get raw encoded bytes",12,null],[10,"out","","Streams out encoded bytes.",12,null],[8,"Compressible","","Trait for compressing and decompressing RLP by replacement of common terms.",null,null],[16,"DataType","","Indicates the origin of RLP to be compressed.",13,null],[10,"compress","","Compress given RLP type using appropriate methods.",13,null],[10,"decompress","","Decompress given RLP type using appropriate methods.",13,null],[11,"fmt","rlp","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"description","","",1,null],[11,"fmt","","",1,null],[11,"from","","",1,{"inputs":[{"name":"frombyteserror"}],"output":{"name":"decodererror"}}],[11,"from","","",14,{"inputs":[{"name":"untrustedrlp"}],"output":{"name":"rlp"}}],[11,"fmt","","",14,null],[11,"fmt","","",14,null],[11,"new","","Create a new instance of `Rlp`",14,null],[11,"as_raw","","",14,null],[11,"prototype","","",14,null],[11,"payload_info","","",14,null],[11,"data","","",14,null],[11,"item_count","","",14,null],[11,"size","","",14,null],[11,"at","","",14,null],[11,"is_null","","",14,null],[11,"is_empty","","",14,null],[11,"is_list","","",14,null],[11,"is_data","","",14,null],[11,"is_int","","",14,null],[11,"iter","","",14,null],[11,"as_val","","",14,null],[11,"val_at","","",14,null],[11,"as_val","","Decode into an object",14,null],[11,"val_at","","Decode list item at given index into an object",14,null],[11,"next","","",15,null],[11,"fmt","","",2,null],[11,"total","","Total size of the RLP.",0,null],[11,"from","","Create a new object from the given bytes RLP. The bytes",0,null],[11,"fmt","","",16,null],[11,"clone","","",16,null],[11,"fmt","","",16,null],[11,"new","","",16,null],[11,"as_raw","","",16,null],[11,"prototype","","",16,null],[11,"payload_info","","",16,null],[11,"data","","",16,null],[11,"item_count","","",16,null],[11,"size","","",16,null],[11,"at","","",16,null],[11,"is_null","","",16,null],[11,"is_empty","","",16,null],[11,"is_list","","",16,null],[11,"is_data","","",16,null],[11,"is_int","","",16,null],[11,"iter","","",16,null],[11,"as_val","","",16,null],[11,"val_at","","",16,null],[11,"next","","",17,null],[11,"default","","",18,{"inputs":[],"output":{"name":"self"}}],[11,"new","","",18,{"inputs":[],"output":{"name":"self"}}],[11,"new_list","","",18,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"append","","",18,null],[11,"begin_list","","",18,null],[11,"append_empty_data","","",18,null],[11,"append_raw","","",18,null],[11,"clear","","",18,null],[11,"is_finished","","",18,null],[11,"as_raw","","",18,null],[11,"out","","",18,null],[11,"drain","","Drain the object and return the underlying ElasticArray.",18,null],[11,"compress","","",16,null],[11,"decompress","","",16,null],[17,"NULL_RLP","","The RLP encoded empty data (used to mean &quot;null value&quot;).",null,null],[17,"EMPTY_LIST_RLP","","The RLP encoded empty list.",null,null]],"paths":[[3,"PayloadInfo"],[4,"DecoderError"],[4,"Prototype"],[4,"RlpType"],[8,"Decoder"],[8,"Decodable"],[8,"RlpDecodable"],[8,"View"],[8,"Encoder"],[8,"ByteEncodable"],[8,"Encodable"],[8,"RlpEncodable"],[8,"Stream"],[8,"Compressible"],[3,"Rlp"],[3,"RlpIterator"],[3,"UntrustedRlp"],[3,"UntrustedRlpIterator"],[3,"RlpStream"]]};
searchIndex["ethcore_bigint"] = {"doc":"Efficient large, fixed-size big integers and hashes.","items":[[0,"uint","ethcore_bigint","Big unsigned integer types.",null,null],[3,"U512","ethcore_bigint::uint","Little-endian large integer type",null,null],[12,"0","","",0,null],[3,"U256","","Little-endian large integer type",null,null],[12,"0","","",1,null],[3,"U128","","Little-endian large integer type",null,null],[12,"0","","",2,null],[4,"FromDecStrErr","","Conversion from decimal string error",null,null],[13,"InvalidCharacter","","Char not from range 0-9",3,null],[13,"InvalidLength","","Value does not fit into type",3,null],[8,"Uint","","Large, fixed-length unsigned integer type.",null,null],[10,"zero","","Returns new instance equalling zero.",4,{"inputs":[],"output":{"name":"self"}}],[10,"one","","Returns new instance equalling one.",4,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","Returns the largest value that can be represented by this integer type.",4,{"inputs":[],"output":{"name":"self"}}],[10,"from_dec_str","","Convert from a decimal string.",4,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[10,"low_u32","","Conversion to u32",4,null],[10,"low_u64","","Conversion to u64",4,null],[10,"as_u32","","Conversion to u32 with overflow checking",4,null],[10,"as_u64","","Conversion to u64 with overflow checking",4,null],[10,"bits","","Return the least number of bits needed to represent the number",4,null],[10,"bit","","Return if specific bit is set",4,null],[10,"byte","","Return single byte",4,null],[10,"to_big_endian","","Convert U256 to the sequence of bytes with a big endian",4,null],[10,"exp10","","Create `Uint(10**n)`",4,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[10,"pow","","Return eponentation `self**other`. Panic on overflow.",4,null],[10,"overflowing_pow","","Return wrapped eponentation `self**other` and flag if there was an overflow",4,null],[10,"overflowing_add","","Add this `Uint` to other returning result and possible overflow",4,null],[10,"overflowing_sub","","Subtract another `Uint` from this returning result and possible overflow",4,null],[10,"overflowing_mul","","Multiple this `Uint` with other returning result and possible overflow",4,null],[10,"overflowing_div","","Divide this `Uint` by other returning result and possible overflow",4,null],[10,"overflowing_rem","","Returns reminder of division of this `Uint` by other and possible overflow",4,null],[10,"overflowing_neg","","Returns negation of this `Uint` and overflow (always true)",4,null],[10,"is_zero","","Returns",4,null],[11,"fmt","","",3,null],[11,"eq","","",3,null],[11,"clone","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"hash","","",0,null],[11,"from_dec_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"low_u32","","",0,null],[11,"low_u64","","",0,null],[11,"as_u32","","Conversion to u32 with overflow checking",0,null],[11,"as_u64","","Conversion to u64 with overflow checking",0,null],[11,"is_zero","","",0,null],[11,"bits","","Return the least number of bits needed to represent the number",0,null],[11,"bit","","",0,null],[11,"byte","","",0,null],[11,"to_big_endian","","",0,null],[11,"exp10","","",0,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"zero","","",0,{"inputs":[],"output":{"name":"self"}}],[11,"one","","",0,{"inputs":[],"output":{"name":"self"}}],[11,"max_value","","",0,{"inputs":[],"output":{"name":"self"}}],[11,"pow","","Fast exponentation by squaring\nhttps://en.wikipedia.org/wiki/Exponentiation_by_squaring",0,null],[11,"overflowing_pow","","Fast exponentation by squaring\nhttps://en.wikipedia.org/wiki/Exponentiation_by_squaring",0,null],[11,"overflowing_add","","Optimized instructions",0,null],[11,"overflowing_sub","","",0,null],[11,"overflowing_mul","","",0,null],[11,"overflowing_div","","",0,null],[11,"overflowing_rem","","",0,null],[11,"overflowing_neg","","",0,null],[11,"default","","",0,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"u64"}],"output":{"name":"u512"}}],[11,"from","","",0,{"inputs":[{"name":"u8"}],"output":{"name":"u512"}}],[11,"from","","",0,{"inputs":[{"name":"u16"}],"output":{"name":"u512"}}],[11,"from","","",0,{"inputs":[{"name":"u32"}],"output":{"name":"u512"}}],[11,"from","","",0,{"inputs":[{"name":"usize"}],"output":{"name":"u512"}}],[11,"from","","",0,{"inputs":[{"name":"i64"}],"output":{"name":"u512"}}],[11,"from","","",0,{"inputs":[{"name":"i8"}],"output":{"name":"u512"}}],[11,"from","","",0,{"inputs":[{"name":"i16"}],"output":{"name":"u512"}}],[11,"from","","",0,{"inputs":[{"name":"i32"}],"output":{"name":"u512"}}],[11,"from","","",0,{"inputs":[{"name":"isize"}],"output":{"name":"u512"}}],[11,"from","","",0,null],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"mul","","",0,null],[11,"div","","",0,null],[11,"rem","","",0,null],[11,"bitand","","",0,null],[11,"bitxor","","",0,null],[11,"bitor","","",0,null],[11,"not","","",0,null],[11,"shl","","",0,null],[11,"shr","","",0,null],[11,"cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"fmt","","",0,null],[11,"fmt","","",0,null],[11,"fmt","","",0,null],[11,"from","","",0,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"clone","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"hash","","",1,null],[11,"from_dec_str","","",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"low_u32","","",1,null],[11,"low_u64","","",1,null],[11,"as_u32","","Conversion to u32 with overflow checking",1,null],[11,"as_u64","","Conversion to u64 with overflow checking",1,null],[11,"is_zero","","",1,null],[11,"bits","","Return the least number of bits needed to represent the number",1,null],[11,"bit","","",1,null],[11,"byte","","",1,null],[11,"to_big_endian","","",1,null],[11,"exp10","","",1,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"zero","","",1,{"inputs":[],"output":{"name":"self"}}],[11,"one","","",1,{"inputs":[],"output":{"name":"self"}}],[11,"max_value","","",1,{"inputs":[],"output":{"name":"self"}}],[11,"pow","","Fast exponentation by squaring\nhttps://en.wikipedia.org/wiki/Exponentiation_by_squaring",1,null],[11,"overflowing_pow","","Fast exponentation by squaring\nhttps://en.wikipedia.org/wiki/Exponentiation_by_squaring",1,null],[11,"overflowing_add","","Optimized instructions",1,null],[11,"overflowing_sub","","",1,null],[11,"overflowing_mul","","",1,null],[11,"overflowing_div","","",1,null],[11,"overflowing_rem","","",1,null],[11,"overflowing_neg","","",1,null],[11,"default","","",1,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"u64"}],"output":{"name":"u256"}}],[11,"from","","",1,{"inputs":[{"name":"u8"}],"output":{"name":"u256"}}],[11,"from","","",1,{"inputs":[{"name":"u16"}],"output":{"name":"u256"}}],[11,"from","","",1,{"inputs":[{"name":"u32"}],"output":{"name":"u256"}}],[11,"from","","",1,{"inputs":[{"name":"usize"}],"output":{"name":"u256"}}],[11,"from","","",1,{"inputs":[{"name":"i64"}],"output":{"name":"u256"}}],[11,"from","","",1,{"inputs":[{"name":"i8"}],"output":{"name":"u256"}}],[11,"from","","",1,{"inputs":[{"name":"i16"}],"output":{"name":"u256"}}],[11,"from","","",1,{"inputs":[{"name":"i32"}],"output":{"name":"u256"}}],[11,"from","","",1,{"inputs":[{"name":"isize"}],"output":{"name":"u256"}}],[11,"from","","",1,null],[11,"from_str","","",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"add","","",1,null],[11,"sub","","",1,null],[11,"mul","","",1,null],[11,"div","","",1,null],[11,"rem","","",1,null],[11,"bitand","","",1,null],[11,"bitxor","","",1,null],[11,"bitor","","",1,null],[11,"not","","",1,null],[11,"shl","","",1,null],[11,"shr","","",1,null],[11,"cmp","","",1,null],[11,"partial_cmp","","",1,null],[11,"fmt","","",1,null],[11,"fmt","","",1,null],[11,"fmt","","",1,null],[11,"from","","",1,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"clone","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"hash","","",2,null],[11,"from_dec_str","","",2,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"low_u32","","",2,null],[11,"low_u64","","",2,null],[11,"as_u32","","Conversion to u32 with overflow checking",2,null],[11,"as_u64","","Conversion to u64 with overflow checking",2,null],[11,"is_zero","","",2,null],[11,"bits","","Return the least number of bits needed to represent the number",2,null],[11,"bit","","",2,null],[11,"byte","","",2,null],[11,"to_big_endian","","",2,null],[11,"exp10","","",2,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"zero","","",2,{"inputs":[],"output":{"name":"self"}}],[11,"one","","",2,{"inputs":[],"output":{"name":"self"}}],[11,"max_value","","",2,{"inputs":[],"output":{"name":"self"}}],[11,"pow","","Fast exponentation by squaring\nhttps://en.wikipedia.org/wiki/Exponentiation_by_squaring",2,null],[11,"overflowing_pow","","Fast exponentation by squaring\nhttps://en.wikipedia.org/wiki/Exponentiation_by_squaring",2,null],[11,"overflowing_add","","Optimized instructions",2,null],[11,"overflowing_sub","","",2,null],[11,"overflowing_mul","","",2,null],[11,"overflowing_div","","",2,null],[11,"overflowing_rem","","",2,null],[11,"overflowing_neg","","",2,null],[11,"default","","",2,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",2,{"inputs":[{"name":"u64"}],"output":{"name":"u128"}}],[11,"from","","",2,{"inputs":[{"name":"u8"}],"output":{"name":"u128"}}],[11,"from","","",2,{"inputs":[{"name":"u16"}],"output":{"name":"u128"}}],[11,"from","","",2,{"inputs":[{"name":"u32"}],"output":{"name":"u128"}}],[11,"from","","",2,{"inputs":[{"name":"usize"}],"output":{"name":"u128"}}],[11,"from","","",2,{"inputs":[{"name":"i64"}],"output":{"name":"u128"}}],[11,"from","","",2,{"inputs":[{"name":"i8"}],"output":{"name":"u128"}}],[11,"from","","",2,{"inputs":[{"name":"i16"}],"output":{"name":"u128"}}],[11,"from","","",2,{"inputs":[{"name":"i32"}],"output":{"name":"u128"}}],[11,"from","","",2,{"inputs":[{"name":"isize"}],"output":{"name":"u128"}}],[11,"from","","",2,null],[11,"from_str","","",2,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"add","","",2,null],[11,"sub","","",2,null],[11,"mul","","",2,null],[11,"div","","",2,null],[11,"rem","","",2,null],[11,"bitand","","",2,null],[11,"bitxor","","",2,null],[11,"bitor","","",2,null],[11,"not","","",2,null],[11,"shl","","",2,null],[11,"shr","","",2,null],[11,"cmp","","",2,null],[11,"partial_cmp","","",2,null],[11,"fmt","","",2,null],[11,"fmt","","",2,null],[11,"fmt","","",2,null],[11,"from","","",2,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"full_mul","","Multiplies two 256-bit integers to produce full 512-bit integer\nNo overflow possible",1,null],[11,"from","","",0,{"inputs":[{"name":"u256"}],"output":{"name":"u512"}}],[11,"from","","",1,{"inputs":[{"name":"u512"}],"output":{"name":"u256"}}],[11,"from","","",0,{"inputs":[{"name":"u256"}],"output":{"name":"u512"}}],[11,"from","","",1,{"inputs":[{"name":"u512"}],"output":{"name":"u256"}}],[11,"from","","",2,{"inputs":[{"name":"u256"}],"output":{"name":"u128"}}],[11,"from","","",2,{"inputs":[{"name":"u512"}],"output":{"name":"u128"}}],[11,"from","","",0,{"inputs":[{"name":"u128"}],"output":{"name":"u512"}}],[11,"from","","",1,{"inputs":[{"name":"u128"}],"output":{"name":"u256"}}],[11,"heap_size_of_children","","",2,null],[11,"heap_size_of_children","","",1,null],[0,"hash","ethcore_bigint","General hash types, a fixed-size raw-data type used as the output of hash functions.",null,null],[3,"H32","ethcore_bigint::hash","Unformatted binary data of fixed length.",null,null],[12,"0","","",5,null],[3,"H64","","Unformatted binary data of fixed length.",null,null],[12,"0","","",6,null],[3,"H128","","Unformatted binary data of fixed length.",null,null],[12,"0","","",7,null],[3,"H160","","Unformatted binary data of fixed length.",null,null],[12,"0","","",8,null],[3,"H256","","Unformatted binary data of fixed length.",null,null],[12,"0","","",9,null],[3,"H264","","Unformatted binary data of fixed length.",null,null],[12,"0","","",10,null],[3,"H512","","Unformatted binary data of fixed length.",null,null],[12,"0","","",11,null],[3,"H520","","Unformatted binary data of fixed length.",null,null],[12,"0","","",12,null],[3,"H1024","","Unformatted binary data of fixed length.",null,null],[12,"0","","",13,null],[3,"H2048","","Unformatted binary data of fixed length.",null,null],[12,"0","","",14,null],[3,"PlainHasher","","Hasher that just takes 8 bytes of the provided value.\nMay only be used for keys which are 32 bytes.",null,null],[5,"clean_0x","","Return `s` without the `0x` at the beginning of it, if any.",null,{"inputs":[{"name":"str"}],"output":{"name":"str"}}],[6,"H256FastMap","","Specialized version of `HashMap` with H256 keys and fast hashing function.",null,null],[6,"H256FastSet","","Specialized version of `HashSet` with H256 keys and fast hashing function.",null,null],[8,"FixedHash","","Trait for a fixed-size byte array to be used as the output of hash functions.",null,null],[10,"new","","Create a new, zero-initialised, instance.",15,{"inputs":[],"output":{"name":"self"}}],[10,"zero","","Synonym for `new()`. Prefer to new as it&#39;s more readable.",15,{"inputs":[],"output":{"name":"self"}}],[10,"random","","Create a new, cryptographically random, instance.",15,{"inputs":[],"output":{"name":"self"}}],[10,"randomize","","Assign self have a cryptographically random value.",15,null],[10,"len","","Get the size of this object in bytes.",15,{"inputs":[],"output":{"name":"usize"}}],[10,"from_slice","","Convert a slice of bytes of length `len()` to an instance of this type.",15,null],[10,"clone_from_slice","","Assign self to be of the same value as a slice of bytes of length `len()`.",15,null],[10,"copy_to","","Copy the data of this object into some mutable slice of length `len()`.",15,null],[10,"contains","","Returns `true` if all bits set in `b` are also set in `self`.",15,null],[10,"is_zero","","Returns `true` if no bits are set.",15,null],[10,"low_u64","","Returns the lowest 8 bytes interpreted as a BigEndian integer.",15,null],[11,"from","","",9,{"inputs":[{"name":"u256"}],"output":{"name":"h256"}}],[11,"from","","",9,{"inputs":[{"name":"u256"}],"output":{"name":"h256"}}],[11,"from","ethcore_bigint::uint","",1,{"inputs":[{"name":"h256"}],"output":{"name":"u256"}}],[11,"from","","",1,{"inputs":[{"name":"h256"}],"output":{"name":"u256"}}],[11,"from","ethcore_bigint::hash","",8,{"inputs":[{"name":"h256"}],"output":{"name":"h160"}}],[11,"from","","",6,{"inputs":[{"name":"h256"}],"output":{"name":"h64"}}],[11,"from","","",9,{"inputs":[{"name":"h160"}],"output":{"name":"h256"}}],[11,"from","","",9,{"inputs":[{"name":"h160"}],"output":{"name":"h256"}}],[11,"from","","",5,null],[11,"deref","","",5,null],[11,"as_ref","","",5,null],[11,"deref_mut","","",5,null],[11,"new","","",5,{"inputs":[],"output":{"name":"h32"}}],[11,"zero","","",5,{"inputs":[],"output":{"name":"h32"}}],[11,"random","","",5,{"inputs":[],"output":{"name":"h32"}}],[11,"randomize","","",5,null],[11,"len","","",5,{"inputs":[],"output":{"name":"usize"}}],[11,"clone_from_slice","","",5,null],[11,"from_slice","","",5,null],[11,"copy_to","","",5,null],[11,"contains","","",5,null],[11,"is_zero","","",5,null],[11,"low_u64","","",5,null],[11,"from_str","","",5,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",5,null],[11,"fmt","","",5,null],[11,"clone","","",5,null],[11,"eq","","",5,null],[11,"cmp","","",5,null],[11,"partial_cmp","","",5,null],[11,"hash","","",5,null],[11,"index","","",5,null],[11,"index_mut","","",5,null],[11,"index","","",5,null],[11,"index_mut","","",5,null],[11,"index","","",5,null],[11,"index_mut","","",5,null],[11,"bitor","","",5,null],[11,"bitand","","",5,null],[11,"bitxor","","",5,null],[11,"hex","","Get a hex representation.",5,null],[11,"default","","",5,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",5,{"inputs":[{"name":"u64"}],"output":{"name":"h32"}}],[11,"from","","",5,{"inputs":[{"name":"str"}],"output":{"name":"h32"}}],[11,"from","","",5,null],[11,"from","","",6,null],[11,"deref","","",6,null],[11,"as_ref","","",6,null],[11,"deref_mut","","",6,null],[11,"new","","",6,{"inputs":[],"output":{"name":"h64"}}],[11,"zero","","",6,{"inputs":[],"output":{"name":"h64"}}],[11,"random","","",6,{"inputs":[],"output":{"name":"h64"}}],[11,"randomize","","",6,null],[11,"len","","",6,{"inputs":[],"output":{"name":"usize"}}],[11,"clone_from_slice","","",6,null],[11,"from_slice","","",6,null],[11,"copy_to","","",6,null],[11,"contains","","",6,null],[11,"is_zero","","",6,null],[11,"low_u64","","",6,null],[11,"from_str","","",6,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",6,null],[11,"fmt","","",6,null],[11,"clone","","",6,null],[11,"eq","","",6,null],[11,"cmp","","",6,null],[11,"partial_cmp","","",6,null],[11,"hash","","",6,null],[11,"index","","",6,null],[11,"index_mut","","",6,null],[11,"index","","",6,null],[11,"index_mut","","",6,null],[11,"index","","",6,null],[11,"index_mut","","",6,null],[11,"bitor","","",6,null],[11,"bitand","","",6,null],[11,"bitxor","","",6,null],[11,"hex","","Get a hex representation.",6,null],[11,"default","","",6,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"u64"}],"output":{"name":"h64"}}],[11,"from","","",6,{"inputs":[{"name":"str"}],"output":{"name":"h64"}}],[11,"from","","",6,null],[11,"from","","",7,null],[11,"deref","","",7,null],[11,"as_ref","","",7,null],[11,"deref_mut","","",7,null],[11,"new","","",7,{"inputs":[],"output":{"name":"h128"}}],[11,"zero","","",7,{"inputs":[],"output":{"name":"h128"}}],[11,"random","","",7,{"inputs":[],"output":{"name":"h128"}}],[11,"randomize","","",7,null],[11,"len","","",7,{"inputs":[],"output":{"name":"usize"}}],[11,"clone_from_slice","","",7,null],[11,"from_slice","","",7,null],[11,"copy_to","","",7,null],[11,"contains","","",7,null],[11,"is_zero","","",7,null],[11,"low_u64","","",7,null],[11,"from_str","","",7,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",7,null],[11,"fmt","","",7,null],[11,"clone","","",7,null],[11,"eq","","",7,null],[11,"cmp","","",7,null],[11,"partial_cmp","","",7,null],[11,"hash","","",7,null],[11,"index","","",7,null],[11,"index_mut","","",7,null],[11,"index","","",7,null],[11,"index_mut","","",7,null],[11,"index","","",7,null],[11,"index_mut","","",7,null],[11,"bitor","","",7,null],[11,"bitand","","",7,null],[11,"bitxor","","",7,null],[11,"hex","","Get a hex representation.",7,null],[11,"default","","",7,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",7,{"inputs":[{"name":"u64"}],"output":{"name":"h128"}}],[11,"from","","",7,{"inputs":[{"name":"str"}],"output":{"name":"h128"}}],[11,"from","","",7,null],[11,"from","","",8,null],[11,"deref","","",8,null],[11,"as_ref","","",8,null],[11,"deref_mut","","",8,null],[11,"new","","",8,{"inputs":[],"output":{"name":"h160"}}],[11,"zero","","",8,{"inputs":[],"output":{"name":"h160"}}],[11,"random","","",8,{"inputs":[],"output":{"name":"h160"}}],[11,"randomize","","",8,null],[11,"len","","",8,{"inputs":[],"output":{"name":"usize"}}],[11,"clone_from_slice","","",8,null],[11,"from_slice","","",8,null],[11,"copy_to","","",8,null],[11,"contains","","",8,null],[11,"is_zero","","",8,null],[11,"low_u64","","",8,null],[11,"from_str","","",8,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",8,null],[11,"fmt","","",8,null],[11,"clone","","",8,null],[11,"eq","","",8,null],[11,"cmp","","",8,null],[11,"partial_cmp","","",8,null],[11,"hash","","",8,null],[11,"index","","",8,null],[11,"index_mut","","",8,null],[11,"index","","",8,null],[11,"index_mut","","",8,null],[11,"index","","",8,null],[11,"index_mut","","",8,null],[11,"bitor","","",8,null],[11,"bitand","","",8,null],[11,"bitxor","","",8,null],[11,"hex","","Get a hex representation.",8,null],[11,"default","","",8,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",8,{"inputs":[{"name":"u64"}],"output":{"name":"h160"}}],[11,"from","","",8,{"inputs":[{"name":"str"}],"output":{"name":"h160"}}],[11,"from","","",8,null],[11,"from","","",9,null],[11,"deref","","",9,null],[11,"as_ref","","",9,null],[11,"deref_mut","","",9,null],[11,"new","","",9,{"inputs":[],"output":{"name":"h256"}}],[11,"zero","","",9,{"inputs":[],"output":{"name":"h256"}}],[11,"random","","",9,{"inputs":[],"output":{"name":"h256"}}],[11,"randomize","","",9,null],[11,"len","","",9,{"inputs":[],"output":{"name":"usize"}}],[11,"clone_from_slice","","",9,null],[11,"from_slice","","",9,null],[11,"copy_to","","",9,null],[11,"contains","","",9,null],[11,"is_zero","","",9,null],[11,"low_u64","","",9,null],[11,"from_str","","",9,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",9,null],[11,"fmt","","",9,null],[11,"clone","","",9,null],[11,"eq","","",9,null],[11,"cmp","","",9,null],[11,"partial_cmp","","",9,null],[11,"hash","","",9,null],[11,"index","","",9,null],[11,"index_mut","","",9,null],[11,"index","","",9,null],[11,"index_mut","","",9,null],[11,"index","","",9,null],[11,"index_mut","","",9,null],[11,"bitor","","",9,null],[11,"bitand","","",9,null],[11,"bitxor","","",9,null],[11,"hex","","Get a hex representation.",9,null],[11,"default","","",9,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",9,{"inputs":[{"name":"u64"}],"output":{"name":"h256"}}],[11,"from","","",9,{"inputs":[{"name":"str"}],"output":{"name":"h256"}}],[11,"from","","",9,null],[11,"from","","",10,null],[11,"deref","","",10,null],[11,"as_ref","","",10,null],[11,"deref_mut","","",10,null],[11,"new","","",10,{"inputs":[],"output":{"name":"h264"}}],[11,"zero","","",10,{"inputs":[],"output":{"name":"h264"}}],[11,"random","","",10,{"inputs":[],"output":{"name":"h264"}}],[11,"randomize","","",10,null],[11,"len","","",10,{"inputs":[],"output":{"name":"usize"}}],[11,"clone_from_slice","","",10,null],[11,"from_slice","","",10,null],[11,"copy_to","","",10,null],[11,"contains","","",10,null],[11,"is_zero","","",10,null],[11,"low_u64","","",10,null],[11,"from_str","","",10,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",10,null],[11,"fmt","","",10,null],[11,"clone","","",10,null],[11,"eq","","",10,null],[11,"cmp","","",10,null],[11,"partial_cmp","","",10,null],[11,"hash","","",10,null],[11,"index","","",10,null],[11,"index_mut","","",10,null],[11,"index","","",10,null],[11,"index_mut","","",10,null],[11,"index","","",10,null],[11,"index_mut","","",10,null],[11,"bitor","","",10,null],[11,"bitand","","",10,null],[11,"bitxor","","",10,null],[11,"hex","","Get a hex representation.",10,null],[11,"default","","",10,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",10,{"inputs":[{"name":"u64"}],"output":{"name":"h264"}}],[11,"from","","",10,{"inputs":[{"name":"str"}],"output":{"name":"h264"}}],[11,"from","","",10,null],[11,"from","","",11,null],[11,"deref","","",11,null],[11,"as_ref","","",11,null],[11,"deref_mut","","",11,null],[11,"new","","",11,{"inputs":[],"output":{"name":"h512"}}],[11,"zero","","",11,{"inputs":[],"output":{"name":"h512"}}],[11,"random","","",11,{"inputs":[],"output":{"name":"h512"}}],[11,"randomize","","",11,null],[11,"len","","",11,{"inputs":[],"output":{"name":"usize"}}],[11,"clone_from_slice","","",11,null],[11,"from_slice","","",11,null],[11,"copy_to","","",11,null],[11,"contains","","",11,null],[11,"is_zero","","",11,null],[11,"low_u64","","",11,null],[11,"from_str","","",11,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",11,null],[11,"fmt","","",11,null],[11,"clone","","",11,null],[11,"eq","","",11,null],[11,"cmp","","",11,null],[11,"partial_cmp","","",11,null],[11,"hash","","",11,null],[11,"index","","",11,null],[11,"index_mut","","",11,null],[11,"index","","",11,null],[11,"index_mut","","",11,null],[11,"index","","",11,null],[11,"index_mut","","",11,null],[11,"bitor","","",11,null],[11,"bitand","","",11,null],[11,"bitxor","","",11,null],[11,"hex","","Get a hex representation.",11,null],[11,"default","","",11,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",11,{"inputs":[{"name":"u64"}],"output":{"name":"h512"}}],[11,"from","","",11,{"inputs":[{"name":"str"}],"output":{"name":"h512"}}],[11,"from","","",11,null],[11,"from","","",12,null],[11,"deref","","",12,null],[11,"as_ref","","",12,null],[11,"deref_mut","","",12,null],[11,"new","","",12,{"inputs":[],"output":{"name":"h520"}}],[11,"zero","","",12,{"inputs":[],"output":{"name":"h520"}}],[11,"random","","",12,{"inputs":[],"output":{"name":"h520"}}],[11,"randomize","","",12,null],[11,"len","","",12,{"inputs":[],"output":{"name":"usize"}}],[11,"clone_from_slice","","",12,null],[11,"from_slice","","",12,null],[11,"copy_to","","",12,null],[11,"contains","","",12,null],[11,"is_zero","","",12,null],[11,"low_u64","","",12,null],[11,"from_str","","",12,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",12,null],[11,"fmt","","",12,null],[11,"clone","","",12,null],[11,"eq","","",12,null],[11,"cmp","","",12,null],[11,"partial_cmp","","",12,null],[11,"hash","","",12,null],[11,"index","","",12,null],[11,"index_mut","","",12,null],[11,"index","","",12,null],[11,"index_mut","","",12,null],[11,"index","","",12,null],[11,"index_mut","","",12,null],[11,"bitor","","",12,null],[11,"bitand","","",12,null],[11,"bitxor","","",12,null],[11,"hex","","Get a hex representation.",12,null],[11,"default","","",12,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",12,{"inputs":[{"name":"u64"}],"output":{"name":"h520"}}],[11,"from","","",12,{"inputs":[{"name":"str"}],"output":{"name":"h520"}}],[11,"from","","",12,null],[11,"from","","",13,null],[11,"deref","","",13,null],[11,"as_ref","","",13,null],[11,"deref_mut","","",13,null],[11,"new","","",13,{"inputs":[],"output":{"name":"h1024"}}],[11,"zero","","",13,{"inputs":[],"output":{"name":"h1024"}}],[11,"random","","",13,{"inputs":[],"output":{"name":"h1024"}}],[11,"randomize","","",13,null],[11,"len","","",13,{"inputs":[],"output":{"name":"usize"}}],[11,"clone_from_slice","","",13,null],[11,"from_slice","","",13,null],[11,"copy_to","","",13,null],[11,"contains","","",13,null],[11,"is_zero","","",13,null],[11,"low_u64","","",13,null],[11,"from_str","","",13,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",13,null],[11,"fmt","","",13,null],[11,"clone","","",13,null],[11,"eq","","",13,null],[11,"cmp","","",13,null],[11,"partial_cmp","","",13,null],[11,"hash","","",13,null],[11,"index","","",13,null],[11,"index_mut","","",13,null],[11,"index","","",13,null],[11,"index_mut","","",13,null],[11,"index","","",13,null],[11,"index_mut","","",13,null],[11,"bitor","","",13,null],[11,"bitand","","",13,null],[11,"bitxor","","",13,null],[11,"hex","","Get a hex representation.",13,null],[11,"default","","",13,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",13,{"inputs":[{"name":"u64"}],"output":{"name":"h1024"}}],[11,"from","","",13,{"inputs":[{"name":"str"}],"output":{"name":"h1024"}}],[11,"from","","",13,null],[11,"from","","",14,null],[11,"deref","","",14,null],[11,"as_ref","","",14,null],[11,"deref_mut","","",14,null],[11,"new","","",14,{"inputs":[],"output":{"name":"h2048"}}],[11,"zero","","",14,{"inputs":[],"output":{"name":"h2048"}}],[11,"random","","",14,{"inputs":[],"output":{"name":"h2048"}}],[11,"randomize","","",14,null],[11,"len","","",14,{"inputs":[],"output":{"name":"usize"}}],[11,"clone_from_slice","","",14,null],[11,"from_slice","","",14,null],[11,"copy_to","","",14,null],[11,"contains","","",14,null],[11,"is_zero","","",14,null],[11,"low_u64","","",14,null],[11,"from_str","","",14,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",14,null],[11,"fmt","","",14,null],[11,"clone","","",14,null],[11,"eq","","",14,null],[11,"cmp","","",14,null],[11,"partial_cmp","","",14,null],[11,"hash","","",14,null],[11,"index","","",14,null],[11,"index_mut","","",14,null],[11,"index","","",14,null],[11,"index_mut","","",14,null],[11,"index","","",14,null],[11,"index_mut","","",14,null],[11,"bitor","","",14,null],[11,"bitand","","",14,null],[11,"bitxor","","",14,null],[11,"hex","","Get a hex representation.",14,null],[11,"default","","",14,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",14,{"inputs":[{"name":"u64"}],"output":{"name":"h2048"}}],[11,"from","","",14,{"inputs":[{"name":"str"}],"output":{"name":"h2048"}}],[11,"from","","",14,null],[11,"heap_size_of_children","","",5,null],[11,"heap_size_of_children","","",6,null],[11,"heap_size_of_children","","",7,null],[11,"heap_size_of_children","","",8,null],[11,"heap_size_of_children","","",9,null],[11,"heap_size_of_children","","",10,null],[11,"heap_size_of_children","","",11,null],[11,"heap_size_of_children","","",12,null],[11,"heap_size_of_children","","",13,null],[11,"heap_size_of_children","","",14,null],[11,"default","","",16,{"inputs":[],"output":{"name":"plainhasher"}}],[11,"finish","","",16,null],[11,"write","","",16,null],[0,"prelude","ethcore_bigint","A prelude module for re-exporting all the types defined in this crate.",null,null]],"paths":[[3,"U512"],[3,"U256"],[3,"U128"],[4,"FromDecStrErr"],[8,"Uint"],[3,"H32"],[3,"H64"],[3,"H128"],[3,"H160"],[3,"H256"],[3,"H264"],[3,"H512"],[3,"H520"],[3,"H1024"],[3,"H2048"],[8,"FixedHash"],[3,"PlainHasher"]]};
initSearch(searchIndex);
